{
  "version": 3,
  "sources": ["../node_modules/uicore-ts/scripts/UICoreExtensionValueObject.ts", "../node_modules/uicore-ts/scripts/UITimer.ts", "../node_modules/uicore-ts/scripts/UIObject.ts", "../node_modules/uicore-ts/scripts/ClientCheckers.ts", "../node_modules/uicore-ts/scripts/UIColor.ts", "../node_modules/uicore-ts/scripts/UICoreExtensions.ts", "../node_modules/uicore-ts/scripts/UIRoute.ts", "../node_modules/uicore-ts/scripts/UIViewController.ts", "../node_modules/uicore-ts/scripts/UICore.ts", "../node_modules/uicore-ts/scripts/UIPoint.ts", "../node_modules/uicore-ts/scripts/UIRectangle.ts", "../node_modules/uicore-ts/scripts/UIView.ts", "../node_modules/uicore-ts/scripts/UITextView.ts", "../node_modules/uicore-ts/scripts/UITextField.ts", "../node_modules/uicore-ts/scripts/UITextArea.ts", "../node_modules/uicore-ts/scripts/UIBaseButton.ts", "../node_modules/uicore-ts/scripts/UIImageView.ts", "../node_modules/uicore-ts/scripts/UIButton.ts", "../node_modules/uicore-ts/scripts/UINativeScrollView.ts", "../node_modules/uicore-ts/scripts/UITableView.ts", "inline-worker:__inline-worker", "../node_modules/uicore-ts/compiledScripts/UIStringFilterWebWorker.worker.js", "../node_modules/uicore-ts/scripts/UIStringFilter.ts", "../node_modules/uicore-ts/scripts/UIScrollView.ts", "../node_modules/uicore-ts/scripts/UISlideScrollerView.ts", "../node_modules/uicore-ts/scripts/UILink.ts", "../node_modules/uicore-ts/scripts/UILinkButton.ts", "../node_modules/uicore-ts/scripts/UILayoutGrid.ts", "../node_modules/uicore-ts/compiledScripts/UIKeyValueStringFilterWebWorker.worker.js", "../node_modules/uicore-ts/scripts/UIKeyValueStringFilter.ts", "../node_modules/uicore-ts/compiledScripts/UIKeyValueStringSorterWebWorker.worker.js", "../node_modules/uicore-ts/scripts/UIKeyValueStringSorter.ts", "../node_modules/uicore-ts/scripts/UIDialogView.ts", "../node_modules/uicore-ts/scripts/UIDateTimeInput.ts", "../node_modules/uicore-ts/scripts/UIActionIndicator.ts", "../node_modules/uicore-ts/scripts/UIInterfaces.ts", "../node_modules/uicore-ts/scripts/UIRootViewController.ts", "../node_modules/uicore-ts/scripts/index.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UICoreExtensionValueObject.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UITimer.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIObject.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/ClientCheckers.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIColor.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UICoreExtensions.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIRoute.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIViewController.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UICore.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIPoint.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIRectangle.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UITextView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UITextField.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UITextArea.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIBaseButton.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIImageView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIButton.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UINativeScrollView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UITableView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/compiledScripts/UIStringFilterWebWorker.worker.js", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIStringFilter.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIScrollView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UISlideScrollerView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UILink.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UILinkButton.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UILayoutGrid.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/compiledScripts/UIKeyValueStringFilterWebWorker.worker.js", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIKeyValueStringFilter.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/compiledScripts/UIKeyValueStringSorterWebWorker.worker.js", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIKeyValueStringSorter.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIDialogView.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIDateTimeInput.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIActionIndicator.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIInterfaces.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/UIRootViewController.ts", "../node_modules/cbcore-ts/node_modules/uicore-ts/scripts/index.ts", "../node_modules/cbcore-ts/scripts/CBLanguageService.ts", "../node_modules/cbcore-ts/scripts/CBServerClient.ts", "../node_modules/cbcore-ts/node_modules/engine.io-parser/build/cjs/commons.js", "../node_modules/cbcore-ts/node_modules/engine.io-parser/build/cjs/encodePacket.browser.js", "../node_modules/cbcore-ts/node_modules/engine.io-parser/build/cjs/contrib/base64-arraybuffer.js", "../node_modules/cbcore-ts/node_modules/engine.io-parser/build/cjs/decodePacket.browser.js", "../node_modules/cbcore-ts/node_modules/engine.io-parser/build/cjs/index.js", "../node_modules/cbcore-ts/node_modules/@socket.io/component-emitter/index.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/globalThis.browser.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/util.js", "../node_modules/cbcore-ts/node_modules/ms/index.js", "../node_modules/cbcore-ts/node_modules/debug/src/common.js", "../node_modules/cbcore-ts/node_modules/debug/src/browser.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/transport.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/contrib/yeast.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/contrib/parseqs.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/contrib/has-cors.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/transports/xmlhttprequest.browser.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/transports/polling.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/transports/websocket-constructor.browser.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/transports/websocket.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/transports/index.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/contrib/parseuri.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/socket.js", "../node_modules/cbcore-ts/node_modules/engine.io-client/build/cjs/index.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/build/cjs/url.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/node_modules/socket.io-parser/build/cjs/is-binary.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/node_modules/socket.io-parser/build/cjs/binary.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/node_modules/socket.io-parser/build/cjs/index.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/build/cjs/on.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/build/cjs/socket.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/build/cjs/contrib/backo2.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/build/cjs/manager.js", "../node_modules/cbcore-ts/node_modules/socket.io-client/build/cjs/index.js", "../node_modules/cbcore-ts/node_modules/object-hash/dist/object_hash.js", "../node_modules/cbcore-ts/scripts/CBSocketCallbackHolder.ts", "../node_modules/cbcore-ts/scripts/CBSocketClient.ts", "../node_modules/cbcore-ts/scripts/CBCore.ts", "../node_modules/cbcore-ts/scripts/CBDataInterfaces.ts", "../node_modules/cbcore-ts/scripts/index.ts", "../scripts/RootViewController.ts", "../scripts/BottomBarView.ts", "../scripts/Custom components/CBColor.ts", "../scripts/InformationViewController.ts", "../scripts/InternalDropdownSettingsViewController.ts", "../scripts/Custom components/CBButton.ts", "../scripts/Custom components/CBCheckbox.ts", "../scripts/Custom components/CBDialogViewShower.ts", "../scripts/Custom components/CBDialogView.ts", "../scripts/Custom components/CBFlatButton.ts", "../scripts/Custom components/RowView.ts", "../scripts/Custom components/CBTextField.ts", "../scripts/Custom components/SearchableDropdown.ts", "../scripts/Custom components/SearchableDropdownRow.ts", "../scripts/Custom components/SearchTextField.ts", "../scripts/InternalLanguageSettingsViewController.ts", "../scripts/LanguagesDialogView.ts", "../scripts/LanguageService.ts", "../scripts/SomeContentViewController.ts", "../scripts/TopBarView.ts"],
  "sourcesContent": ["export class UICoreExtensionValueObject {\n    \n    isAUICoreExtensionValueObject = true\n    value: any\n    \n    constructor(value: any) {\n        \n        this.value = value\n        \n    }\n    \n}\n", "const YES = true\nconst NO = false\n\n\nexport class UITimer {\n    \n    \n    \n    \n    \n    _intervalID: number\n    \n    isValid: boolean = YES\n    \n    \n    constructor(public interval: number, public repeats: boolean, public target: Function) {\n        \n        this.schedule()\n        \n    }\n    \n    \n    \n    schedule() {\n    \n        const callback = function () {\n            if (this.repeats == NO) {\n                this.invalidate()\n            }\n            this.target()\n        }.bind(this)\n    \n        this._intervalID = window.setInterval(callback, this.interval * 1000)\n        \n    }\n    \n    \n    reschedule() {\n        \n        this.invalidate()\n        this.schedule()\n        \n    }\n    \n    \n    \n    fire() {\n        if (this.repeats == NO) {\n            this.invalidate()\n        }\n        else {\n            this.reschedule()\n        }\n        this.target()\n    }\n    \n    invalidate() {\n        \n        if (this.isValid) {\n            \n            clearInterval(this._intervalID)\n            \n            this.isValid = NO\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UICoreExtensionValueObject } from \"./UICoreExtensionValueObject\"\nimport { UITimer } from \"./UITimer\"\n\n\nexport function NilFunction() {\n    return nil\n}\n\n\n\nexport var nil: any = new Proxy(Object.assign(NilFunction, { \"class\": nil, \"className\": \"Nil\" }), {\n    \n    get(target, name) {\n        \n        if (name == Symbol.toPrimitive) {\n            \n            return function (hint) {\n                if (hint == \"number\") {\n                    return 0\n                }\n                if (hint == \"string\") {\n                    return \"\"\n                }\n                return false\n            }\n            \n        }\n        \n        if (name == \"toString\") {\n            \n            return function toString() {\n                return \"\"\n            }\n            \n        }\n        \n        return NilFunction()\n    },\n    \n    set(target, name, value) {\n        return NilFunction()\n    }\n    \n})\n\n\n\n\n\nexport function wrapInNil<T>(object?: T): T {\n    \n    \n    let result = FIRST_OR_NIL(object)\n    \n    if (object instanceof Object && !(object instanceof Function)) {\n        \n        result = new Proxy(object as Object & T, {\n            \n            get(target, name) {\n                \n                if (name == \"wrapped_nil_target\") {\n                    \n                    return target\n                    \n                }\n                \n                \n                const value = Reflect.get(target, name)\n                \n                if (typeof value === \"object\") {\n                    \n                    return wrapInNil(value)\n                    \n                }\n                \n                if (IS_NOT_LIKE_NULL(value)) {\n                    \n                    return value\n                    \n                }\n                \n                return nil\n                \n            },\n            \n            set(target, name, value) {\n                \n                if (IS(target)) {\n                    \n                    target[name] = value\n                    \n                }\n                \n                return YES\n                \n            }\n            \n        })\n        \n    }\n    \n    return result\n    \n}\n\n\nexport const YES = true\nexport const NO = false\n\nexport function IS(object) {\n    \n    if (object && object !== nil) {\n        \n        return YES\n        \n    }\n    \n    return NO\n    \n    //return (object != nil && object);\n    \n}\n\nexport function IS_NOT(object) {\n    \n    return !IS(object)\n    \n}\n\nexport function IS_DEFINED(object) {\n    \n    if (object != undefined) {\n        \n        return YES\n        \n    }\n    \n    return NO\n    \n}\n\nexport function IS_UNDEFINED(object) {\n    \n    return !IS_DEFINED(object)\n    \n}\n\nexport function IS_NIL(object) {\n    \n    if (object === nil) {\n        \n        return YES\n        \n    }\n    \n    return NO\n    \n}\n\nexport function IS_NOT_NIL(object) {\n    \n    return !IS_NIL(object)\n    \n}\n\n\nexport function IS_LIKE_NULL(object) {\n    \n    return (IS_UNDEFINED(object) || IS_NIL(object) || object == null)\n    \n}\n\nexport function IS_NOT_LIKE_NULL(object) {\n    \n    return !IS_LIKE_NULL(object)\n    \n}\n\n\nexport function IS_AN_EMAIL_ADDRESS(email: string) {\n    const re = /\\S+@\\S+\\.\\S+/\n    return re.test(email)\n}\n\n\nexport function FIRST_OR_NIL<T>(...objects: T[]): T {\n    \n    const result = objects.find(function (object, index, array) {\n        \n        return IS(object)\n        \n    })\n    \n    return result || nil\n    \n}\n\nexport function FIRST<T>(...objects: T[]): T {\n    \n    const result = objects.find(function (object, index, array) {\n        \n        return IS(object)\n        \n    })\n    \n    return result || IF(IS_DEFINED(objects.lastElement))(RETURNER(objects.lastElement))()\n    \n}\n\n\nexport function MAKE_ID(randomPartLength = 15) {\n    \n    let result = \"\"\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n    \n    for (let i = 0; i < randomPartLength; i++) {\n        \n        result = result + characters.charAt(Math.floor(Math.random() * characters.length))\n        \n    }\n    \n    result = result + Date.now()\n    \n    return result\n    \n}\n\n\nexport function RETURNER<T>(value?: T) {\n    \n    return (...objects: any[]) => value\n    \n}\n\n\n\n\n\nexport type UIIFBlockReceiver<T> = (functionToCall: () => any) => UIIFEvaluator<T>;\n\nexport type UIIFEvaluatorBase<T> = () => T;\n\n\nexport interface UIIFEvaluator<T> extends UIIFEvaluatorBase<T> {\n    \n    ELSE_IF: (otherValue: any) => UIIFBlockReceiver<T>;\n    ELSE: (functionToCall: () => any) => T;\n    \n}\n\n\nexport function IF<T = any>(value: any): UIIFBlockReceiver<T> {\n    \n    let thenFunction = nil\n    let elseFunction = nil\n    \n    const result: any = function (functionToCall: () => T) {\n        thenFunction = functionToCall\n        return result.evaluateConditions\n    }\n    \n    \n    result.evaluateConditions = function () {\n        if (IS(value)) {\n            return thenFunction()\n        }\n        return elseFunction()\n    }\n    \n    \n    result.evaluateConditions.ELSE_IF = function (otherValue: any) {\n        \n        const functionResult = IF(otherValue) as (UIIFBlockReceiver<T> & { evaluateConditions: UIIFEvaluator<T> })\n        elseFunction = functionResult.evaluateConditions\n        \n        const functionResultEvaluateConditionsFunction: any = function () {\n            return result.evaluateConditions()\n        }\n        functionResultEvaluateConditionsFunction.ELSE_IF = functionResult.evaluateConditions.ELSE_IF\n        functionResultEvaluateConditionsFunction.ELSE = functionResult.evaluateConditions.ELSE\n        \n        functionResult.evaluateConditions = functionResultEvaluateConditionsFunction\n        \n        return functionResult\n        \n    }\n    \n    \n    result.evaluateConditions.ELSE = function (functionToCall: () => T) {\n        elseFunction = functionToCall\n        return result.evaluateConditions()\n    }\n    \n    \n    return result\n}\n\n\n\n\n\nexport class UIFunctionCall<T extends (...args: any) => any> {\n    \n    isAUIFunctionCallObject = YES\n    parameters: Parameters<T>[]\n    \n    constructor(...parameters: Parameters<T>) {\n        \n        this.parameters = parameters\n        \n    }\n    \n    callFunction(functionToCall: T) {\n        \n        const parameters = this.parameters\n        functionToCall(...parameters)\n        \n    }\n    \n    \n}\n\n\nexport function CALL<T extends (...args: any) => any>(...objects: Parameters<T>) {\n    \n    const result = new UIFunctionCall<T>(...objects)\n    return result\n    \n}\n\n\nexport class UIFunctionExtender<T extends (...args: any) => any> {\n    \n    isAUIFunctionExtenderObject = YES\n    extendingFunction: T\n    \n    constructor(extendingFunction: T) {\n        \n        this.extendingFunction = extendingFunction\n        \n    }\n    \n    extendedFunction(functionToExtend: T) {\n        \n        const extendingFunction = this.extendingFunction\n        \n        function extendedFunction(...objects: any[]) {\n            \n            const boundFunctionToExtend = functionToExtend.bind(this)\n            boundFunctionToExtend(...objects)\n            \n            const boundExtendingFunction = extendingFunction.bind(this)\n            boundExtendingFunction(...objects)\n            \n        }\n        \n        return extendedFunction\n        \n    }\n    \n    \n}\n\n\nexport function EXTEND<T extends (...args: any) => any>(extendingFunction: T) {\n    \n    const result = new UIFunctionExtender(extendingFunction)\n    return result\n    \n}\n\n\nexport class UILazyPropertyValue<T> {\n    \n    isAUILazyPropertyValueObject = YES\n    initFunction: () => T\n    \n    constructor(initFunction: () => T) {\n        \n        this.initFunction = initFunction\n        \n    }\n    \n    setLazyPropertyValue(key: string, target: object) {\n        \n        let isValueInitialized = NO\n        \n        // property value\n        let _value = nil\n        \n        const initValue = () => {\n            \n            _value = this.initFunction()\n            isValueInitialized = YES\n            this.initFunction = nil\n            \n        }\n        \n        if (delete target[key]) {\n            \n            // Create new property with getter and setter\n            Object.defineProperty(target, key, {\n                get: function () {\n                    \n                    if (IS_NOT(isValueInitialized)) {\n                        \n                        initValue()\n                        \n                    }\n                    \n                    return _value\n                    \n                },\n                set: function (newValue) {\n                    \n                    _value = newValue\n                    \n                },\n                enumerable: true,\n                configurable: true\n            })\n            \n        }\n        \n    }\n    \n    \n}\n\n\nexport function LAZY_VALUE<T>(initFunction: () => T) {\n    \n    const result = new UILazyPropertyValue(initFunction)\n    \n    return result\n    \n}\n\n\nexport type UIInitializerObject<T> = {\n    \n    [P in keyof T]?:\n    //T[P] extends (infer U)[] ? UIInitializerObject<U>[] :\n    T[P] extends (...args: any) => any ? UIFunctionCall<T[P]> | UIFunctionExtender<T[P]> | T[P] :\n        T[P] extends object ? UIInitializerObject<T[P]> | UILazyPropertyValue<T[P]> :\n            T[P];\n    \n}\n\n\nexport class UIObject {\n    \n    constructor() {\n    \n        // Do something here if needed\n        \n    }\n    \n    public get class(): any {\n        return Object.getPrototypeOf(this).constructor\n    }\n    \n    public get superclass(): any {\n        return Object.getPrototypeOf(Object.getPrototypeOf(this)).constructor\n    }\n    \n    \n    public static wrapObject<T>(object: T): UIObject & T {\n        \n        if (IS_NOT(object)) {\n            return nil\n        }\n        \n        if (object instanceof UIObject) {\n            return object\n        }\n    \n        return Object.assign(new UIObject(), object)\n        \n    }\n    \n    \n    isKindOfClass(classObject) {\n        if (this.isMemberOfClass(classObject)) {\n            return YES\n        }\n        for (let superclassObject = this.superclass; IS(superclassObject); superclassObject = superclassObject.superclass) {\n            if (superclassObject == classObject) {\n                return YES\n            }\n        }\n        return NO\n    }\n    \n    \n    isMemberOfClass(classObject: any) {\n        return (this.class == classObject)\n    }\n    \n    \n    \n    valueForKey(key: string) {\n        return this[key]\n    }\n    \n    valueForKeyPath(keyPath: string): any {\n        return UIObject.valueForKeyPath(keyPath, this)\n    }\n    \n    static valueForKeyPath(keyPath: string, object: any): any {\n        \n        if (IS_NOT(keyPath)) {\n            return object\n        }\n        \n        const keys = keyPath.split(\".\")\n        let currentObject = object\n    \n        for (let i = 0; i < keys.length; i++) {\n            \n            const key = keys[i]\n            \n            if (key.substring(0, 2) == \"[]\") {\n                \n                // This next object will be an array and the rest of the keys need to be run for each of the elements\n                currentObject = currentObject[key.substring(2)]\n                \n                // CurrentObject is now an array\n                \n                const remainingKeyPath = keys.slice(i + 1).join(\".\")\n                const currentArray = currentObject as unknown as any[]\n                currentObject = currentArray.map(function (subObject, index, array) {\n                    return UIObject.valueForKeyPath(remainingKeyPath, subObject)\n                })\n                \n                break\n                \n            }\n            \n            currentObject = currentObject[key]\n            if (IS_NOT(currentObject)) {\n                currentObject = nil\n            }\n            \n        }\n        \n        return currentObject\n        \n    }\n    \n    setValueForKeyPath(keyPath: string, value: any, createPath = YES) {\n        return UIObject.setValueForKeyPath(keyPath, value, this, createPath)\n    }\n    \n    static setValueForKeyPath(keyPath: string, value: any, currentObject: any, createPath) {\n        \n        const keys = keyPath.split(\".\")\n        let didSetValue = NO\n    \n        keys.forEach(function (key, index, array) {\n            if (index == array.length - 1 && IS_NOT_LIKE_NULL(currentObject)) {\n                currentObject[key] = value\n                didSetValue = YES\n                return\n            }\n            else if (IS_NOT(currentObject)) {\n                return\n            }\n            \n            const currentObjectValue = currentObject[key]\n            if (IS_LIKE_NULL(currentObjectValue) && createPath) {\n                currentObject[key] = {}\n            }\n            currentObject = currentObject[key]\n        })\n    \n        return didSetValue\n    \n    }\n    \n    \n    configureWithObject(object: UIInitializerObject<this>) {\n        this.configuredWithObject(object)\n    }\n    \n    configuredWithObject(object: UIInitializerObject<this>): this {\n        return UIObject.configureWithObject(this, object)\n    }\n    \n    \n    static configureWithObject<T extends object>(configurationTarget: T, object: UIInitializerObject<T>) {\n        \n        const isAnObject = (item: any) => (item && typeof item === \"object\" && !Array.isArray(item) &&\n            !(item instanceof UICoreExtensionValueObject))\n        \n        function isAClass(funcOrClass) {\n            const isFunction = functionToCheck => (functionToCheck && {}.toString.call(functionToCheck) ===\n                \"[object Function]\")\n            const propertyNames = Object.getOwnPropertyNames(funcOrClass)\n            return (isFunction(funcOrClass) && !propertyNames.includes(\"arguments\") &&\n                propertyNames.includes(\"prototype\"))\n        }\n        \n        let keyPathsAndValues = []\n        \n        function prepareKeyPathsAndValues(target: object, source: object, keyPath = \"\") {\n            \n            if ((isAnObject(target) || isAClass(target)) && isAnObject(source)) {\n                \n                source.forEach((sourceValue, key) => {\n                    \n                    const valueKeyPath = keyPath + \".\" + key\n                    function addValueAndKeyPath(sourceValue) {\n                        keyPathsAndValues.push({\n                            value: sourceValue,\n                            keyPath: valueKeyPath.replace(\".\", \"\")\n                        })\n                    }\n                    \n                    if (isAnObject(sourceValue) || isAClass(sourceValue)) {\n                        if (!(key in target) || target[key] instanceof Function) {\n                            addValueAndKeyPath(sourceValue)\n                        }\n                        else {\n                            prepareKeyPathsAndValues(target[key], sourceValue, valueKeyPath)\n                        }\n                    }\n                    else if (sourceValue instanceof UICoreExtensionValueObject) {\n                        addValueAndKeyPath(sourceValue.value)\n                    }\n                    else {\n                        addValueAndKeyPath(sourceValue)\n                    }\n                    \n                })\n                \n            }\n            \n        }\n        \n        prepareKeyPathsAndValues(configurationTarget, object)\n        \n        // Sort based on key paths\n        keyPathsAndValues = keyPathsAndValues.sort((a, b) => {\n            \n            const firstKeyPath = (a.keyPath as string).split(\".\").length\n            const secondKeyPath = (b.keyPath as string).split(\".\").length\n            \n            if (firstKeyPath < secondKeyPath) {\n                return -1\n            }\n            if (firstKeyPath > secondKeyPath) {\n                return 1\n            }\n            return 0\n            \n        })\n        \n        keyPathsAndValues.forEach((valueAndKeyPath) => {\n            \n            const keyPath: string = valueAndKeyPath.keyPath\n            let value = valueAndKeyPath.value\n            \n            const getTargetFunction = (bindThis = NO) => {\n                let result = (UIObject.valueForKeyPath(keyPath, configurationTarget) as Function)\n                if (bindThis) {\n                    const indexOfDot = keyPath.lastIndexOf(\".\")\n                    const thisObject = UIObject.valueForKeyPath(keyPath.substring(0, indexOfDot), configurationTarget)\n                    result = result.bind(thisObject)\n                }\n                return result\n            }\n            \n            if (value instanceof UILazyPropertyValue) {\n                const indexOfDot = keyPath.lastIndexOf(\".\")\n                const thisObject = UIObject.valueForKeyPath(keyPath.substring(0, indexOfDot), configurationTarget)\n                const key = keyPath.substring(indexOfDot + 1)\n                value.setLazyPropertyValue(key, thisObject)\n                return\n            }\n            \n            if (value instanceof UIFunctionCall) {\n                value.callFunction(getTargetFunction(YES))\n                return\n            }\n            \n            if (value instanceof UIFunctionExtender) {\n                value = value.extendedFunction(getTargetFunction())\n            }\n            \n            UIObject.setValueForKeyPath(keyPath, value, configurationTarget, YES)\n            \n        })\n        \n        \n        return configurationTarget\n        \n    }\n    \n    \n    performFunctionWithSelf<T>(functionToPerform: (self: this) => T): T {\n        return functionToPerform(this)\n    }\n    \n    performingFunctionWithSelf(functionToPerform: (self: this) => void): this {\n        functionToPerform(this)\n        return this\n    }\n    \n    performFunctionWithDelay(delay: number, functionToCall: Function) {\n        \n        new UITimer(delay, NO, functionToCall)\n        \n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "export const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1\nexport const IS_SAFARI = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n", "import { UIObject } from \"./UIObject\"\n\n\nexport interface UIColorDescriptor {\n    \n    red: number;\n    green: number;\n    blue: number;\n    alpha?: number;\n    \n}\n\n\n\n\n\nexport class UIColor extends UIObject {\n    \n    \n    constructor(public stringValue: string) {\n        \n        super()\n        \n    }\n    \n    \n    \n    toString() {\n        return this.stringValue\n    }\n    \n    static get redColor() {\n        return new UIColor(\"red\")\n    }\n    \n    static get blueColor() {\n        return new UIColor(\"blue\")\n    }\n    \n    static get greenColor() {\n        return new UIColor(\"green\")\n    }\n    \n    static get yellowColor() {\n        return new UIColor(\"yellow\")\n    }\n    \n    static get blackColor() {\n        return new UIColor(\"black\")\n    }\n    \n    static get brownColor() {\n        return new UIColor(\"brown\")\n    }\n    \n    static get whiteColor() {\n        return new UIColor(\"white\")\n    }\n    \n    static get greyColor() {\n        return new UIColor(\"grey\")\n    }\n    \n    static get lightGreyColor() {\n        return new UIColor(\"lightgrey\")\n    }\n    \n    static get transparentColor() {\n        return new UIColor(\"transparent\")\n    }\n    \n    static get undefinedColor() {\n        return new UIColor(\"\")\n    }\n    \n    static get nilColor() {\n        return new UIColor(\"\")\n    }\n    \n    \n    \n    static nameToHex(name: string) {\n        return {\n            \"aliceblue\": \"#f0f8ff\",\n            \"antiquewhite\": \"#faebd7\",\n            \"aqua\": \"#00ffff\",\n            \"aquamarine\": \"#7fffd4\",\n            \"azure\": \"#f0ffff\",\n            \"beige\": \"#f5f5dc\",\n            \"bisque\": \"#ffe4c4\",\n            \"black\": \"#000000\",\n            \"blanchedalmond\": \"#ffebcd\",\n            \"blue\": \"#0000ff\",\n            \"blueviolet\": \"#8a2be2\",\n            \"brown\": \"#a52a2a\",\n            \"burlywood\": \"#deb887\",\n            \"cadetblue\": \"#5f9ea0\",\n            \"chartreuse\": \"#7fff00\",\n            \"chocolate\": \"#d2691e\",\n            \"coral\": \"#ff7f50\",\n            \"cornflowerblue\": \"#6495ed\",\n            \"cornsilk\": \"#fff8dc\",\n            \"crimson\": \"#dc143c\",\n            \"cyan\": \"#00ffff\",\n            \"darkblue\": \"#00008b\",\n            \"darkcyan\": \"#008b8b\",\n            \"darkgoldenrod\": \"#b8860b\",\n            \"darkgray\": \"#a9a9a9\",\n            \"darkgreen\": \"#006400\",\n            \"darkkhaki\": \"#bdb76b\",\n            \"darkmagenta\": \"#8b008b\",\n            \"darkolivegreen\": \"#556b2f\",\n            \"darkorange\": \"#ff8c00\",\n            \"darkorchid\": \"#9932cc\",\n            \"darkred\": \"#8b0000\",\n            \"darksalmon\": \"#e9967a\",\n            \"darkseagreen\": \"#8fbc8f\",\n            \"darkslateblue\": \"#483d8b\",\n            \"darkslategray\": \"#2f4f4f\",\n            \"darkturquoise\": \"#00ced1\",\n            \"darkviolet\": \"#9400d3\",\n            \"deeppink\": \"#ff1493\",\n            \"deepskyblue\": \"#00bfff\",\n            \"dimgray\": \"#696969\",\n            \"dodgerblue\": \"#1e90ff\",\n            \"firebrick\": \"#b22222\",\n            \"floralwhite\": \"#fffaf0\",\n            \"forestgreen\": \"#228b22\",\n            \"fuchsia\": \"#ff00ff\",\n            \"gainsboro\": \"#dcdcdc\",\n            \"ghostwhite\": \"#f8f8ff\",\n            \"gold\": \"#ffd700\",\n            \"goldenrod\": \"#daa520\",\n            \"gray\": \"#808080\",\n            \"green\": \"#008000\",\n            \"greenyellow\": \"#adff2f\",\n            \"honeydew\": \"#f0fff0\",\n            \"hotpink\": \"#ff69b4\",\n            \"indianred \": \"#cd5c5c\",\n            \"indigo\": \"#4b0082\",\n            \"ivory\": \"#fffff0\",\n            \"khaki\": \"#f0e68c\",\n            \"lavender\": \"#e6e6fa\",\n            \"lavenderblush\": \"#fff0f5\",\n            \"lawngreen\": \"#7cfc00\",\n            \"lemonchiffon\": \"#fffacd\",\n            \"lightblue\": \"#add8e6\",\n            \"lightcoral\": \"#f08080\",\n            \"lightcyan\": \"#e0ffff\",\n            \"lightgoldenrodyellow\": \"#fafad2\",\n            \"lightgrey\": \"#d3d3d3\",\n            \"lightgreen\": \"#90ee90\",\n            \"lightpink\": \"#ffb6c1\",\n            \"lightsalmon\": \"#ffa07a\",\n            \"lightseagreen\": \"#20b2aa\",\n            \"lightskyblue\": \"#87cefa\",\n            \"lightslategray\": \"#778899\",\n            \"lightsteelblue\": \"#b0c4de\",\n            \"lightyellow\": \"#ffffe0\",\n            \"lime\": \"#00ff00\",\n            \"limegreen\": \"#32cd32\",\n            \"linen\": \"#faf0e6\",\n            \"magenta\": \"#ff00ff\",\n            \"maroon\": \"#800000\",\n            \"mediumaquamarine\": \"#66cdaa\",\n            \"mediumblue\": \"#0000cd\",\n            \"mediumorchid\": \"#ba55d3\",\n            \"mediumpurple\": \"#9370d8\",\n            \"mediumseagreen\": \"#3cb371\",\n            \"mediumslateblue\": \"#7b68ee\",\n            \"mediumspringgreen\": \"#00fa9a\",\n            \"mediumturquoise\": \"#48d1cc\",\n            \"mediumvioletred\": \"#c71585\",\n            \"midnightblue\": \"#191970\",\n            \"mintcream\": \"#f5fffa\",\n            \"mistyrose\": \"#ffe4e1\",\n            \"moccasin\": \"#ffe4b5\",\n            \"navajowhite\": \"#ffdead\",\n            \"navy\": \"#000080\",\n            \"oldlace\": \"#fdf5e6\",\n            \"olive\": \"#808000\",\n            \"olivedrab\": \"#6b8e23\",\n            \"orange\": \"#ffa500\",\n            \"orangered\": \"#ff4500\",\n            \"orchid\": \"#da70d6\",\n            \"palegoldenrod\": \"#eee8aa\",\n            \"palegreen\": \"#98fb98\",\n            \"paleturquoise\": \"#afeeee\",\n            \"palevioletred\": \"#d87093\",\n            \"papayawhip\": \"#ffefd5\",\n            \"peachpuff\": \"#ffdab9\",\n            \"peru\": \"#cd853f\",\n            \"pink\": \"#ffc0cb\",\n            \"plum\": \"#dda0dd\",\n            \"powderblue\": \"#b0e0e6\",\n            \"purple\": \"#800080\",\n            \"red\": \"#ff0000\",\n            \"rosybrown\": \"#bc8f8f\",\n            \"royalblue\": \"#4169e1\",\n            \"saddlebrown\": \"#8b4513\",\n            \"salmon\": \"#fa8072\",\n            \"sandybrown\": \"#f4a460\",\n            \"seagreen\": \"#2e8b57\",\n            \"seashell\": \"#fff5ee\",\n            \"sienna\": \"#a0522d\",\n            \"silver\": \"#c0c0c0\",\n            \"skyblue\": \"#87ceeb\",\n            \"slateblue\": \"#6a5acd\",\n            \"slategray\": \"#708090\",\n            \"snow\": \"#fffafa\",\n            \"springgreen\": \"#00ff7f\",\n            \"steelblue\": \"#4682b4\",\n            \"tan\": \"#d2b48c\",\n            \"teal\": \"#008080\",\n            \"thistle\": \"#d8bfd8\",\n            \"tomato\": \"#ff6347\",\n            \"turquoise\": \"#40e0d0\",\n            \"violet\": \"#ee82ee\",\n            \"wheat\": \"#f5deb3\",\n            \"white\": \"#ffffff\",\n            \"whitesmoke\": \"#f5f5f5\",\n            \"yellow\": \"#ffff00\",\n            \"yellowgreen\": \"#9acd32\"\n        }[name.toLowerCase()]\n    }\n    \n    \n    \n    static hexToDescriptor(c: string): UIColorDescriptor {\n        if (c[0] === \"#\") {\n            c = c.substr(1)\n        }\n        const r = parseInt(c.slice(0, 2), 16)\n        const g = parseInt(c.slice(2, 4), 16)\n        const b = parseInt(c.slice(4, 6), 16)\n        const a = parseInt(c.slice(6, 8), 16)\n    \n        const result = { \"red\": r, \"green\": g, \"blue\": b, \"alpha\": a }\n    \n        return result\n        \n        //return 'rgb(' + r + ',' + g + ',' + b + ')';\n        \n    }\n    \n    static rgbToDescriptor(colorString: string) {\n        \n        \n        if (colorString.startsWith(\"rgba(\")) {\n            \n            colorString = colorString.slice(5, colorString.length - 1)\n            \n        }\n        \n        if (colorString.startsWith(\"rgb(\")) {\n            \n            colorString = colorString.slice(4, colorString.length - 1) + \", 0\"\n            \n        }\n    \n    \n        const components = colorString.split(\",\")\n    \n    \n    \n        const result = {\n            \"red\": Number(components[0]),\n            \"green\": Number(components[1]),\n            \"blue\": Number(components[2]),\n            \"alpha\": Number(components[3])\n        }\n    \n    \n        return result\n        \n        \n    }\n    \n    \n    \n    get colorDescriptor(): UIColorDescriptor {\n    \n        var descriptor\n    \n        const colorHEXFromName = UIColor.nameToHex(this.stringValue)\n    \n        if (this.stringValue.startsWith(\"rgb\")) {\n            \n            descriptor = UIColor.rgbToDescriptor(this.stringValue)\n            \n        }\n        else if (colorHEXFromName) {\n            \n            descriptor = UIColor.hexToDescriptor(colorHEXFromName)\n            \n        }\n        else {\n            \n            descriptor = UIColor.hexToDescriptor(this.stringValue)\n            \n        }\n        \n        return descriptor\n        \n    }\n    \n    \n    \n    colorWithRed(red: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + red + \",\" + descriptor.green + \",\" + descriptor.blue + \",\" +\n            descriptor.alpha + \")\")\n    \n        return result\n        \n    }\n    \n    colorWithGreen(green: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + descriptor.red + \",\" + green + \",\" + descriptor.blue + \",\" +\n            descriptor.alpha + \")\")\n    \n        return result\n        \n    }\n    \n    colorWithBlue(blue: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + descriptor.red + \",\" + descriptor.green + \",\" + blue + \",\" +\n            descriptor.alpha + \")\")\n    \n        return result\n        \n    }\n    \n    \n    colorWithAlpha(alpha: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + descriptor.red + \",\" + descriptor.green + \",\" + descriptor.blue + \",\" +\n            alpha + \")\")\n    \n        return result\n        \n    }\n    \n    \n    \n    static colorWithRGBA(red: number, green: number, blue: number, alpha: number = 1) {\n    \n    \n        const result = new UIColor(\"rgba(\" + red + \",\" + green + \",\" + blue + \",\" + alpha + \")\")\n    \n        return result\n        \n        \n    }\n    \n    static colorWithDescriptor(descriptor: UIColorDescriptor) {\n    \n    \n        const result = new UIColor(\"rgba(\" + descriptor.red.toFixed(0) + \",\" + descriptor.green.toFixed(0) + \",\" +\n            descriptor.blue.toFixed(0) + \",\" + this.defaultAlphaToOne(descriptor.alpha) + \")\")\n    \n        return result\n        \n    }\n    \n    \n    private static defaultAlphaToOne(value = 1) {\n        if (value != value) {\n            value = 1\n        }\n        return value\n    }\n    \n    \n    \n    colorByMultiplyingRGB(multiplier: number) {\n    \n        const descriptor = this.colorDescriptor\n    \n        descriptor.red = descriptor.red * multiplier\n        descriptor.green = descriptor.green * multiplier\n        descriptor.blue = descriptor.blue * multiplier\n    \n        const result = UIColor.colorWithDescriptor(descriptor)\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UICoreExtensionValueObject } from \"./UICoreExtensionValueObject\"\nimport { UIObject } from \"./UIObject\"\n\n\n\n\n\ndeclare global {\n    \n    \n    interface Array<T> {\n        \n        removeElementAtIndex(index: number);\n        \n        removeElement(element: T);\n        \n        insertElementAtIndex(index: number, element: T);\n        \n        replaceElementAtIndex(index: number, element: T);\n        \n        \n        contains(element: T): boolean;\n        \n        findAsyncSequential(functionToCall: (value: any) => Promise<boolean>): Promise<any>;\n        \n        groupedBy(keyFunction: (item: T) => any): { [key: string]: Array<T> } & Object;\n        \n        copy(): Array<T>;\n        \n        arrayByRepeating(numberOfRepetitions: number): Array<T>;\n        \n        arrayByTrimmingToLengthIfLonger(maxLength: number): Array<T>;\n        \n        anyMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n        \n        noneMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n        \n        allMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n        \n        firstElement: T;\n        lastElement: T;\n        readonly summedValue: T;\n        \n        everyElement: UIEveryElementItem<T>;\n        \n        max(): number;\n        \n        min(): number;\n        \n        isEqualToArray(array: Array<T>, keyPath?: string): boolean;\n        \n    }\n    \n    \n    \n    interface String {\n        \n        contains(string): boolean;\n        \n        readonly numericalValue: number;\n        isAString: boolean;\n        \n    }\n    \n    \n    \n    interface Number {\n        \n        isANumber: boolean;\n        \n        readonly integerValue: number;\n        \n    }\n    \n    \n    \n    interface Date {\n        \n        readonly dateString: string;\n        \n    }\n    \n    \n    interface Object {\n        \n        forEach(callbackFunction: (value: any, key: string) => void): void;\n        \n        readonly allValues: Array<any>;\n        \n        readonly allKeys: string[];\n        \n    }\n    \n    \n}\n\nexport {}\n\nconst YES = true\nconst NO = false\n\nif (\"removeElementAtIndex\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).removeElementAtIndex = function (this: Array<any>, index: number) {\n        \n        // @ts-ignore\n        if (index >= 0 && index < this.length) {\n            \n            this.splice(index, 1)\n            \n        }\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     removeElementAtIndex(index: number);\n//\n// }\n\n\nif (\"removeElement\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).removeElement = function (this: Array<any>, element) {\n        \n        this.removeElementAtIndex(this.indexOf(element))\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     removeElement(element: T);\n//\n// }\n\n\nif (\"insertElementAtIndex\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).insertElementAtIndex = function (this: Array<any>, index: number, element: any) {\n        \n        if (index >= 0 && index <= this.length) {\n            \n            this.splice(index, 0, element)\n            \n        }\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     insertElementAtIndex(index: number, element: T);\n//\n// }\n\n\nif (\"replaceElementAtIndex\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).replaceElementAtIndex = function (this: Array<any>, index: number, element: any) {\n        \n        this.removeElementAtIndex(index)\n        this.insertElementAtIndex(index, element)\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     replaceElementAtIndex(index: number, element: T);\n//\n// }\n\n\nif (\"contains\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).contains = function (this: Array<any>, element) {\n        \n        const result = (this.indexOf(element) != -1)\n        return result\n        \n    }\n    \n}\n\nif (\"containsAny\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).containsAny = function (this: Array<any>, elements: any[]) {\n        \n        const result = this.anyMatch(function (element, index, array) {\n            return elements.contains(element)\n        })\n        \n        return result\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     contains(element: T): boolean;\n//\n//     containsAny(element: T[]): boolean;\n//\n// }\n\n\nif (\"anyMatch\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).anyMatch = function (\n        this: Array<any>,\n        functionToCall: (value: any, index: number, array: any[]) => boolean\n    ) {\n        \n        // @ts-ignore\n        const result = (this.findIndex(functionToCall) > -1)\n        \n        return result\n        \n    }\n    \n}\n\nif (\"noneMatch\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).noneMatch = function (\n        this: Array<any>,\n        functionToCall: (value: any, index: number, array: any[]) => boolean\n    ) {\n        \n        // @ts-ignore\n        const result = (this.findIndex(functionToCall) == -1)\n        \n        return result\n        \n    }\n    \n}\n\nif (\"allMatch\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).allMatch = function (\n        this: Array<any>,\n        functionToCall: (value: any, index: number, array: any[]) => boolean\n    ) {\n        \n        function reversedFunction(value: any, index: number, array: any[]) {\n            return !functionToCall(value, index, array)\n        }\n        \n        // @ts-ignore\n        const result = (this.findIndex(reversedFunction) == -1)\n        \n        return result\n        \n    }\n    \n}\n\nif (\"findAsyncSequential\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).findAsyncSequential = function (\n        this: Array<any>,\n        functionToCall: (value: any) => Promise<boolean>\n    ) {\n        \n        // https://stackoverflow.com/questions/55601062/using-an-async-function-in-array-find\n        async function findAsyncSequential<T>(\n            array: T[],\n            predicate: (t: T) => Promise<boolean>\n        ): Promise<T | undefined> {\n            for (const t of array) {\n                if (await predicate(t)) {\n                    return t\n                }\n            }\n            return undefined\n        }\n        \n        const result = findAsyncSequential(this, functionToCall)\n        \n        return result\n        \n    }\n    \n}\n\n\n\n// interface Array<T> {\n//\n//     anyMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n//\n//     noneMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n//\n//     allMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n//\n// }\n\n\nif (\"groupedBy\" in Array.prototype == NO) {\n    \n    Array.prototype.groupedBy = function (this: Array<any>, funcProp) {\n        return this.reduce(function (acc, val) {\n            (acc[funcProp(val)] = acc[funcProp(val)] || []).push(val)\n            return acc\n        }, {})\n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     groupedBy(keyFunction: (item: T) => any): { [key: string]: Array<T> };\n//\n// }\n\n\nif (\"firstElement\" in Array.prototype == NO) {\n    Object.defineProperty(Array.prototype, \"firstElement\", {\n        get: function firstElement(this: Array<any>) {\n            const result = this[0]\n            return result\n        },\n        set: function (this: Array<any>, element: any) {\n            if (this.length == 0) {\n                this.push(element)\n                return\n            }\n            this[0] = element\n        }\n    })\n}\n\nif (\"lastElement\" in Array.prototype == NO) {\n    Object.defineProperty(Array.prototype, \"lastElement\", {\n        get: function lastElement(this: Array<any>) {\n            const result = this[this.length - 1]\n            return result\n        },\n        set: function (this: Array<any>, element: any) {\n            if (this.length == 0) {\n                this.push(element)\n                return\n            }\n            this[this.length - 1] = element\n        }\n    })\n}\n\nif (\"everyElement\" in Array.prototype == NO) {\n    \n    Object.defineProperty(Array.prototype, \"everyElement\", {\n        \n        get: function everyElement(this: Array<any>) {\n            \n            const valueKeys = []\n            \n            const targetFunction = (objects) => {\n                \n                const result = this.map((element, index, array) => {\n                    \n                    const thisObject = UIObject.valueForKeyPath(\n                        valueKeys.arrayByTrimmingToLengthIfLonger(valueKeys.length - 1).join(\".\"),\n                        element\n                    ) || element\n                    \n                    const elementFunction = (UIObject.valueForKeyPath(valueKeys.join(\".\"), element) as Function).bind(\n                        thisObject,\n                        objects\n                    )\n                    \n                    return elementFunction()\n                    \n                })\n                \n                return result\n                \n            }\n            \n            const result = new Proxy(\n                targetFunction,\n                {\n                    \n                    get: (target, key, receiver) => {\n                        \n                        if (key == \"UI_elementValues\") {\n                            \n                            return this.map((element, index, array) => UIObject.valueForKeyPath(\n                                valueKeys.join(\".\"),\n                                element\n                            ))\n                            \n                        }\n                        \n                        valueKeys.push(key)\n                        \n                        return result\n                        \n                    },\n                    set: (target, key, value, receiver) => {\n                        \n                        valueKeys.push(key)\n                        \n                        this.forEach((element, index, array) => {\n                            \n                            UIObject.setValueForKeyPath(valueKeys.join(\".\"), value, element, YES)\n                            \n                        })\n                        \n                        return true\n                        \n                    }\n                    \n                }\n            )\n            \n            return result\n            \n        },\n        set: function (this: Array<any>, element: any) {\n            \n            for (var i = 0; i < this.length; ++i) {\n                \n                this[i] = element\n                \n            }\n            \n        }\n        \n    })\n    \n}\n\n\nexport type UIEveryElementItem<T> = {\n    \n    [P in keyof T]: UIEveryElementItem<T[P]>\n    \n} & {\n    \n    UI_elementValues?: T[];\n    \n} & T\n\n// interface Array<T> {\n//\n//     firstElement: T;\n//     lastElement: T;\n//\n//     everyElement: UIEveryElementItem<T>;\n//\n// }\n\n\nif (\"copy\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).copy = function (this: Array<any>) {\n        \n        const result = this.slice(0)\n        return result\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     copy(): Array<T>;\n//\n// }\n\n\nif (\"arrayByRepeating\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).arrayByRepeating = function (this: Array<any>, numberOfRepetitions: number) {\n        const result = []\n        for (var i = 0; i < numberOfRepetitions; i++) {\n            this.forEach(function (element, index, array) {\n                result.push(element)\n            })\n        }\n        return result\n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     arrayByRepeating(numberOfRepetitions: number): Array<T>;\n//\n// }\n\n\nif (\"arrayByTrimmingToLengthIfLonger\" in Array.prototype == NO) {\n    (Array.prototype as any).arrayByTrimmingToLengthIfLonger = function (this: Array<any>, maxLength: number) {\n        const result = []\n        for (var i = 0; i < maxLength && i < this.length; i++) {\n            result.push(this[i])\n        }\n        return result\n    }\n}\n\n\n// interface Array<T> {\n//\n//     arrayByTrimmingToLengthIfLonger(maxLength: number): Array<T>;\n//\n// }\n\n\nif (\"summedValue\" in Array.prototype == NO) {\n    \n    Object.defineProperty(Array.prototype, \"summedValue\", {\n        get: function summedValue(this: Array<any>) {\n            const result = this.reduce(function (a, b) {\n                return a + b\n            }, 0)\n            return result\n        }\n    })\n    \n}\n\n\n// interface Array<T> {\n//\n//     readonly summedValue: T;\n//\n//     max(): number;\n//     min(): number;\n//\n//\n// }\n\nArray.prototype.max = function () {\n    return Math.max.apply(null, this)\n}\n\nArray.prototype.min = function () {\n    return Math.min.apply(null, this)\n}\n\n\n// interface Array<T> {\n//\n//     isEqualToArray(array: Array<T>, keyPath?: string): boolean;\n//\n// }\n\n\nif (\"isEqualToArray\" in Array.prototype == NO) {\n    \n    // attach the .equals method to Array's prototype to call it on any array\n    Array.prototype.isEqualToArray = function (array: any[], keyPath?: string) {\n        \n        // if the other array is a falsy value, return\n        if (!array) {\n            return false\n        }\n        \n        // compare lengths - can save a lot of time\n        if (this.length != array.length) {\n            return false\n        }\n        \n        var i = 0\n        const l = this.length\n        for (; i < l; i++) {\n            \n            // Check if we have nested arrays\n            if (this[i] instanceof Array && array[i] instanceof Array && !keyPath) {\n                \n                // recurse into the nested arrays\n                if (!this[i].isEqualToArray(array[i])) {\n                    return false\n                }\n                \n            }\n            else if (keyPath && UIObject.valueForKeyPath(keyPath, this[i]) != UIObject.valueForKeyPath(\n                keyPath,\n                array[i]\n            )) {\n                \n                return false\n                \n            }\n            else if (this[i] != array[i]) {\n                \n                // Warning - two different object instances will never be equal: {x:20} != {x:20}\n                return false\n                \n            }\n            \n        }\n        \n        return true\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Array.prototype, \"isEqualToArray\", { enumerable: false })\n    \n}\n\n\n\n\n\nif (\"forEach\" in Object.prototype == NO) {\n    \n    (Object.prototype as any).forEach = function (this: Object, callbackFunction: (value: any, key: string) => void) {\n        const keys = Object.keys(this)\n        keys.forEach(function (key, index, array) {\n            callbackFunction(this[key], key)\n        }.bind(this))\n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"forEach\", { enumerable: false })\n    \n}\n\n\n// interface Object {\n//\n//     forEach(callbackFunction: (value: any, key: string) => void): void;\n//\n// }\n\n\nif (\"allValues\" in Object.prototype == NO) {\n    Object.defineProperty(Object.prototype, \"allValues\", {\n        get: function (this: Object) {\n            const values = []\n            this.forEach(function (value: any) {\n                values.push(value)\n            })\n            return values\n        }\n    })\n}\n\n\n// interface Object {\n//\n//     readonly allValues: Array<any>;\n//\n// }\n\n\nif (\"allKeys\" in Object.prototype == NO) {\n    Object.defineProperty(Object.prototype, \"allKeys\", {\n        get: function (this: Object) {\n            const values = Object.keys(this)\n            return values\n        }\n    })\n}\n\n\n// interface Object {\n//\n//     readonly allKeys: string[];\n//\n// }\n\n\nif (\"objectByCopyingValuesRecursivelyFromObject\" in Object.prototype == NO) {\n    \n    (Object.prototype as any).objectByCopyingValuesRecursivelyFromObject = function (this: Object, object: any) {\n        \n        \n        function isAnObject(item: any) {\n            return (item && typeof item === \"object\" && !Array.isArray(item))\n        }\n        \n        function mergeRecursively(target: any, source: any) {\n            \n            const output = Object.assign({}, target)\n            \n            if (isAnObject(target) && isAnObject(source)) {\n                \n                Object.keys(source).forEach(function (key) {\n                    \n                    if (isAnObject(source[key])) {\n                        \n                        // if (!(key in target)) {\n                        \n                        //     Object.assign(output, { [key]: source[key] });\n                        \n                        // }\n                        // else {\n                        \n                        output[key] = mergeRecursively(target[key], source[key])\n                        \n                        //}\n                        \n                    }\n                    else {\n                        \n                        Object.assign(output, { [key]: source[key] })\n                        \n                    }\n                    \n                })\n                \n            }\n            \n            return output\n            \n        }\n        \n        const result = mergeRecursively(this, object)\n        \n        return result\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"objectByCopyingValuesRecursivelyFromObject\", { enumerable: false })\n    \n}\n\n\nif (\"asValueObject\" in Object.prototype == NO) {\n    \n    (Object.prototype as any).asValueObject = function () {\n        \n        const result = new UICoreExtensionValueObject(this)\n        \n        return result\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"asValueObject\", { enumerable: false })\n    \n}\n\n\n// interface Object {\n//\n//     objectByCopyingValuesRecursivelyFromObject<T>(object: T): this & T;\n//\n//     asValueObject(): this;\n//\n// }\n\nexport type Unpacked<T> =\n    T extends (infer U)[]\n        ? U\n        : T extends (...args: any[]) => infer U\n            ? U\n            : T extends Promise<infer U>\n                ? U\n                : T\n\nexport type UnpackedObject<T> = {\n    [P in keyof T]: Unpacked<T[P]>\n}\n\nexport function promisedProperties<ObjectType extends object>(object: ObjectType): UnpackedObject<ObjectType> {\n    \n    let promisedProperties = []\n    const objectKeys = Object.keys(object)\n    \n    objectKeys.forEach((key) => promisedProperties.push(object[key]))\n    \n    // @ts-ignore\n    return Promise.all(promisedProperties)\n        .then((resolvedValues) => {\n            return resolvedValues.reduce((resolvedObject, property, index) => {\n                resolvedObject[objectKeys[index]] = property\n                return resolvedObject\n            }, object)\n        })\n    \n}\n\n// if (\"promisedProperties\" in Object.prototype == NO) {\n//\n//     (Object.prototype as any).promisedProperties = function () {\n//\n//         const result = promisedProperties(this);\n//\n//         return result\n//\n//     }\n//\n//     // Hide method from for-in loops\n//     Object.defineProperty(Object.prototype, \"promisedProperties\", { enumerable: false });\n//\n// }\n//\n//\n// interface Object {\n//\n//     readonly promisedProperties: UnpackedObject<this>;\n//\n// }\n\n\nif (\"contains\" in String.prototype == NO) {\n    \n    (String.prototype as any).contains = function (this: String, string) {\n        \n        const result = (this.indexOf(string) != -1)\n        return result\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"contains\", { enumerable: false })\n    \n}\n\n\n// interface String {\n//\n//     contains(string): boolean;\n//\n// }\n\n\nif (\"capitalizedString\" in String.prototype == NO) {\n    Object.defineProperty(Object.prototype, \"capitalizedString\", {\n        get: function (this: String) {\n            const result = this.charAt(0).toUpperCase() + this.slice(1).toLowerCase()\n            return result\n        }\n    })\n}\n\n\n// interface String {\n//\n//     readonly capitalizedString: string;\n//\n// }\n\n\nif (\"numericalValue\" in String.prototype == NO) {\n    Object.defineProperty(String.prototype, \"numericalValue\", {\n        get: function numericalValue(this: string) {\n            const result = Number(this)\n            return result\n        }\n    })\n}\n\n\n// interface String {\n//\n//     readonly numericalValue: number;\n//\n// }\n\n\nif (\"isAString\" in String.prototype == NO) {\n    \n    (String.prototype as any).isAString = YES\n    \n}\n\n\n// interface String {\n//\n//     isAString: boolean;\n//\n// }\n\n\nif (\"isANumber\" in Number.prototype == NO) {\n    \n    (Number.prototype as any).isANumber = YES\n    \n}\n\n\n// interface Number {\n//\n//     isANumber: boolean;\n//\n// }\n\n\n\n\n\nif (\"integerValue\" in Number.prototype == NO) {\n    Object.defineProperty(Number.prototype, \"integerValue\", {\n        get: function (this: number) {\n            const result = parseInt(\"\" + (Math.round(this) + 0.5))\n            return result\n        }\n    })\n}\n\n\n// interface Number {\n//\n//     readonly integerValue: number;\n//\n// }\n\n\n\nexport class PrimitiveNumber {\n    \n    // @ts-ignore\n    static [Symbol.hasInstance](x) {\n        return\n    }\n    \n}\n\n\nif (\"integerValue\" in Boolean.prototype == NO) {\n    \n    Object.defineProperty(Boolean.prototype, \"integerValue\", {\n        get: function (this: boolean) {\n            \n            if (this == true) {\n                \n                return 1\n                \n            }\n            \n            return 0\n            \n        }\n    })\n    \n}\n\n\n// interface Boolean {\n//\n//     readonly integerValue: number;\n//\n// }\n\n\nif (\"dateString\" in Date.prototype == NO) {\n    \n    Object.defineProperty(Date.prototype, \"dateString\", {\n        get: function dateString(this: Date) {\n            \n            const result = (\"0\" + this.getDate()).slice(-2) + \"-\" + (\"0\" + (this.getMonth() + 1)).slice(-2) + \"-\" +\n                this.getFullYear() + \" \" + (\"0\" + this.getHours()).slice(-2) + \":\" +\n                (\"0\" + this.getMinutes()).slice(-2)\n            \n            return result\n            \n        }\n    })\n    \n    \n    \n}\n\n\n// interface Date {\n//\n//     readonly dateString: string;\n//\n// }\n\n\n\n\n\n\n\n\n", "import { IS_NIL, IS_NOT, nil, NO } from \"./UIObject\"\nimport { UIViewController } from \"./UIViewController\"\n\n\nexport type ValueOf<T> = T[keyof T];\nexport type PropType<TObj, TProp extends keyof TObj> = TObj[TProp];\n\nexport type UIRouteParameters<T = any> = {\n    \n    [key: string]: string;\n    \n} | T;\n\n\nexport interface UIRouteComponent<T = any> {\n    \n    name: string;\n    parameters: UIRouteParameters<T>;\n    \n}\n\n\n// @ts-ignore\nexport class UIRoute extends Array<UIRouteComponent> {\n    \n    constructor(hash?: string) {\n        \n        super()\n        \n        if (!hash || !hash.startsWith) {\n            \n            return\n            \n        }\n        \n        if (hash.startsWith(\"#\")) {\n            hash = hash.slice(1)\n        }\n        \n        hash = decodeURIComponent(hash)\n        \n        const components = hash.split(\"]\")\n        components.forEach(function (this: UIRoute, component: string, index: number, array: string[]) {\n            \n            const componentName = component.split(\"[\")[0]\n            const parameters = {}\n            \n            if (!componentName) {\n                \n                return\n                \n            }\n            \n            const parametersString = component.split(\"[\")[1] || \"\"\n            const parameterPairStrings = parametersString.split(\",\") || []\n            \n            parameterPairStrings.forEach(function (pairString, index, array) {\n                \n                const keyAndValueArray = pairString.split(\":\")\n                const key = decodeURIComponent(keyAndValueArray[0])\n                const value = decodeURIComponent(keyAndValueArray[1])\n                \n                if (key) {\n                    \n                    parameters[key] = value\n                    \n                }\n                \n                \n                \n            })\n            \n            \n            \n            this.push({\n                name: componentName,\n                parameters: parameters\n            })\n            \n            \n            \n            \n            \n        }, this)\n        \n        \n    }\n    \n    \n    \n    static get currentRoute() {\n        \n        return new UIRoute(window.location.hash)\n        \n    }\n    \n    \n    \n    \n    \n    apply() {\n        \n        window.location.hash = this.stringRepresentation\n        \n    }\n    \n    \n    applyByReplacingCurrentRouteInHistory() {\n        \n        window.location.replace(this.linkRepresentation)\n        \n    }\n    \n    \n    \n    copy() {\n        var result = new UIRoute()\n        result = Object.assign(result, this)\n        return result\n    }\n    \n    \n    routeByRemovingComponentsOtherThanOnesNamed(componentNames: string[]) {\n        const result = this.copy()\n        const indexesToRemove: number[] = []\n        result.forEach(function (component, index, array) {\n            if (!componentNames.contains(component.name)) {\n                indexesToRemove.push(index)\n            }\n        })\n        indexesToRemove.forEach(function (indexToRemove, index, array) {\n            result.removeElementAtIndex(indexToRemove)\n        })\n        return result\n    }\n    \n    \n    routeByRemovingComponentNamed(componentName: string) {\n        const result = this.copy()\n        const componentIndex = result.findIndex(function (component, index) {\n            return (component.name == componentName)\n        })\n        if (componentIndex != -1) {\n            result.splice(componentIndex, 1)\n        }\n        return result\n    }\n    \n    \n    routeByRemovingParameterInComponent(componentName: string, parameterName: string, removeComponentIfEmpty = NO) {\n        var result = this.copy()\n        var parameters = result.componentWithName(componentName).parameters\n        if (IS_NOT(parameters)) {\n            parameters = {}\n        }\n        delete parameters[parameterName]\n        result = result.routeWithComponent(componentName, parameters)\n        if (removeComponentIfEmpty && Object.keys(parameters).length == 0) {\n            result = result.routeByRemovingComponentNamed(componentName)\n        }\n        return result\n    }\n    \n    routeBySettingParameterInComponent(componentName: string, parameterName: string, valueToSet: string) {\n        var result = this.copy()\n        if (IS_NIL(valueToSet) || IS_NIL(parameterName)) {\n            return result\n        }\n        var parameters = result.componentWithName(componentName).parameters\n        if (IS_NOT(parameters)) {\n            parameters = {}\n        }\n        parameters[parameterName] = valueToSet\n        result = result.routeWithComponent(componentName, parameters)\n        return result\n    }\n    \n    \n    routeWithViewControllerComponent<T extends typeof UIViewController>(\n        viewController: T,\n        parameters: UIRouteParameters<{ [P in keyof T[\"ParameterIdentifierName\"]]: string }>,\n        extendParameters: boolean = NO\n    ) {\n        \n        return this.routeWithComponent(viewController.routeComponentName, parameters, extendParameters)\n        \n    }\n    \n    routeWithComponent(name: string, parameters: UIRouteParameters, extendParameters: boolean = NO) {\n        \n        const result = this.copy()\n        var component = result.componentWithName(name)\n        if (IS_NOT(component)) {\n            component = {\n                name: name,\n                parameters: {}\n            }\n            result.push(component)\n        }\n        \n        if (IS_NOT(parameters)) {\n            \n            parameters = {}\n            \n        }\n        \n        if (extendParameters) {\n            component.parameters = Object.assign(component.parameters, parameters)\n        }\n        else {\n            component.parameters = parameters\n        }\n        \n        return result\n        \n    }\n    \n    navigateBySettingComponent(name: string, parameters: UIRouteParameters, extendParameters: boolean = NO) {\n        \n        this.routeWithComponent(name, parameters, extendParameters).apply()\n        \n    }\n    \n    \n    componentWithViewController<T extends typeof UIViewController>(viewController: T): UIRouteComponent<{ [P in keyof T[\"ParameterIdentifierName\"]]: string }> {\n        \n        return this.componentWithName(viewController.routeComponentName)\n        \n    }\n    \n    componentWithName(name: string): UIRouteComponent {\n        var result = nil\n        this.forEach(function (component, index, self) {\n            if (component.name == name) {\n                result = component\n            }\n        })\n        return result\n    }\n    \n    \n    get linkRepresentation() {\n        return \"#\" + this.stringRepresentation\n    }\n    \n    \n    get stringRepresentation() {\n    \n        var result = \"\"\n        this.forEach(function (component, index, self) {\n            result = result + component.name\n            const parameters = component.parameters\n            result = result + \"[\"\n            Object.keys(parameters).forEach(function (key, index, keys) {\n                if (index) {\n                    result = result + \",\"\n                }\n                result = result + encodeURIComponent(key) + \":\" + encodeURIComponent(parameters[key])\n            })\n            result = result + \"]\"\n        })\n    \n        return result\n    \n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIDialogView } from \"./UIDialogView\"\nimport { FIRST_OR_NIL, IS, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UIViewController extends UIObject {\n    \n    \n    \n    parentViewController: UIViewController = nil\n    childViewControllers: UIViewController[] = []\n    static readonly routeComponentName: string\n    static readonly ParameterIdentifierName: any\n    \n    constructor(public view: UIView) {\n        \n        super()\n        \n        this.view.viewController = this\n        \n    }\n    \n    \n    handleRouteRecursively(route: UIRoute) {\n        \n        this.handleRoute(route)\n    \n        this.childViewControllers.forEach(controller => {\n        \n            controller.handleRouteRecursively(route)\n        \n        })\n        \n    }\n    \n    async handleRoute(route: UIRoute) {\n    \n    \n    \n    }\n    \n    \n    async viewWillAppear() {\n    \n    \n    \n    }\n    \n    \n    async viewDidAppear() {\n    \n    \n    \n    }\n    \n    \n    async viewWillDisappear() {\n    \n    \n    \n    }\n    \n    async viewDidDisappear() {\n    \n    \n    \n    }\n    \n    \n    updateViewConstraints() {\n    \n    \n    \n    \n    \n    }\n    \n    updateViewStyles() {\n    \n    \n    \n    }\n    \n    layoutViewSubviews() {\n        \n        \n        \n    }\n    \n    _triggerLayoutViewSubviews() {\n        \n        this.view.layoutSubviews()\n        \n        this.viewDidLayoutSubviews()\n        \n    }\n    \n    viewWillLayoutSubviews() {\n        \n        this.updateViewConstraints()\n        this.updateViewStyles()\n        \n    }\n    \n    viewDidLayoutSubviews() {\n        \n        // this.childViewControllers.forEach(function (controller, index, controllers) {\n        \n        //     controller._layoutViewSubviews();\n        \n        // })\n        \n        \n        \n    }\n    \n    \n    \n    viewDidReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        \n        \n    }\n    \n    \n    \n    get core() {\n        return this.view.core\n    }\n    \n    hasChildViewController(viewController: UIViewController) {\n        \n        // This is for performance reasons\n        if (!IS(viewController)) {\n            return NO\n        }\n        \n        for (let i = 0; i < this.childViewControllers.length; i++) {\n            \n            const childViewController = this.childViewControllers[i]\n            \n            if (childViewController == viewController) {\n                return YES\n            }\n            \n        }\n        \n        return NO\n        \n    }\n    \n    addChildViewController(viewController: UIViewController) {\n        if (!this.hasChildViewController(viewController)) {\n            viewController.willMoveToParentViewController(this)\n            this.childViewControllers.push(viewController)\n            //this.view.addSubview(viewController.view);\n            //viewController.didMoveToParentViewController(this);\n        }\n    }\n    \n    \n    removeFromParentViewController() {\n        const index = this.parentViewController.childViewControllers.indexOf(this)\n        if (index > -1) {\n            this.parentViewController.childViewControllers.splice(index, 1)\n            //this.view.removeFromSuperview();\n            this.parentViewController = nil\n        }\n    }\n    \n    willMoveToParentViewController(parentViewController) {\n    \n    }\n    \n    \n    didMoveToParentViewController(parentViewController: UIViewController) {\n        \n        this.parentViewController = parentViewController\n        \n    }\n    \n    removeChildViewController(controller: UIViewController) {\n    \n        controller = FIRST_OR_NIL(controller)\n        controller.viewWillDisappear()\n        if (IS(controller.parentViewController)) {\n            controller.removeFromParentViewController()\n        }\n        if (IS(controller.view)) {\n            controller.view.removeFromSuperview()\n        }\n        controller.viewDidDisappear()\n        \n    }\n    \n    \n    addChildViewControllerInContainer(controller: UIViewController, containerView: UIView) {\n    \n        controller = FIRST_OR_NIL(controller)\n        containerView = FIRST_OR_NIL(containerView)\n        controller.viewWillAppear()\n        this.addChildViewController(controller)\n        containerView.addSubview(controller.view)\n        controller.didMoveToParentViewController(this)\n        controller.viewDidAppear()\n    \n        controller.handleRouteRecursively(UIRoute.currentRoute)\n    \n    }\n    \n    addChildViewControllerInDialogView(controller: UIViewController, dialogView: UIDialogView) {\n    \n        controller = FIRST_OR_NIL(controller)\n        dialogView = FIRST_OR_NIL(dialogView)\n        controller.viewWillAppear()\n        this.addChildViewController(controller)\n        dialogView.view = controller.view\n    \n        const originalDismissFunction = dialogView.dismiss.bind(dialogView)\n    \n        dialogView.dismiss = animated => {\n        \n            originalDismissFunction(animated)\n            \n            this.removeChildViewController(controller)\n            \n        }\n        \n        controller.didMoveToParentViewController(this)\n        controller.viewDidAppear()\n    \n        controller.handleRouteRecursively(UIRoute.currentRoute)\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import \"./UICoreExtensions\"\nimport { UILanguageService } from \"./UIInterfaces\"\nimport { nil, NO, UIObject } from \"./UIObject\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView } from \"./UIView\"\nimport { UIViewController } from \"./UIViewController\"\n\n\n\nexport class UICore extends UIObject {\n    \n    rootViewController: UIViewController = nil\n    \n    paddingLength = 20\n    \n    static RootViewControllerClass: typeof UIViewController = nil\n    static main: UICore\n    \n    static languageService: UILanguageService = nil\n    \n    static readonly broadcastEventName = {\n        \n        \"RouteDidChange\": \"RouteDidChange\",\n        \"WindowDidResize\": \"WindowDidResize\"\n        \n    }\n    \n    constructor(rootDivElementID: string, rootViewControllerClass: typeof UIViewController) {\n        \n        super()\n    \n        UICore.RootViewControllerClass = rootViewControllerClass\n        UICore.main = UICore.main || this\n        \n        const rootViewElement = document.getElementById(rootDivElementID)\n        const rootView = new UIView(rootDivElementID, rootViewElement)\n        rootView.pausesPointerEvents = NO //YES;\n        rootView.core = this\n        \n        if (UICore.RootViewControllerClass) {\n            \n            if (!(UICore.RootViewControllerClass.prototype instanceof UIViewController) ||\n                (UICore.RootViewControllerClass as any) === UIViewController) {\n                \n                console.log(\n                    \"Error, UICore.RootViewControllerClass must be UIViewController or a subclass of UIViewController, \" +\n                    \"falling back to UIViewController.\"\n                )\n                \n                UICore.RootViewControllerClass = UIViewController\n                \n            }\n            \n            this.rootViewController = new UICore.RootViewControllerClass(rootView)\n            \n        }\n        else {\n            \n            this.rootViewController = new UIViewController(rootView)\n            \n        }\n        \n        this.rootViewController.viewWillAppear()\n        this.rootViewController.viewDidAppear()\n        \n        \n        this.rootViewController.view.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (sender, event) {\n                \n                (document.activeElement as HTMLElement).blur()\n                \n            }\n        )\n        \n        \n        \n        const windowDidResize = function (this: UICore) {\n            \n            // Doing layout two times to prevent page scrollbars from confusing the layout\n            this.rootViewController._triggerLayoutViewSubviews()\n            UIView.layoutViewsIfNeeded()\n            \n            this.rootViewController._triggerLayoutViewSubviews()\n            //UIView.layoutViewsIfNeeded()\n            \n            this.rootViewController.view.broadcastEventInSubtree({\n                \n                name: UICore.broadcastEventName.WindowDidResize,\n                parameters: nil\n                \n            })\n            \n        }\n        \n        window.addEventListener(\"resize\", windowDidResize.bind(this))\n        \n        const didScroll = function (this: UICore) {\n            \n            //code\n            \n            this.rootViewController.view.broadcastEventInSubtree({\n                \n                name: UIView.broadcastEventName.PageDidScroll,\n                parameters: nil\n                \n            })\n            \n            \n            \n        }.bind(this)\n        \n        window.addEventListener(\"scroll\", didScroll, false)\n        \n        const hashDidChange = function (this: UICore) {\n            \n            //code\n            \n            this.rootViewController.handleRouteRecursively(UIRoute.currentRoute)\n            \n            this.rootViewController.view.broadcastEventInSubtree({\n                \n                name: UICore.broadcastEventName.RouteDidChange,\n                parameters: nil\n                \n            })\n            \n            \n        }.bind(this)\n    \n        window.addEventListener(\"hashchange\", hashDidChange.bind(this), false)\n    \n        hashDidChange()\n    \n    \n    \n    }\n    \n    \n}\n\n\n\n\n\nArray.prototype.indexOf || (Array.prototype.indexOf = function (d, e) {\n    var a\n    if (null == this) {\n        throw new TypeError(\"\\\"this\\\" is null or not defined\")\n    }\n    const c = Object(this),\n        b = c.length >>> 0\n    if (0 === b) {\n        return -1\n    }\n    a = +e || 0\n    Infinity === Math.abs(a) && (a = 0)\n    if (a >= b) {\n        return -1\n    }\n    for (a = Math.max(0 <= a ? a : b - Math.abs(a), 0); a < b;) {\n        if (a in c && c[a] === d) {\n            return a\n        }\n        a++\n    }\n    return -1\n})\n\n\n\n\n\n\n\n\n\n\n", "import { UIObject } from \"./UIObject\"\n\n\n\n\n\nexport class UIPoint extends UIObject {\n    \n    constructor(public x: number, public y: number) {\n        \n        super()\n        \n    }\n    \n    \n    \n    \n    \n    copy() {\n        return new UIPoint(this.x, this.y)\n    }\n    \n    \n    isEqualTo(point: UIPoint) {\n    \n        const result = (this.x == point.x && this.y == point.y)\n    \n        return result\n        \n    }\n    \n    scale(zoom: number) {\n        const x = this.x\n        const y = this.y\n        this.x = x * zoom\n        this.y = y * zoom\n        return this\n    }\n    \n    \n    \n    add(v: UIPoint) {\n        this.x = this.x + v.x\n        this.y = this.y + v.y\n        return this\n    }\n    \n    subtract(v: UIPoint) {\n        this.x = this.x - v.x\n        this.y = this.y - v.y\n        return this\n    }\n    \n    to(b: UIPoint) {\n        const a = this\n        const ab = b.copy().add(a.copy().scale(-1))\n        return ab\n    }\n    \n    pointWithX(x: number) {\n        const result = this.copy()\n        result.x = x\n        return result\n    }\n    \n    pointWithY(y: number) {\n        const result = this.copy()\n        result.y = y\n        return result\n    }\n    \n    pointByAddingX(x: number) {\n        return this.pointWithX(this.x + x)\n    }\n    \n    pointByAddingY(y: number) {\n        return this.pointWithY(this.y + y)\n    }\n    \n    \n    get length() {\n        var result = this.x * this.x + this.y * this.y\n        result = Math.sqrt(result)\n        return result\n    }\n    \n    \n    didChange(b) {\n        \n        // Callback to be set by delegate\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { FIRST_OR_NIL, IS, IS_NIL, IS_NOT_NIL, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UIRectangle extends UIObject {\n    \n    _isBeingUpdated: boolean\n    rectanglePointDidChange: (b: any) => void\n    max: UIPoint\n    min: UIPoint\n    \n    \n    constructor(x: number = 0, y: number = 0, height: number = 0, width: number = 0) {\n        \n        super()\n        \n        this.min = new UIPoint(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\n        this.max = new UIPoint(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY)\n        \n        this.min.didChange = this.rectanglePointDidChange\n        this.max.didChange = this.rectanglePointDidChange\n        \n        this._isBeingUpdated = NO\n        \n        this.min = new UIPoint(x, y)\n        this.max = new UIPoint(x + width, y + height)\n        \n        if (IS_NIL(height)) {\n            this.max.y = height\n        }\n        \n        if (IS_NIL(width)) {\n            this.max.x = width\n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    copy() {\n        const result = new UIRectangle(this.x, this.y, this.height, this.width)\n        return result\n    }\n    \n    isEqualTo(rectangle: UIRectangle) {\n    \n    \n        const result = (IS(rectangle) && this.min.isEqualTo(rectangle.min) && this.max.isEqualTo(rectangle.max))\n    \n        return result\n        \n    }\n    \n    static zero() {\n    \n        const result = new UIRectangle(0, 0, 0, 0)\n    \n        return result\n        \n    }\n    \n    containsPoint(point: UIPoint) {\n        return this.min.x <= point.x && this.min.y <= point.y &&\n            point.x <= this.max.x && point.y <= this.max.y\n    }\n    \n    updateByAddingPoint(point: UIPoint) {\n        \n        if (!point) {\n            point = new UIPoint(0, 0)\n        }\n        \n        this.beginUpdates()\n    \n        const min = this.min.copy()\n        if (min.x === nil) {\n            min.x = this.max.x\n        }\n        if (min.y === nil) {\n            min.y = this.max.y\n        }\n    \n        const max = this.max.copy()\n        if (max.x === nil) {\n            max.x = this.min.x\n        }\n        if (max.y === nil) {\n            max.y = this.min.y\n        }\n        \n        this.min.x = Math.min(min.x, point.x)\n        this.min.y = Math.min(min.y, point.y)\n        this.max.x = Math.max(max.x, point.x)\n        this.max.y = Math.max(max.y, point.y)\n        \n        this.finishUpdates()\n        \n    }\n    \n    get height() {\n        if (this.max.y === nil) {\n            return nil\n        }\n        return this.max.y - this.min.y\n    }\n    \n    set height(height: number) {\n        this.max.y = this.min.y + height\n    }\n    \n    \n    \n    get width() {\n        if (this.max.x === nil) {\n            return nil\n        }\n        return this.max.x - this.min.x\n    }\n    \n    set width(width: number) {\n        this.max.x = this.min.x + width\n    }\n    \n    \n    \n    get x() {\n        return this.min.x\n    }\n    \n    set x(x: number) {\n        \n        this.beginUpdates()\n    \n        const width = this.width\n        this.min.x = x\n        this.max.x = this.min.x + width\n        \n        this.finishUpdates()\n        \n    }\n    \n    \n    get y() {\n        return this.min.y\n    }\n    \n    \n    set y(y: number) {\n        \n        this.beginUpdates()\n    \n        const height = this.height\n        this.min.y = y\n        this.max.y = this.min.y + height\n        \n        this.finishUpdates()\n        \n    }\n    \n    \n    \n    \n    get topLeft() {\n        \n        return this.min.copy()\n        \n    }\n    \n    get topRight() {\n        return new UIPoint(this.max.x, this.y)\n    }\n    \n    get bottomLeft() {\n        return new UIPoint(this.x, this.max.y)\n    }\n    \n    get bottomRight() {\n        \n        return this.max.copy()\n        \n    }\n    \n    \n    get center() {\n    \n        const result = this.min.copy().add(this.min.to(this.max).scale(0.5))\n    \n        return result\n        \n    }\n    \n    set center(center: UIPoint) {\n    \n        const offset = this.center.to(center)\n        this.offsetByPoint(offset)\n        \n    }\n    \n    offsetByPoint(offset: UIPoint) {\n        \n        this.min.add(offset)\n        this.max.add(offset)\n        \n        return this\n        \n    }\n    \n    \n    \n    concatenateWithRectangle(rectangle: UIRectangle) {\n        \n        this.updateByAddingPoint(rectangle.bottomRight)\n        this.updateByAddingPoint(rectangle.topLeft)\n        \n        return this\n        \n    }\n    \n    \n    \n    \n    \n    intersectionRectangleWithRectangle(rectangle: UIRectangle): UIRectangle {\n    \n    \n        const result = this.copy()\n    \n        result.beginUpdates()\n    \n        const min = result.min\n        if (min.x === nil) {\n            min.x = rectangle.max.x - Math.min(result.width, rectangle.width)\n        }\n        if (min.y === nil) {\n            min.y = rectangle.max.y - Math.min(result.height, rectangle.height)\n        }\n    \n        const max = result.max\n        if (max.x === nil) {\n            max.x = rectangle.min.x + Math.min(result.width, rectangle.width)\n        }\n        if (max.y === nil) {\n            max.y = rectangle.min.y + Math.min(result.height, rectangle.height)\n        }\n        \n        result.min.x = Math.max(result.min.x, rectangle.min.x)\n        result.min.y = Math.max(result.min.y, rectangle.min.y)\n        result.max.x = Math.min(result.max.x, rectangle.max.x)\n        result.max.y = Math.min(result.max.y, rectangle.max.y)\n        \n        \n        if (result.height < 0) {\n    \n            const averageY = (this.center.y + rectangle.center.y) * 0.5\n            result.min.y = averageY\n            result.max.y = averageY\n            \n        }\n        \n        if (result.width < 0) {\n    \n            const averageX = (this.center.x + rectangle.center.x) * 0.5\n            result.min.x = averageX\n            result.max.x = averageX\n            \n        }\n        \n        result.finishUpdates()\n        \n        return result\n        \n    }\n    \n    \n    \n    get area() {\n        const result = this.height * this.width\n        return result\n    }\n    \n    \n    intersectsWithRectangle(rectangle: UIRectangle) {\n        \n        return (this.intersectionRectangleWithRectangle(rectangle).area != 0)\n        \n    }\n    \n    \n    \n    \n    \n    // add some space around the rectangle\n    rectangleWithInsets(left: number, right: number, bottom: number, top: number) {\n        const result = this.copy()\n        result.min.x = this.min.x + left\n        result.max.x = this.max.x - right\n        result.min.y = this.min.y + top\n        result.max.y = this.max.y - bottom\n        return result\n    }\n    \n    rectangleWithInset(inset: number) {\n        const result = this.rectangleWithInsets(inset, inset, inset, inset)\n        return result\n    }\n    \n    rectangleWithHeight(height: number, centeredOnPosition: number = nil) {\n        \n        if (isNaN(centeredOnPosition)) {\n            centeredOnPosition = nil\n        }\n    \n        const result = this.copy()\n        result.height = height\n        \n        if (centeredOnPosition != nil) {\n            const change = height - this.height\n            result.offsetByPoint(new UIPoint(0, change * centeredOnPosition).scale(-1))\n        }\n        \n        return result\n        \n    }\n    \n    rectangleWithWidth(width: number, centeredOnPosition: number = nil) {\n        \n        if (isNaN(centeredOnPosition)) {\n            centeredOnPosition = nil\n        }\n    \n        const result = this.copy()\n        result.width = width\n        \n        if (centeredOnPosition != nil) {\n            const change = width - this.width\n            result.offsetByPoint(new UIPoint(change * centeredOnPosition, 0).scale(-1))\n        }\n        \n        return result\n        \n    }\n    \n    rectangleWithHeightRelativeToWidth(heightRatio: number = 1, centeredOnPosition: number = nil) {\n    \n        const result = this.rectangleWithHeight(this.width * heightRatio, centeredOnPosition)\n    \n        return result\n        \n    }\n    \n    rectangleWithWidthRelativeToHeight(widthRatio: number = 1, centeredOnPosition: number = nil) {\n    \n        const result = this.rectangleWithWidth(this.height * widthRatio, centeredOnPosition)\n    \n        return result\n        \n    }\n    \n    rectangleWithX(x: number, centeredOnPosition: number = 0) {\n    \n        const result = this.copy()\n        result.x = x - result.width * centeredOnPosition\n        \n        return result\n        \n    }\n    \n    rectangleWithY(y: number, centeredOnPosition: number = 0) {\n    \n        const result = this.copy()\n        result.y = y - result.height * centeredOnPosition\n        \n        return result\n        \n    }\n    \n    \n    \n    rectangleByAddingX(x: number) {\n    \n        const result = this.copy()\n        result.x = this.x + x\n        \n        return result\n        \n    }\n    \n    rectangleByAddingY(y: number) {\n    \n        const result = this.copy()\n        result.y = this.y + y\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    rectanglesBySplittingWidth(\n        weights: number[],\n        paddings: number | number[] = 0,\n        absoluteWidths: number | number[] = nil\n    ) {\n        \n        if (IS_NIL(paddings)) {\n            \n            paddings = 1\n            \n        }\n        \n        if (!(paddings instanceof Array)) {\n            \n            paddings = [paddings].arrayByRepeating(weights.length - 1)\n            \n        }\n        \n        paddings = paddings.arrayByTrimmingToLengthIfLonger(weights.length - 1)\n        \n        if (!(absoluteWidths instanceof Array) && IS_NOT_NIL(absoluteWidths)) {\n            absoluteWidths = [absoluteWidths].arrayByRepeating(weights.length)\n        }\n    \n        const result: UIRectangle[] = []\n        const sumOfWeights = weights.reduce(function (a, b, index) {\n            if (IS_NOT_NIL(absoluteWidths[index])) {\n                b = 0\n            }\n            return a + b\n        }, 0)\n        const sumOfPaddings = paddings.summedValue\n        const sumOfAbsoluteWidths = (absoluteWidths as number[]).summedValue\n        const totalRelativeWidth = this.width - sumOfPaddings - sumOfAbsoluteWidths\n        var previousCellMaxX = this.x\n    \n        for (var i = 0; i < weights.length; i++) {\n    \n            var resultWidth: number\n            if (IS_NOT_NIL(absoluteWidths[i])) {\n                \n                resultWidth = absoluteWidths[i] || 0\n                \n            }\n            else {\n                \n                resultWidth = totalRelativeWidth * (weights[i] / sumOfWeights)\n                \n            }\n    \n            const rectangle = this.rectangleWithWidth(resultWidth)\n    \n            var padding = 0\n            if (paddings.length > i && paddings[i]) {\n                padding = paddings[i]\n            }\n            \n            rectangle.x = previousCellMaxX\n            previousCellMaxX = rectangle.max.x + padding\n            //rectangle = rectangle.rectangleWithInsets(0, padding, 0, 0);\n            result.push(rectangle)\n            \n        }\n        \n        return result\n        \n    }\n    \n    rectanglesBySplittingHeight(\n        weights: number[],\n        paddings: number | number[] = 0,\n        absoluteHeights: number | number[] = nil\n    ) {\n        \n        if (IS_NIL(paddings)) {\n            \n            paddings = 1\n            \n        }\n        \n        if (!(paddings instanceof Array)) {\n            \n            paddings = [paddings].arrayByRepeating(weights.length - 1)\n            \n        }\n        \n        paddings = paddings.arrayByTrimmingToLengthIfLonger(weights.length - 1)\n        \n        if (!(absoluteHeights instanceof Array) && IS_NOT_NIL(absoluteHeights)) {\n            absoluteHeights = [absoluteHeights].arrayByRepeating(weights.length)\n        }\n    \n        const result: UIRectangle[] = []\n        const sumOfWeights = weights.reduce(function (a, b, index) {\n            if (IS_NOT_NIL(absoluteHeights[index])) {\n                b = 0\n            }\n            return a + b\n        }, 0)\n        const sumOfPaddings = paddings.summedValue\n        const sumOfAbsoluteHeights = (absoluteHeights as number[]).summedValue\n        const totalRelativeHeight = this.height - sumOfPaddings - sumOfAbsoluteHeights\n        var previousCellMaxY = this.y\n    \n        for (var i = 0; i < weights.length; i++) {\n            var resultHeight: number\n            if (IS_NOT_NIL(absoluteHeights[i])) {\n                \n                resultHeight = absoluteHeights[i] || 0\n                \n            }\n            else {\n                \n                resultHeight = totalRelativeHeight * (weights[i] / sumOfWeights)\n                \n            }\n    \n            const rectangle = this.rectangleWithHeight(resultHeight)\n    \n            var padding = 0\n            if (paddings.length > i && paddings[i]) {\n                padding = paddings[i]\n            }\n            \n            rectangle.y = previousCellMaxY\n            previousCellMaxY = rectangle.max.y + padding\n            //rectangle = rectangle.rectangleWithInsets(0, 0, padding, 0);\n            result.push(rectangle)\n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    rectanglesByEquallySplittingWidth(numberOfFrames: number, padding: number = 0) {\n        const result: UIRectangle[] = []\n        const totalPadding = padding * (numberOfFrames - 1)\n        const resultWidth = (this.width - totalPadding) / numberOfFrames\n        for (var i = 0; i < numberOfFrames; i++) {\n            const rectangle = this.rectangleWithWidth(resultWidth, i / (numberOfFrames - 1))\n            result.push(rectangle)\n        }\n        return result\n    }\n    \n    rectanglesByEquallySplittingHeight(numberOfFrames: number, padding: number = 0) {\n        const result: UIRectangle[] = []\n        const totalPadding = padding * (numberOfFrames - 1)\n        const resultHeight = (this.height - totalPadding) / numberOfFrames\n        for (var i = 0; i < numberOfFrames; i++) {\n            const rectangle = this.rectangleWithHeight(resultHeight, i / (numberOfFrames - 1))\n            result.push(rectangle)\n        }\n        return result\n    }\n    \n    \n    \n    distributeViewsAlongWidth(\n        views: UIView[],\n        weights: number | number[] = 1,\n        paddings?: number | number[],\n        absoluteWidths?: number | number[]\n    ) {\n        \n        if (!(weights instanceof Array)) {\n            weights = [weights].arrayByRepeating(views.length)\n        }\n    \n        const frames = this.rectanglesBySplittingWidth(weights, paddings, absoluteWidths)\n    \n        frames.forEach((frame, index, array) => FIRST_OR_NIL(views[index]).frame = frame)\n        \n        return this\n        \n    }\n    \n    distributeViewsAlongHeight(\n        views: UIView[],\n        weights: number | number[] = 1,\n        paddings?: number | number[],\n        absoluteHeights?: number | number[]\n    ) {\n        \n        if (!(weights instanceof Array)) {\n            weights = [weights].arrayByRepeating(views.length)\n        }\n    \n        const frames = this.rectanglesBySplittingHeight(weights, paddings, absoluteHeights)\n    \n        frames.forEach((frame, index, array) => FIRST_OR_NIL(views[index]).frame = frame)\n        \n        return this\n        \n    }\n    \n    \n    distributeViewsEquallyAlongWidth(views: UIView[], padding: number) {\n    \n        const frames = this.rectanglesByEquallySplittingWidth(views.length, padding)\n    \n        frames.forEach(function (frame, index, array) {\n            views[index].frame = frame\n        })\n        \n        return this\n        \n    }\n    \n    distributeViewsEquallyAlongHeight(views: UIView[], padding: number) {\n    \n        const frames = this.rectanglesByEquallySplittingHeight(views.length, padding)\n    \n        frames.forEach(function (frame, index, array) {\n            views[index].frame = frame\n        })\n        \n        return this\n        \n    }\n    \n    \n    \n    rectangleForNextRow(padding: number = 0, height = this.height) {\n        const result = this.rectangleWithY(this.max.y + padding)\n        if (height != this.height) {\n            result.height = height\n        }\n        return result\n    }\n    \n    rectangleForNextColumn(padding: number = 0, width = this.width) {\n        const result = this.rectangleWithX(this.max.x + padding)\n        if (width != this.width) {\n            result.width = width\n        }\n        return result\n    }\n    \n    rectangleForPreviousRow(padding: number = 0) {\n        const result = this.rectangleWithY(this.min.y - this.height - padding)\n        return result\n    }\n    \n    rectangleForPreviousColumn(padding: number = 0) {\n        const result = this.rectangleWithX(this.min.x - this.width - padding)\n        return result\n    }\n    \n    \n    \n    // Bounding box\n    static boundingBoxForPoints(points) {\n        const result = new UIRectangle()\n        for (var i = 0; i < points.length; i++) {\n            result.updateByAddingPoint(points[i])\n        }\n        return result\n    }\n    \n    \n    beginUpdates() {\n        this._isBeingUpdated = YES\n    }\n    \n    finishUpdates() {\n        this._isBeingUpdated = NO\n        this.didChange()\n    }\n    \n    \n    didChange() {\n        \n        // Callback to be set by delegate\n        \n    }\n    \n    _rectanglePointDidChange() {\n        \n        if (!this._isBeingUpdated) {\n            \n            this.didChange()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS_FIREFOX, IS_SAFARI } from \"./ClientCheckers\"\nimport { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport \"./UICoreExtensions\"\nimport { UILocalizedTextObject } from \"./UIInterfaces\"\nimport { FIRST, IS, IS_DEFINED, IS_NIL, IS_NOT, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIViewController } from \"./UIViewController\"\n\n\ndeclare module AutoLayout {\n    \n    \n    class Constraint {\n        \n        [key: string]: any\n        \n    }\n    \n    \n    class View {\n        \n        [key: string]: any\n        \n    }\n    \n    \n    class VisualFormat {\n        \n        static parse(arg0: any, arg1: any): any;\n        \n        [key: string]: any\n        \n    }\n    \n    \n    enum Attribute {\n        \n        LEFT, RIGHT, BOTTOM, TOP, CENTERX, CENTERY, WIDTH, HEIGHT, ZINDEX, VARIABLE, NOTANATTRIBUTE\n        \n    }\n    \n    \n    enum Relation {\n        \n        EQU, LEQ, GEQ\n        \n    }\n    \n    \n}\n\n// @ts-ignore\nif (!window.AutoLayout) {\n    \n    // @ts-ignore\n    window.AutoLayout = nil\n    \n}\n\n\n\ninterface LooseObject {\n    [key: string]: any\n}\n\n\nexport interface ControlEventTargetsObject {\n    \n    [key: string]: Function[];\n    \n}\n\n\nexport interface UIViewBroadcastEvent {\n    \n    name: string;\n    parameters: {\n        [key: string]: string | string[];\n    }\n    \n}\n\n\n\nexport type UIViewAddControlEventTargetObject<T extends typeof UIView.controlEvent> = {\n    \n    [K in keyof T]: ((sender: UIView, event: Event) => void) & Partial<UIViewAddControlEventTargetObject<T>>\n    \n}\n\n\n\n\n\nexport class UIView extends UIObject {\n    \n    _nativeSelectionEnabled: boolean = YES\n    _shouldLayout: boolean\n    _UITableViewRowIndex: number\n    _UITableViewReusabilityIdentifier: any\n    _UIViewIntrinsicTemporaryWidth: string\n    _UIViewIntrinsicTemporaryHeight: string\n    _enabled: boolean = YES\n    _frame: any\n    _backgroundColor: UIColor = UIColor.transparentColor\n    \n    _viewHTMLElement: HTMLElement & LooseObject\n    \n    _innerHTMLKey: string\n    _defaultInnerHTML: string\n    _parameters: { [x: string]: (string | UILocalizedTextObject) }\n    \n    _localizedTextObject: UILocalizedTextObject = nil\n    \n    _controlEventTargets: ControlEventTargetsObject = {} //{ \"PointerDown\": Function[]; \"PointerMove\": Function[]; \"PointerLeave\": Function[]; \"PointerEnter\": Function[]; \"PointerUpInside\": Function[]; \"PointerUp\": Function[]; \"PointerHover\": Function[]; };\n    _frameTransform: string\n    viewController: UIViewController = nil\n    _updateLayoutFunction: any = nil\n    // @ts-ignore\n    _constraints: any[] //AutoLayout.Constraint[];\n    superview: UIView\n    subviews: UIView[]\n    _styleClasses: any[]\n    _isHidden: boolean = NO\n    \n    pausesPointerEvents: boolean = NO\n    stopsPointerEventPropagation: boolean = YES\n    _isPointerInside: boolean\n    _isPointerValid: boolean\n    _initialPointerPosition: UIPoint\n    _hasPointerDragged: boolean\n    _pointerDragThreshold = 2\n    \n    ignoresTouches: boolean = NO\n    ignoresMouse: boolean = NO\n    \n    core: UICore = UICore.main\n    \n    static _UIViewIndex: number = -1\n    _UIViewIndex: number\n    \n    static _viewsToLayout: UIView[] = []\n    \n    forceIntrinsicSizeZero: boolean = NO\n    _touchEventTime: number\n    \n    static _pageScale = 1\n    \n    constructor(\n        elementID: string = (\"UIView\" +\n            UIView.nextIndex),\n        viewHTMLElement: HTMLElement & LooseObject = null,\n        elementType: string = null,\n        initViewData?: any\n    ) {\n        \n        super()\n        \n        // Instance variables\n        \n        UIView._UIViewIndex = UIView.nextIndex\n        this._UIViewIndex = UIView._UIViewIndex\n        \n        this._styleClasses = []\n        // Object.defineProperty(this, \"styleClasses\", { get: this.styleClasses, set: this.setStyleClasses });\n        // Object.defineProperty(this, \"styleClassName\", { get: this.styleClassName });\n        \n        this._initViewHTMLElement(elementID, viewHTMLElement, elementType)\n        \n        this.subviews = []\n        this.superview = nil\n        \n        // Object.defineProperty(this, \"elementID\", { get: this.elementID });\n        \n        // Object.defineProperty(this, \"constraints\", { get: this.constraints, set: this.setConstraints });\n        this._constraints = []\n        \n        this._updateLayoutFunction = nil\n        \n        //Object.defineProperty(this, \"backgroundColor\", { get: this.backgroundColor, set: this.setBackgroundColor });\n        //this.backgroundColor = \"transparent\";\n        \n        // Object.defineProperty(this, \"alpha\", { get: this.alpha, set: this.setAlpha });\n        \n        // Object.defineProperty(this, \"frame\", { get: this.frame, set: this.setFrame });\n        // Object.defineProperty(this, \"bounds\", { get: this.bounds, set: this.setBounds });\n        \n        // Object.defineProperty(this, \"userInteractionEnabled\", { get: this.userInteractionEnabled, set: this.setUserInteractionEnabled });\n        \n        // this._controlEventTargets = {\n        //     \"PointerDown\": [],\n        //     \"PointerMove\": [],\n        //     \"PointerLeave\": [],\n        //     \"PointerEnter\": [],\n        //     \"PointerUpInside\": [],\n        //     \"PointerUp\": [],\n        //     \"PointerHover\": []\n        // }\n        \n        \n        this._frameTransform = \"\"\n        \n        this.initView(this.viewHTMLElement.id, this.viewHTMLElement, initViewData)\n        \n        this._initViewCSSSelectorsIfNeeded()\n        \n        this._loadUIEvents()\n        \n        \n        this.setNeedsLayout()\n        \n        \n    }\n    \n    \n    static get nextIndex() {\n        \n        return UIView._UIViewIndex + 1\n        \n    }\n    \n    static get pageHeight() {\n        \n        const body = document.body\n        const html = document.documentElement\n        \n        const height = Math.max(\n            body.scrollHeight,\n            body.offsetHeight,\n            html.clientHeight,\n            html.scrollHeight,\n            html.offsetHeight\n        )\n        \n        return height\n        \n    }\n    \n    static get pageWidth() {\n        \n        const body = document.body\n        const html = document.documentElement\n        \n        const width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth)\n        \n        return width\n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData?: any) {\n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    centerInContainer() {\n        this.style.left = \"50%\"\n        this.style.top = \"50%\"\n        this.style.transform = \"translateX(-50%) translateY(-50%)\"\n    }\n    \n    centerXInContainer() {\n        this.style.left = \"50%\"\n        this.style.transform = \"translateX(-50%)\"\n    }\n    \n    centerYInContainer() {\n        this.style.top = \"50%\"\n        this.style.transform = \"translateY(-50%)\"\n    }\n    \n    \n    \n    _initViewHTMLElement(elementID, viewHTMLElement, elementType = \"div\") {\n        \n        \n        if (!IS(elementType)) {\n            \n            elementType = \"div\"\n            \n        }\n        \n        if (!IS(viewHTMLElement)) {\n            \n            this._viewHTMLElement = this.createElement(elementID, elementType)\n            \n            this.style.position = \"absolute\"\n            this.style.margin = \"0\"\n            \n        }\n        else {\n            \n            this._viewHTMLElement = viewHTMLElement\n            \n        }\n        \n        if (IS(elementID)) {\n            \n            \n            this.viewHTMLElement.id = elementID\n            \n            \n        }\n        \n        \n        this.viewHTMLElement.obeyAutolayout = YES\n        \n        this.viewHTMLElement.UIView = this\n        \n        this.addStyleClass(this.styleClassName)\n        \n    }\n    \n    \n    \n    set nativeSelectionEnabled(selectable: boolean) {\n        this._nativeSelectionEnabled = selectable\n        if (!selectable) {\n            this.style.cssText = this.style.cssText +\n                \" -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\"\n        }\n        else {\n            this.style.cssText = this.style.cssText +\n                \" -webkit-touch-callout: text; -webkit-user-select: text; -khtml-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text;\"\n        }\n    }\n    \n    \n    get nativeSelectionEnabled() {\n        return this._nativeSelectionEnabled\n    }\n    \n    \n    \n    get styleClassName() {\n        \n        const result = \"UICore_UIView_\" + this.class.name\n        \n        return result\n        \n    }\n    \n    _initViewCSSSelectorsIfNeeded() {\n        \n        if (!this.class._areViewCSSSelectorsInitialized) {\n            \n            this.initViewStyleSelectors()\n            \n            this.class._areViewCSSSelectorsInitialized = YES\n            \n        }\n        \n    }\n    \n    initViewStyleSelectors() {\n        \n        // Override this in a subclass\n        \n    }\n    \n    initStyleSelector(selector, style) {\n        \n        const styleRules = UIView.getStyleRules(selector)\n        \n        if (!styleRules) {\n            \n            UIView.createStyleSelector(selector, style)\n            \n        }\n        \n    }\n    \n    \n    createElement(elementID, elementType) {\n        let result = document.getElementById(elementID)\n        if (!result) {\n            result = document.createElement(elementType)\n        }\n        return result\n    }\n    \n    public get viewHTMLElement() {\n        return this._viewHTMLElement\n    }\n    \n    public get elementID() {\n        \n        return this.viewHTMLElement.id\n        \n    }\n    \n    \n    setInnerHTML(key: string, defaultString: string, parameters?: { [x: string]: string | UILocalizedTextObject }) {\n        \n        this._innerHTMLKey = key\n        this._defaultInnerHTML = defaultString\n        this._parameters = parameters\n        \n        const languageName = UICore.languageService.currentLanguageKey\n        const result = UICore.languageService.stringForKey(key, languageName, defaultString, parameters)\n        \n        this.innerHTML = result\n        \n    }\n    \n    \n    _setInnerHTMLFromKeyIfPossible() {\n        \n        if (this._innerHTMLKey && this._defaultInnerHTML) {\n            \n            this.setInnerHTML(this._innerHTMLKey, this._defaultInnerHTML, this._parameters)\n            \n        }\n        \n    }\n    \n    _setInnerHTMLFromLocalizedTextObjectIfPossible() {\n        \n        if (IS(this._localizedTextObject)) {\n            \n            this.innerHTML = UICore.languageService.stringForCurrentLanguage(this._localizedTextObject)\n            \n        }\n        \n    }\n    \n    \n    get localizedTextObject() {\n        \n        return this._localizedTextObject\n        \n    }\n    \n    set localizedTextObject(localizedTextObject: UILocalizedTextObject) {\n        \n        this._localizedTextObject = localizedTextObject\n        \n        this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n        \n    }\n    \n    \n    get innerHTML() {\n        return this.viewHTMLElement.innerHTML\n    }\n    \n    \n    set innerHTML(innerHTML) {\n        \n        if (this.innerHTML != innerHTML) {\n            \n            this.viewHTMLElement.innerHTML = FIRST(innerHTML, \"\")\n            \n        }\n        \n    }\n    \n    \n    \n    set hoverText(hoverText: string) {\n        this.viewHTMLElement.setAttribute(\"title\", hoverText)\n    }\n    \n    get hoverText() {\n        return this.viewHTMLElement.getAttribute(\"title\")\n    }\n    \n    \n    get scrollSize() {\n        \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.scrollHeight, this.viewHTMLElement.scrollWidth)\n        \n        return result\n        \n    }\n    \n    \n    \n    get dialogView(): UIDialogView {\n        if (!IS(this.superview)) {\n            return nil\n        }\n        if (!(this[\"_isAUIDialogView\"])) {\n            return this.superview.dialogView\n        }\n        return this as any as UIDialogView\n    }\n    \n    \n    get rootView(): UIView {\n        if (IS(this.superview)) {\n            return this.superview.rootView\n        }\n        return this\n    }\n    \n    \n    public set enabled(enabled: boolean) {\n        this._enabled = enabled\n        this.updateContentForCurrentEnabledState()\n    }\n    \n    public get enabled(): boolean {\n        return this._enabled\n    }\n    \n    updateContentForCurrentEnabledState() {\n        this.hidden = !this.enabled\n        this.userInteractionEnabled = this.enabled\n    }\n    \n    \n    \n    \n    public get tabIndex(): number {\n        \n        return Number(this.viewHTMLElement.getAttribute(\"tabindex\"))\n        \n    }\n    \n    \n    public set tabIndex(index: number) {\n        \n        this.viewHTMLElement.setAttribute(\"tabindex\", \"\" + index)\n        \n    }\n    \n    \n    \n    \n    \n    get styleClasses() {\n        \n        return this._styleClasses\n        \n    }\n    \n    set styleClasses(styleClasses) {\n        \n        this._styleClasses = styleClasses\n        \n    }\n    \n    hasStyleClass(styleClass) {\n        \n        // This is for performance reasons\n        if (!IS(styleClass)) {\n            return NO\n        }\n        \n        const index = this.styleClasses.indexOf(styleClass)\n        if (index > -1) {\n            return YES\n        }\n        return NO\n        \n    }\n    \n    \n    \n    addStyleClass(styleClass: string) {\n        \n        if (!IS(styleClass)) {\n            return\n        }\n        \n        if (!this.hasStyleClass(styleClass)) {\n            this._styleClasses.push(styleClass)\n        }\n        \n    }\n    \n    removeStyleClass(styleClass: string) {\n        \n        // This is for performance reasons\n        if (!IS(styleClass)) {\n            return\n        }\n        \n        const index = this.styleClasses.indexOf(styleClass)\n        if (index > -1) {\n            \n            this.styleClasses.splice(index, 1)\n            \n        }\n        \n        \n    }\n    \n    \n    \n    static findViewWithElementID(elementID: string): UIView {\n        const viewHTMLElement = document.getElementById(elementID)\n        if (IS_NOT(viewHTMLElement)) {\n            return nil\n        }\n        // @ts-ignore\n        const result = viewHTMLElement.UIView\n        return result\n    }\n    \n    \n    \n    \n    static createStyleSelector(selector, style) {\n        \n        return\n        \n        // @ts-ignore\n        if (!document.styleSheets) {\n            return\n        }\n        if (document.getElementsByTagName(\"head\").length == 0) {\n            return\n        }\n        \n        var styleSheet\n        var mediaType\n        \n        if (document.styleSheets.length > 0) {\n            for (var i = 0, l: any = document.styleSheets.length; i < l; i++) {\n                if (document.styleSheets[i].disabled) {\n                    continue\n                }\n                const media = document.styleSheets[i].media\n                mediaType = typeof media\n                \n                if (mediaType === \"string\") {\n                    if (media as any === \"\" || ((media as any).indexOf(\"screen\") !== -1)) {\n                        styleSheet = document.styleSheets[i]\n                    }\n                }\n                else if (mediaType == \"object\") {\n                    if (media.mediaText === \"\" || (media.mediaText.indexOf(\"screen\") !== -1)) {\n                        styleSheet = document.styleSheets[i]\n                    }\n                }\n                \n                if (typeof styleSheet !== \"undefined\") {\n                    break\n                }\n            }\n        }\n        \n        if (typeof styleSheet === \"undefined\") {\n            const styleSheetElement = document.createElement(\"style\")\n            styleSheetElement.type = \"text/css\"\n            document.getElementsByTagName(\"head\")[0].appendChild(styleSheetElement)\n            \n            for (i = 0; i < document.styleSheets.length; i++) {\n                if (document.styleSheets[i].disabled) {\n                    continue\n                }\n                styleSheet = document.styleSheets[i]\n            }\n            \n            mediaType = typeof styleSheet.media\n        }\n        \n        if (mediaType === \"string\") {\n            for (var i = 0, l = styleSheet.rules.length; i < l; i++) {\n                if (styleSheet.rules[i].selectorText && styleSheet.rules[i].selectorText.toLowerCase() ==\n                    selector.toLowerCase()) {\n                    styleSheet.rules[i].style.cssText = style\n                    return\n                }\n            }\n            styleSheet.addRule(selector, style)\n        }\n        else if (mediaType === \"object\") {\n            \n            var styleSheetLength = 0\n            \n            try {\n                \n                styleSheetLength = (styleSheet.cssRules) ? styleSheet.cssRules.length : 0\n                \n            } catch (error) {\n                \n            }\n            \n            \n            for (var i = 0; i < styleSheetLength; i++) {\n                if (styleSheet.cssRules[i].selectorText && styleSheet.cssRules[i].selectorText.toLowerCase() ==\n                    selector.toLowerCase()) {\n                    styleSheet.cssRules[i].style.cssText = style\n                    return\n                }\n            }\n            styleSheet.insertRule(selector + \"{\" + style + \"}\", styleSheetLength)\n        }\n    }\n    \n    static getStyleRules(selector) {\n        var selector = selector.toLowerCase()\n        for (var i = 0; i < document.styleSheets.length; i++) {\n            const styleSheet = document.styleSheets[i] as any\n            var styleRules\n            \n            try {\n                \n                styleRules = styleSheet.cssRules ? styleSheet.cssRules : styleSheet.rules\n                \n            } catch (error) {\n                \n            }\n            \n            return styleRules\n        }\n    }\n    \n    \n    \n    get style() {\n        return this.viewHTMLElement.style\n    }\n    \n    get computedStyle() {\n        return getComputedStyle(this.viewHTMLElement)\n    }\n    \n    public get hidden(): boolean {\n        return this._isHidden\n    }\n    \n    \n    public set hidden(v: boolean) {\n        \n        this._isHidden = v\n        \n        if (this._isHidden) {\n            this.style.visibility = \"hidden\"\n        }\n        else {\n            this.style.visibility = \"visible\"\n        }\n        \n        \n    }\n    \n    static set pageScale(scale: number) {\n        \n        UIView._pageScale = scale\n        \n        const zoom = scale\n        const width = 100 / zoom\n        const viewHTMLElement = UICore.main.rootViewController.view.viewHTMLElement\n        viewHTMLElement.style.transformOrigin = \"left top\"\n        viewHTMLElement.style.transform = \"scale(\" + zoom + \")\"\n        viewHTMLElement.style.width = width + \"%\"\n        \n    }\n    \n    static get pageScale() {\n        \n        return UIView._pageScale\n        \n    }\n    \n    \n    \n    \n    \n    calculateAndSetViewFrame() {\n        \n        // Use this method to calculate the frame for the view itself\n        \n        // This can be used when adding subviews to existing views like buttons\n        \n    }\n    \n    \n    \n    \n    \n    public get frame(): UIRectangle {\n        \n        // var result = new UIRectangle(1 * this.viewHTMLElement.offsetLeft, 1 * this.viewHTMLElement.offsetTop, 1 * this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth);\n        \n        // result.zIndex = 1 * this.style.zIndex;\n        \n        var result = this._frame\n        \n        if (!result) {\n            \n            result = new UIRectangle(1 * this.viewHTMLElement.offsetLeft, 1 * this.viewHTMLElement.offsetTop, 1 *\n                this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth)\n            result.zIndex = 0\n            \n        }\n        \n        return result.copy()\n        \n    }\n    \n    public set frame(rectangle: UIRectangle) {\n        \n        if (IS(rectangle)) {\n            this.setFrame(rectangle)\n        }\n        \n    }\n    \n    setFrame(rectangle, zIndex = 0, performUncheckedLayout = NO) {\n        \n        \n        const frame = this._frame || new UIRectangle(nil, nil, nil, nil)\n        \n        if (zIndex != undefined) {\n            rectangle.zIndex = zIndex\n        }\n        this._frame = rectangle\n        \n        // This is useless because frames are copied\n        // frame.didChange = function () {\n        //     // Do nothing\n        // }\n        // rectangle.didChange = function () {\n        //     this.frame = rectangle;\n        // }.bind(this);\n        \n        if (frame && frame.isEqualTo(rectangle) && !performUncheckedLayout) {\n            return\n        }\n        \n        \n        UIView._setAbsoluteSizeAndPosition(\n            this.viewHTMLElement,\n            rectangle.topLeft.x,\n            rectangle.topLeft.y,\n            rectangle.width,\n            rectangle.height,\n            rectangle.zIndex\n        )\n        \n        \n        if (frame.height != rectangle.height || frame.width != rectangle.width || performUncheckedLayout) {\n            \n            this.setNeedsLayout()\n            \n            this.boundsDidChange()\n            \n            //this.layoutSubviews();\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    get bounds() {\n        \n        var result: UIRectangle\n        \n        // if (IS_NOT(this._frame) && this.style.height == \"\" && this.style.width  == \"\" && this.style.left == \"\" && this.style.right == \"\" && this.style.bottom == \"\" && this.style.top == \"\") {\n        \n        //     result = new UIRectangle(0, 0, 0, 0)\n        \n        // }\n        // else\n        if (IS_NOT(this._frame)) {\n            \n            result = new UIRectangle(0, 0, 1 * this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth)\n            \n        }\n        else {\n            \n            result = this.frame.copy()\n            \n            result.x = 0\n            result.y = 0\n            \n        }\n        \n        return result\n        \n    }\n    \n    set bounds(rectangle) {\n        \n        const frame = this.frame\n        \n        this.frame = new UIRectangle(frame.topLeft.x, frame.topLeft.y, rectangle.height, rectangle.width)\n        \n    }\n    \n    \n    boundsDidChange() {\n        \n        \n        \n    }\n    \n    \n    setPosition(\n        left: number | string = nil,\n        right: number | string = nil,\n        bottom: number | string = nil,\n        top: number | string = nil,\n        height: number | string = nil,\n        width: number | string = nil\n    ) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"left\", left)\n        this.setStyleProperty(\"right\", right)\n        this.setStyleProperty(\"bottom\", bottom)\n        this.setStyleProperty(\"top\", top)\n        this.setStyleProperty(\"height\", height)\n        this.setStyleProperty(\"width\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"height\", height)\n        this.setStyleProperty(\"width\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMinSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"minHeight\", height)\n        this.setStyleProperty(\"minWidth\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMaxSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"maxHeight\", height)\n        this.setStyleProperty(\"maxWidth\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMargin(margin?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"margin\", margin)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMargins(left?: number | string, right?: number | string, bottom?: number | string, top?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"marginLeft\", left)\n        this.setStyleProperty(\"marginRight\", right)\n        this.setStyleProperty(\"marginBottom\", bottom)\n        this.setStyleProperty(\"marginTop\", top)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setPadding(padding?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"padding\", padding)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setPaddings(left?: number | string, right?: number | string, bottom?: number | string, top?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"paddingLeft\", left)\n        this.setStyleProperty(\"paddingRight\", right)\n        this.setStyleProperty(\"paddingBottom\", bottom)\n        this.setStyleProperty(\"paddingTop\", top)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    \n    \n    \n    \n    setBorder(\n        radius: number | string = nil,\n        width: number | string = 1,\n        color: UIColor = UIColor.blackColor,\n        style: string = \"solid\"\n    ) {\n        \n        this.setStyleProperty(\"borderStyle\", style)\n        \n        this.setStyleProperty(\"borderRadius\", radius)\n        \n        this.setStyleProperty(\"borderColor\", color.stringValue)\n        \n        this.setStyleProperty(\"borderWidth\", width)\n        \n    }\n    \n    \n    \n    \n    \n    setStyleProperty(propertyName: string, value?: number | string) {\n        \n        \n        try {\n            \n            if (IS_NIL(value)) {\n                return\n            }\n            if (IS_DEFINED(value) && (value as Number).isANumber) {\n                value = \"\" + (value as number).integerValue + \"px\"\n            }\n            this.style[propertyName] = value\n            \n        } catch (exception) {\n            \n            console.log(exception)\n            \n        }\n        \n        \n    }\n    \n    \n    \n    get userInteractionEnabled() {\n        \n        const result = (this.style.pointerEvents != \"none\")\n        \n        return result\n        \n    }\n    \n    set userInteractionEnabled(userInteractionEnabled) {\n        \n        if (userInteractionEnabled) {\n            \n            this.style.pointerEvents = \"\"\n            \n        }\n        else {\n            \n            this.style.pointerEvents = \"none\"\n            \n        }\n        \n    }\n    \n    \n    \n    get backgroundColor() {\n        return this._backgroundColor\n    }\n    \n    set backgroundColor(backgroundColor: UIColor) {\n        \n        this._backgroundColor = backgroundColor\n        \n        this.style.backgroundColor = backgroundColor.stringValue\n        \n    }\n    \n    \n    \n    get alpha() {\n        return 1 * (this.style.opacity as any)\n    }\n    \n    set alpha(alpha) {\n        this.style.opacity = \"\" + alpha\n    }\n    \n    \n    \n    \n    \n    static animateViewOrViewsWithDurationDelayAndFunction(\n        viewOrViews: UIView | HTMLElement | UIView[] | HTMLElement[],\n        duration: number,\n        delay: number,\n        timingStyle = \"cubic-bezier(0.25,0.1,0.25,1)\",\n        transformFunction: Function,\n        transitioncompletionFunction: Function\n    ) {\n        \n        \n        function callTransitioncompletionFunction() {\n            \n            (transitioncompletionFunction || nil)();\n            \n            (viewOrViews as UIView[]).forEach(function (view, index, array) {\n                \n                view.animationDidFinish()\n                \n            })\n            \n        }\n        \n        \n        if (IS_FIREFOX) {\n            \n            // Firefox does not fire the transition completion event properly\n            new UIObject().performFunctionWithDelay(delay + duration, callTransitioncompletionFunction)\n            \n            \n            \n        }\n        \n        \n        if (!(viewOrViews instanceof Array)) {\n            viewOrViews = [viewOrViews] as any\n        }\n        \n        const transitionStyles = []\n        const transitionDurations = []\n        const transitionDelays = []\n        const transitionTimings = []\n        \n        for (var i = 0; i < (viewOrViews as any).length; i++) {\n            \n            var view = viewOrViews[i]\n            \n            if (view.viewHTMLElement) {\n                \n                view = view.viewHTMLElement\n                \n            }\n            \n            view.addEventListener(\"transitionend\", transitionDidFinish, true)\n            \n            transitionStyles.push(view.style.transition)\n            transitionDurations.push(view.style.transitionDuration)\n            transitionDelays.push(view.style.transitionDelay)\n            transitionTimings.push(view.style.transitionTimingFunction)\n            \n            view.style.transition = \"all\"\n            view.style.transitionDuration = \"\" + duration + \"s\"\n            view.style.transitionDelay = \"\" + delay + \"s\"\n            view.style.transitionTimingFunction = timingStyle\n            \n        }\n        \n        \n        \n        transformFunction()\n        \n        \n        const transitionObject = {\n            \n            \"finishImmediately\": finishTransitionImmediately,\n            \"didFinish\": transitionDidFinishManually,\n            \"views\": viewOrViews,\n            \"registrationTime\": Date.now()\n            \n        }\n        \n        function finishTransitionImmediately() {\n            for (var i = 0; i < (viewOrViews as any).length; i++) {\n                var view = viewOrViews[i]\n                if (view.viewHTMLElement) {\n                    view = view.viewHTMLElement\n                }\n                view.style.transition = \"all\"\n                view.style.transitionDuration = \"\" + duration + \"s\"\n                view.style.transitionDelay = \"\" + delay + \"s\"\n                view.style.transition = transitionStyles[i]\n                view.style.transitionDuration = transitionDurations[i]\n                view.style.transitionDelay = transitionDelays[i]\n                view.style.transitionTimingFunction = transitionTimings[i]\n            }\n        }\n        \n        function transitionDidFinish(event) {\n            var view = event.srcElement\n            if (!view) {\n                return\n            }\n            if (view.viewHTMLElement) {\n                view = view.viewHTMLElement\n            }\n            view.style.transition = transitionStyles[i]\n            view.style.transitionDuration = transitionDurations[i]\n            view.style.transitionDelay = transitionDelays[i]\n            view.style.transitionTimingFunction = transitionTimings[i]\n            \n            callTransitioncompletionFunction()\n            \n            view.removeEventListener(\"transitionend\", transitionDidFinish, true)\n            \n        }\n        \n        function transitionDidFinishManually() {\n            for (var i = 0; i < (viewOrViews as any).length; i++) {\n                \n                var view = viewOrViews[i]\n                \n                if (view.viewHTMLElement) {\n                    view = view.viewHTMLElement\n                }\n                \n                view.style.transition = transitionStyles[i]\n                view.style.transitionDuration = transitionDurations[i]\n                view.style.transitionDelay = transitionDelays[i]\n                view.style.transitionTimingFunction = transitionTimings[i]\n                \n                view.removeEventListener(\"transitionend\", transitionDidFinish, true)\n                \n            }\n            \n            \n            \n        }\n        \n        return transitionObject\n        \n    }\n    \n    \n    \n    \n    \n    animationDidFinish() {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    static _transformAttribute = ((\"transform\" in document.documentElement.style) ? \"transform\" : undefined) ||\n        ((\"-webkit-transform\" in document.documentElement.style) ? \"-webkit-transform\" : \"undefined\") ||\n        ((\"-moz-transform\" in document.documentElement.style) ? \"-moz-transform\" : \"undefined\") ||\n        ((\"-ms-transform\" in document.documentElement.style) ? \"-ms-transform\" : \"undefined\") ||\n        ((\"-o-transform\" in document.documentElement.style) ? \"-o-transform\" : \"undefined\")\n    \n    static _setAbsoluteSizeAndPosition(element, left, top, width, height, zIndex = 0) {\n        \n        // if (!UIView._transformAttribute) {\n        \n        //     UIView._transformAttribute = (('transform' in document.documentElement.style) ? 'transform' : undefined);\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-webkit-transform' in document.documentElement.style) ? '-webkit-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-moz-transform' in document.documentElement.style) ? '-moz-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-ms-transform' in document.documentElement.style) ? '-ms-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-o-transform' in document.documentElement.style) ? '-o-transform' : 'undefined');\n        \n        // }\n        \n        if (!IS(element) || !element.obeyAutolayout && !element.getAttribute(\"obeyAutolayout\")) {\n            return\n        }\n        \n        if (element.id == \"mainView\") {\n            \n            \n            var asd = 1\n            \n        }\n        \n        if (IS(height)) {\n            height = height.integerValue + \"px\"\n        }\n        \n        if (IS(width)) {\n            width = width.integerValue + \"px\"\n        }\n        \n        var str = element.style.cssText\n        \n        const frameTransform = UIView._transformAttribute + \": translate3d(\" + (1 * left).integerValue + \"px, \" +\n            (1 * top).integerValue + \"px, \" + zIndex.integerValue + \"px)\"\n        \n        if (element.UIView) {\n            str = str + frameTransform + \";\"\n        }\n        else {\n            element.UIView._frameTransform = frameTransform\n        }\n        \n        if (height == nil) {\n            str = str + \" height: unset;\"\n        }\n        else {\n            str = str + \" height:\" + height + \";\"\n        }\n        \n        if (width == nil) {\n            str = str + \" width: unset;\"\n        }\n        else {\n            str = str + \" width:\" + width + \";\"\n        }\n        \n        if (element.id == \"mainView\") {\n            \n            \n            var asd = 1\n            \n        }\n        \n        element.style.cssText = element.style.cssText + str\n        \n    }\n    \n    \n    \n    static performAutoLayout(parentElement, visualFormatArray, constraintsArray) {\n        \n        \n        const view = new AutoLayout.View()\n        \n        if (IS(visualFormatArray) && IS(visualFormatArray.length)) {\n            view.addConstraints(AutoLayout.VisualFormat.parse(visualFormatArray, { extended: true }))\n        }\n        \n        if (IS(constraintsArray) && IS(constraintsArray.length)) {\n            view.addConstraints(constraintsArray)\n        }\n        \n        const elements = {}\n        for (var key in view.subViews) {\n            \n            if (!view.subViews.hasOwnProperty(key)) {\n                continue\n            }\n            \n            var element = nil\n            \n            try {\n                \n                element = parentElement.querySelector(\"#\" + key)\n                \n            } catch (error) {\n                \n                //console.log(\"Error occurred \" + error);\n                \n            }\n            \n            if (element && !element.obeyAutolayout && !element.getAttribute(\"obeyAutolayout\")) {\n            \n            \n            \n            }\n            else if (element) {\n                \n                element.className += element.className ? \" abs\" : \"abs\"\n                elements[key] = element\n                \n            }\n            \n        }\n        \n        var parentUIView = nil\n        \n        if (parentElement.UIView) {\n            \n            parentUIView = parentElement.UIView\n            \n        }\n        \n        const updateLayout = function () {\n            view.setSize(\n                parentElement ? parentElement.clientWidth : window.innerWidth,\n                parentElement ? parentElement.clientHeight : window.innerHeight\n            )\n            for (key in view.subViews) {\n                \n                if (!view.subViews.hasOwnProperty(key)) {\n                    continue\n                }\n                \n                const subView = view.subViews[key]\n                \n                if (elements[key]) {\n                    UIView._setAbsoluteSizeAndPosition(\n                        elements[key],\n                        subView.left,\n                        subView.top,\n                        subView.width,\n                        subView.height\n                    )\n                }\n            }\n            \n            parentUIView.didLayoutSubviews()\n            \n        }\n        \n        updateLayout()\n        return updateLayout\n        \n    }\n    \n    \n    static runFunctionBeforeNextFrame(step: () => void) {\n        \n        if (IS_SAFARI) {\n            \n            // This creates a microtask\n            Promise.resolve().then(step)\n            \n        }\n        else {\n            \n            window.requestAnimationFrame(step)\n            \n        }\n        \n    }\n    \n    \n    static scheduleLayoutViewsIfNeeded() {\n        \n        UIView.runFunctionBeforeNextFrame(UIView.layoutViewsIfNeeded)\n        \n    }\n    \n    \n    static layoutViewsIfNeeded() {\n        for (var i = 0; i < UIView._viewsToLayout.length; i++) {\n            const view = UIView._viewsToLayout[i]\n            view.layoutIfNeeded()\n        }\n        UIView._viewsToLayout = []\n    }\n    \n    \n    setNeedsLayout() {\n        \n        if (this._shouldLayout) {\n            return\n        }\n        \n        this._shouldLayout = YES\n        \n        // Register view for layout before next frame\n        UIView._viewsToLayout.push(this)\n        \n        if (UIView._viewsToLayout.length == 1) {\n            UIView.scheduleLayoutViewsIfNeeded()\n        }\n        \n    }\n    \n    \n    get needsLayout() {\n        \n        return this._shouldLayout\n        \n    }\n    \n    \n    layoutIfNeeded() {\n        \n        if (!this._shouldLayout) {\n            return\n        }\n        \n        this._shouldLayout = NO\n        \n        try {\n            \n            this.layoutSubviews()\n            \n        } catch (exception) {\n            \n            console.log(exception)\n            \n        }\n        \n    }\n    \n    \n    layoutSubviews() {\n    \n        this.willLayoutSubviews()\n        \n        this._shouldLayout = NO\n        \n        // Autolayout\n        if (this.constraints.length) {\n            this._updateLayoutFunction = UIView.performAutoLayout(this.viewHTMLElement, null, this.constraints)\n        }\n        this._updateLayoutFunction()\n    \n        this.viewController.layoutViewSubviews()\n        \n        this.applyClassesAndStyles()\n    \n        for (let i = 0; i < this.subviews.length; i++) {\n        \n            const subview = this.subviews[i]\n            subview.calculateAndSetViewFrame()\n        \n        }\n        \n        this.didLayoutSubviews()\n        \n    }\n    \n    \n    \n    applyClassesAndStyles() {\n        \n        \n        \n        //var classesString = \"\";\n        \n        for (var i = 0; i < this.styleClasses.length; i++) {\n            \n            const styleClass = this.styleClasses[i]\n            \n            if (styleClass) {\n                \n                this.viewHTMLElement.classList.add(styleClass)\n                \n            }\n            \n            \n            \n            //classesString = classesString + \" \" + styleClass;\n    \n        }\n    \n    \n        //this.viewHTMLElement.className = classesString;\n    \n    \n    \n    }\n    \n    willLayoutSubviews() {\n        \n        this.viewController.viewWillLayoutSubviews()\n        \n    }\n    \n    didLayoutSubviews() {\n        \n        this.viewController.viewDidLayoutSubviews()\n        \n    }\n    \n    get constraints() {\n        return this._constraints\n    }\n    \n    set constraints(constraints) {\n        this._constraints = constraints\n    }\n    \n    addConstraint(constraint) {\n        \n        this.constraints.push(constraint)\n        \n    }\n    \n    \n    \n    addConstraintsWithVisualFormat(visualFormatArray) {\n        \n        this.constraints = this.constraints.concat(AutoLayout.VisualFormat.parse(\n            visualFormatArray,\n            { extended: true }\n        ))\n        \n    }\n    \n    static constraintWithView(view, attribute, relation, toView, toAttribute, multiplier, constant, priority) {\n        \n        var UIViewObject = nil\n        var viewID = null\n        if (view) {\n            if (view.isKindOfClass && view.isKindOfClass(UIView)) {\n                UIViewObject = view\n                view = view.viewHTMLElement\n            }\n            viewID = view.id\n        }\n        \n        var toUIViewObject = nil\n        var toViewID = null\n        if (toView) {\n            if (toView.isKindOfClass && view.isKindOfClass(UIView)) {\n                toUIViewObject = toView\n                toView = toView.viewHTMLElement\n            }\n            toViewID = toView.id\n        }\n        \n        const constraint = {\n            \n            view1: viewID,\n            attr1: attribute,\n            relation: relation,\n            view2: toViewID,\n            attr2: toAttribute,\n            multiplier: multiplier,\n            constant: constant,\n            priority: priority\n            \n        }\n        \n        return constraint\n        \n    }\n    \n    static constraintAttribute = {\n        \n        \"left\": AutoLayout.Attribute.LEFT,\n        \"right\": AutoLayout.Attribute.RIGHT,\n        \"bottom\": AutoLayout.Attribute.BOTTOM,\n        \"top\": AutoLayout.Attribute.TOP,\n        \"centerX\": AutoLayout.Attribute.CENTERX,\n        \"centerY\": AutoLayout.Attribute.CENTERY,\n        \"height\": AutoLayout.Attribute.HEIGHT,\n        \"width\": AutoLayout.Attribute.WIDTH,\n        \"zIndex\": AutoLayout.Attribute.ZINDEX,\n        // Not sure what these are for\n        \"constant\": AutoLayout.Attribute.NOTANATTRIBUTE,\n        \"variable\": AutoLayout.Attribute.VARIABLE\n        \n    }\n    \n    static constraintRelation = {\n        \n        \"equal\": AutoLayout.Relation.EQU,\n        \"lessThanOrEqual\": AutoLayout.Relation.LEQ,\n        \"greaterThanOrEqual\": AutoLayout.Relation.GEQ\n        \n    }\n    \n    \n    \n    subviewWithID(viewID) {\n        \n        \n        var resultHTMLElement = nil\n        \n        try {\n            \n            resultHTMLElement = this.viewHTMLElement.querySelector(\"#\" + viewID)\n            \n        } catch (error) {\n        \n        }\n        \n        if (resultHTMLElement && resultHTMLElement.UIView) {\n            return resultHTMLElement.UIView\n        }\n        return nil\n    }\n    \n    \n    \n    rectangleContainingSubviews() {\n        \n        const center = this.bounds.center\n        \n        var result = new UIRectangle(center.x, center.y, 0, 0)\n        \n        for (var i = 0; i < this.subviews.length; i++) {\n            \n            const subview = this.subviews[i]\n            \n            var frame = subview.frame\n            \n            const rectangleContainingSubviews = subview.rectangleContainingSubviews()\n            \n            frame = frame.concatenateWithRectangle(rectangleContainingSubviews)\n            \n            result = result.concatenateWithRectangle(frame)\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    hasSubview(view: UIView) {\n        \n        // This is for performance reasons\n        if (!IS(view)) {\n            return NO\n        }\n        \n        for (var i = 0; i < this.subviews.length; i++) {\n            const subview = this.subviews[i]\n            if (subview == view) {\n                return YES\n            }\n        }\n        return NO\n    }\n    \n    get viewBelowThisView() {\n        const result: UIView = (this.viewHTMLElement.previousElementSibling as any || {}).UIView\n        return result\n    }\n    \n    get viewAboveThisView() {\n        const result: UIView = (this.viewHTMLElement.nextElementSibling as any || {}).UIView\n        return result\n    }\n    \n    addSubview(view: UIView, aboveView?: UIView) {\n        \n        if (!this.hasSubview(view) && IS(view)) {\n    \n            view.willMoveToSuperview(this)\n    \n            if (IS(aboveView)) {\n                this.viewHTMLElement.insertBefore(view.viewHTMLElement, aboveView.viewHTMLElement.nextSibling)\n                this.subviews.insertElementAtIndex(this.subviews.indexOf(aboveView), view)\n            }\n            else {\n                this.viewHTMLElement.appendChild(view.viewHTMLElement)\n                this.subviews.push(view)\n            }\n    \n            view.core = this.core\n            view.didMoveToSuperview(this)\n    \n            if (this.superview && this.isMemberOfViewTree) {\n        \n                view.broadcastEventInSubtree({\n            \n                    name: UIView.broadcastEventName.AddedToViewTree,\n                    parameters: nil\n            \n                })\n                \n            }\n            \n            this.setNeedsLayout()\n            \n        }\n        \n    }\n    \n    addSubviews(views: UIView[]) {\n        views.forEach(function (this: UIView, view: UIView, index, array) {\n            this.addSubview(view)\n        }, this)\n    }\n    \n    \n    moveToBottomOfSuperview() {\n        \n        if (IS(this.superview)) {\n            \n            const bottomView = this.superview.subviews.firstElement\n            \n            if (bottomView == this) {\n                \n                return\n                \n            }\n            \n            this.superview.subviews.removeElement(this)\n            \n            this.superview.subviews.insertElementAtIndex(0, this)\n            \n            this.superview.viewHTMLElement.insertBefore(this.viewHTMLElement, bottomView.viewHTMLElement)\n            \n            \n        }\n        \n        \n        \n    }\n    \n    moveToTopOfSuperview() {\n        \n        if (IS(this.superview)) {\n            \n            const topView = this.superview.subviews.lastElement\n            \n            if (topView == this) {\n                \n                return\n                \n            }\n            \n            this.superview.subviews.removeElement(this)\n            \n            this.superview.subviews.push(this)\n            \n            this.superview.viewHTMLElement.appendChild(this.viewHTMLElement)\n            \n            \n        }\n        \n        \n        \n    }\n    \n    \n    removeFromSuperview() {\n        if (IS(this.superview)) {\n            \n            this.forEachViewInSubtree(function (view) {\n                \n                view.blur()\n                \n            })\n            \n            const index = this.superview.subviews.indexOf(this)\n            if (index > -1) {\n                this.superview.subviews.splice(index, 1)\n                this.superview.viewHTMLElement.removeChild(this.viewHTMLElement)\n                this.superview = nil\n                \n                this.broadcastEventInSubtree({\n                    \n                    name: UIView.broadcastEventName.RemovedFromViewTree,\n                    parameters: nil\n                    \n                })\n                \n            }\n        }\n    }\n    \n    \n    willAppear() {\n        \n        \n        \n    }\n    \n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        this._setInnerHTMLFromKeyIfPossible()\n        \n        this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n        \n    }\n    \n    didMoveToSuperview(superview: UIView) {\n        \n        this.superview = superview\n        \n    }\n    \n    wasAddedToViewTree() {\n        \n    }\n    \n    wasRemovedFromViewTree() {\n        \n    }\n    \n    get isMemberOfViewTree() {\n        var element = this.viewHTMLElement\n        for (var i = 0; element; i = i) {\n            if (element.parentElement && element.parentElement == document.body) {\n                return YES\n            }\n            element = element.parentElement\n        }\n        return NO\n    }\n    \n    \n    get allSuperviews() {\n        const result = []\n        var view: UIView = this\n        for (var i = 0; IS(view); i = i) {\n            result.push(view)\n            view = view.superview\n        }\n        return result\n    }\n    \n    \n    setNeedsLayoutOnAllSuperviews() {\n        \n        this.allSuperviews.reverse().forEach(function (view: UIView, index, array) {\n            \n            view.setNeedsLayout()\n            \n        })\n        \n    }\n    \n    \n    setNeedsLayoutUpToRootView() {\n        \n        this.setNeedsLayoutOnAllSuperviews()\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    focus() {\n        \n        this.viewHTMLElement.focus()\n        \n    }\n    \n    \n    blur() {\n        \n        this.viewHTMLElement.blur()\n        \n    }\n    \n    \n    \n    \n    \n    _loadUIEvents() {\n        \n        //this.viewHTMLElement = nil;\n        \n        \n        const isTouchEventClassDefined: boolean = NO || (window as any).TouchEvent\n        \n        const pauseEvent = (event: Event, forced = NO) => {\n            \n            if (this.pausesPointerEvents || forced) {\n                \n                if (event.stopPropagation) {\n                    event.stopPropagation()\n                }\n                if (event.preventDefault) {\n                    event.preventDefault()\n                }\n                event.cancelBubble = true\n                event.returnValue = false\n                return false\n                \n            }\n            \n            if (event.stopPropagation && this.stopsPointerEventPropagation) {\n                event.stopPropagation()\n            }\n            \n        }\n        \n        const onMouseDown = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                ((this.ignoresMouse || (IS(this._touchEventTime) && (Date.now() - this._touchEventTime) > 500)) &&\n                    event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerDown, event)\n            \n            this._isPointerInside = YES\n            this._isPointerValid = YES\n            this._initialPointerPosition = new UIPoint(event.clientX, event.clientY)\n            if (isTouchEventClassDefined && event instanceof TouchEvent) {\n                \n                this._touchEventTime = Date.now()\n                \n                this._initialPointerPosition = new UIPoint(event.touches[0].clientX, event.touches[0].clientY)\n                \n                if (event.touches.length > 1) {\n                    \n                    onTouchCancel(event)\n                    \n                    return\n                    \n                }\n                \n                \n            }\n            else {\n                \n                this._touchEventTime = nil\n                \n                pauseEvent(event)\n                \n            }\n            \n            \n            this._hasPointerDragged = NO\n            \n        }\n        \n        const onTouchStart = onMouseDown as any\n        \n        const onmouseup = (event) => {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (this._isPointerInside) {\n                \n                onPointerUpInside(event)\n                \n                if (!this._hasPointerDragged) {\n                    \n                    this.sendControlEventForKey(UIView.controlEvent.PointerTap, event)\n                    \n                }\n                \n                \n            }\n            \n            // This has to be sent after the more specific event so that UIButton can ignore it when not highlighted\n            this.sendControlEventForKey(UIView.controlEvent.PointerUp, event)\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchEnd = onmouseup\n        \n        // function onMouseEnter(event) {\n        \n        //     this.sendControlEventForKey(UIView.controlEvent.PointerEnter, event);\n        \n        //     this._isPointerInside = YES;\n        \n        //     pauseEvent(event);\n        \n        // }\n        \n        const onmouseout = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerLeave, event)\n            \n            this._isPointerInside = NO\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchLeave = onmouseout\n        \n        var onTouchCancel = function (event) {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this._isPointerValid = NO\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerCancel, event)\n            \n        }.bind(this)\n        \n        const onmouseover = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerHover, event)\n            \n            this._isPointerInside = YES\n            \n            this._isPointerValid = YES\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onMouseMove = (event) => {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (IS_NOT(this._initialPointerPosition)) {\n                \n                this._initialPointerPosition = new UIPoint(event.clientX, event.clientY)\n                \n            }\n            \n            if (new UIPoint(event.clientX, event.clientY).to(this._initialPointerPosition).length >\n                this._pointerDragThreshold) {\n                \n                this._hasPointerDragged = YES\n                \n            }\n            \n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerMove, event)\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchMove = function (event: TouchEvent) {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (event.touches.length > 1) {\n                \n                onTouchZoom(event)\n                \n                return\n                \n            }\n            \n            const touch = event.touches[0]\n            \n            if (new UIPoint(touch.clientX, touch.clientY).to(this._initialPointerPosition).length >\n                this._pointerDragThreshold) {\n                \n                this._hasPointerDragged = YES\n                \n            }\n            \n            \n            if (this._isPointerInside && this.viewHTMLElement !=\n                document.elementFromPoint(touch.clientX, touch.clientY)) {\n                \n                this._isPointerInside = NO\n                \n                this.sendControlEventForKey(UIView.controlEvent.PointerLeave, event)\n                \n            }\n            \n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerMove, event)\n            \n            //pauseEvent(event);\n            \n            \n        }\n        \n        var onTouchZoom = function onTouchZoom(event: TouchEvent) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.MultipleTouches, event)\n            \n        }.bind(this)\n        \n        \n        var onPointerUpInside = (event) => {\n            pauseEvent(event)\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerUpInside, event)\n        }\n        \n        function eventKeyIsEnter(event) {\n            if (event.keyCode !== 13) {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsTab(event) {\n            if (event.keyCode !== 9) {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsEsc(event) {\n            var result = false\n            if (\"key\" in event) {\n                result = (event.key == \"Escape\" || event.key == \"Esc\")\n            }\n            else {\n                result = (event.keyCode == 27)\n            }\n            return result\n        }\n        \n        function eventKeyIsLeft(event) {\n            if (event.keyCode != \"37\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsRight(event) {\n            if (event.keyCode != \"39\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsDown(event) {\n            if (event.keyCode != \"40\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsUp(event) {\n            if (event.keyCode != \"38\") {\n                return NO\n            }\n            return YES\n        }\n        \n        const onKeyDown = function (event) {\n            \n            if (eventKeyIsEnter(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EnterDown, event)\n                \n            }\n            \n            if (eventKeyIsEsc(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EscDown, event)\n                \n            }\n            \n            if (eventKeyIsTab(event) && this._controlEventTargets.TabDown && this._controlEventTargets.TabDown.length) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.TabDown, event)\n                \n                pauseEvent(event, YES)\n                \n            }\n            \n            if (eventKeyIsLeft(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.LeftArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsRight(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.RightArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsDown(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.DownArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsUp(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.UpArrowDown, event)\n                \n            }\n            \n        }.bind(this)\n        \n        const onKeyUp = function (event) {\n            \n            if (eventKeyIsEnter(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EnterUp, event)\n                \n            }\n            \n        }.bind(this)\n        \n        \n        const onfocus = function (event: Event) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.Focus, event)\n            \n        }.bind(this)\n        \n        const onblur = function (event: Event) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.Blur, event)\n            \n        }.bind(this)\n        \n        \n        // Mouse and touch start events\n        this._viewHTMLElement.onmousedown = onMouseDown.bind(this)\n        this._viewHTMLElement.ontouchstart = onTouchStart.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mousedown\", onMouseDown.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchstart', onTouchStart.bind(this), false)\n        // //this.viewHTMLElement.addEventListener(\"mouseenter\", onMouseEnter.bind(this), false);\n        \n        // Mouse and touch move events\n        this._viewHTMLElement.onmousemove = onMouseMove.bind(this)\n        this._viewHTMLElement.ontouchmove = onTouchMove.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mousemove\", onMouseMove.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchmove', onTouchMove.bind(this), false)\n        \n        //this.viewHTMLElement.addEventListener(\"mousewheel\", onmousewheel.bind(this), false)\n        \n        this._viewHTMLElement.onmouseover = onmouseover.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseover\", onmouseover.bind(this), false)\n        \n        // Mouse and touch end events\n        this._viewHTMLElement.onmouseup = onmouseup.bind(this)\n        this._viewHTMLElement.ontouchend = onTouchEnd.bind(this)\n        this._viewHTMLElement.ontouchcancel = onTouchCancel.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseup\", onmouseup.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchend', onTouchEnd.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchcancel', onTouchCancel.bind(this), false)\n        \n        this._viewHTMLElement.onmouseout = onmouseout.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseout\", onmouseout.bind(this), false)\n        this._viewHTMLElement.addEventListener(\"touchleave\", onTouchLeave.bind(this), false)\n        \n        // this.viewHTMLElement.onkeydown = onkeydown\n        // this.viewHTMLElement.onkeyup = onkeyup\n        this._viewHTMLElement.addEventListener(\"keydown\", onKeyDown, false)\n        this._viewHTMLElement.addEventListener(\"keyup\", onKeyUp, false)\n        \n        // Focus events\n        this._viewHTMLElement.onfocus = onfocus\n        this._viewHTMLElement.onblur = onblur\n        // this.viewHTMLElement.addEventListener(\"focus\", onfocus, true)\n        // this.viewHTMLElement.addEventListener(\"blur\", onblur, true)\n        \n        \n    }\n    \n    \n    \n    \n    \n    public static controlEvent = {\n        \n        \"PointerDown\": \"PointerDown\",\n        \"PointerMove\": \"PointerMove\",\n        \"PointerLeave\": \"PointerLeave\",\n        \"PointerEnter\": \"PointerEnter\",\n        \"PointerUpInside\": \"PointerUpInside\",\n        \"PointerTap\": \"PointerTap\",\n        \"PointerUp\": \"PointerUp\",\n        \"MultipleTouches\": \"PointerZoom\",\n        \"PointerCancel\": \"PointerCancel\",\n        \"PointerHover\": \"PointerHover\",\n        \"EnterDown\": \"EnterDown\",\n        \"EnterUp\": \"EnterUp\",\n        \"EscDown\": \"EscDown\",\n        \"TabDown\": \"TabDown\",\n        \"LeftArrowDown\": \"LeftArrowDown\",\n        \"RightArrowDown\": \"RightArrowDown\",\n        \"DownArrowDown\": \"DownArrowDown\",\n        \"UpArrowDown\": \"UpArrowDown\",\n        \"Focus\": \"Focus\",\n        \"Blur\": \"Blur\"\n        \n    }\n    \n    controlEvent = UIView.controlEvent\n    \n    \n    \n    public get addControlEventTarget() {\n        \n        const eventKeys = []\n        \n        \n        const result: UIViewAddControlEventTargetObject<typeof UIView.controlEvent> = new Proxy(\n            (this.constructor as any).controlEvent,\n            {\n                \n                get: (target, key, receiver) => {\n                    \n                    eventKeys.push(key)\n                    \n                    return result\n                    \n                },\n                set: (target, key, value, receiver) => {\n                    \n                    eventKeys.push(key)\n                    \n                    this.addTargetForControlEvents(eventKeys, value)\n                    \n                    return true\n                    \n                }\n                \n            }\n        )\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    addTargetForControlEvents(eventKeys: string[], targetFunction: (sender: UIView, event: Event) => void) {\n        \n        eventKeys.forEach(function (this: UIView, key: string, index: number, array: string[]) {\n            \n            this.addTargetForControlEvent(key, targetFunction)\n            \n        }, this)\n        \n    }\n    \n    \n    \n    addTargetForControlEvent(eventKey: string, targetFunction: (sender: UIView, event: Event) => void) {\n        \n        var targets = this._controlEventTargets[eventKey]\n        \n        if (!targets) {\n            // @ts-ignore\n            targets = []\n            this._controlEventTargets[eventKey] = targets\n        }\n        \n        if (targets.indexOf(targetFunction) == -1) {\n            targets.push(targetFunction)\n        }\n        \n    }\n    \n    removeTargetForControlEvent(eventKey: string, targetFunction: (sender: UIView, event: Event) => void) {\n        const targets = this._controlEventTargets[eventKey]\n        if (!targets) {\n            return\n        }\n        const index = targets.indexOf(targetFunction)\n        if (index != -1) {\n            targets.splice(index, 1)\n        }\n    }\n    \n    removeTargetForControlEvents(eventKeys: string[], targetFunction: (sender: UIView, event: Event) => void) {\n        \n        eventKeys.forEach(function (key, index, array) {\n            \n            this.removeTargetForControlEvent(key, targetFunction)\n            \n        }, this)\n        \n    }\n    \n    sendControlEventForKey(eventKey: string, nativeEvent: Event) {\n        var targets = this._controlEventTargets[eventKey]\n        if (!targets) {\n            return\n        }\n        targets = targets.copy()\n        for (var i = 0; i < targets.length; i++) {\n            const target = targets[i]\n            target(this, nativeEvent)\n        }\n    }\n    \n    \n    \n    \n    \n    static broadcastEventName = {\n        \n        \"LanguageChanged\": \"LanguageChanged\",\n        \"RemovedFromViewTree\": \"RemovedFromViewTree\",\n        \"AddedToViewTree\": \"AddedToViewTree\",\n        \"PageDidScroll\": \"PageDidScroll\"\n        \n    }\n    \n    \n    broadcastEventInSubtree(event: UIViewBroadcastEvent) {\n        \n        this.forEachViewInSubtree(function (view) {\n            \n            view.didReceiveBroadcastEvent(event)\n    \n            if (IS(view.viewController)) {\n        \n                view.viewController.viewDidReceiveBroadcastEvent(event)\n        \n            }\n            \n        })\n        \n        \n    }\n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        if (event.name == UIView.broadcastEventName.PageDidScroll) {\n            \n            this._isPointerValid = NO\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.AddedToViewTree) {\n            \n            this.wasAddedToViewTree()\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.RemovedFromViewTree) {\n            \n            this.wasRemovedFromViewTree()\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setInnerHTMLFromKeyIfPossible()\n            \n            this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    forEachViewInSubtree(functionToCall: (view: UIView) => void) {\n        \n        functionToCall(this)\n        \n        this.subviews.forEach(function (subview, index, array) {\n            \n            subview.forEachViewInSubtree(functionToCall)\n            \n        })\n        \n    }\n    \n    \n    \n    \n    \n    rectangleInView(rectangle: UIRectangle, view: UIView) {\n        if (!view.isMemberOfViewTree || !this.isMemberOfViewTree) {\n            return nil\n        }\n        \n        const viewClientRectangle = view.viewHTMLElement.getBoundingClientRect()\n        const viewLocation = new UIPoint(viewClientRectangle.left, viewClientRectangle.top)\n        \n        const selfClientRectangle = this.viewHTMLElement.getBoundingClientRect()\n        const selfLocation = new UIPoint(selfClientRectangle.left, selfClientRectangle.top)\n        \n        const offsetPoint = selfLocation.subtract(viewLocation)\n        \n        return rectangle.copy().offsetByPoint(offsetPoint)\n    }\n    \n    rectangleFromView(rectangle: UIRectangle, view: UIView) {\n        return view.rectangleInView(rectangle, this)\n    }\n    \n    \n    \n    \n    \n    intrinsicContentSizeWithConstraints(constrainingHeight: number = 0, constrainingWidth: number = 0) {\n        \n        // This works but is slow\n        \n        const result = new UIRectangle(0, 0, 0, 0)\n        if (this.rootView.forceIntrinsicSizeZero) {\n            return result\n        }\n        \n        var temporarilyInViewTree = NO\n        var nodeAboveThisView: Node\n        if (!this.isMemberOfViewTree) {\n            document.body.appendChild(this.viewHTMLElement)\n            temporarilyInViewTree = YES\n            nodeAboveThisView = this.viewHTMLElement.nextSibling\n        }\n        \n        const height = this.style.height\n        const width = this.style.width\n        \n        this.style.height = \"\" + constrainingHeight\n        this.style.width = \"\" + constrainingWidth\n        \n        \n        const left = this.style.left\n        const right = this.style.right\n        const bottom = this.style.bottom\n        const top = this.style.top\n        \n        this.style.left = \"\"\n        this.style.right = \"\"\n        this.style.bottom = \"\"\n        this.style.top = \"\"\n        \n        \n        const resultHeight = this.viewHTMLElement.scrollHeight\n        \n        \n        const whiteSpace = this.style.whiteSpace\n        this.style.whiteSpace = \"nowrap\"\n        \n        const resultWidth = this.viewHTMLElement.scrollWidth\n        \n        this.style.whiteSpace = whiteSpace\n        \n        \n        \n        this.style.height = height\n        this.style.width = width\n        \n        this.style.left = left\n        this.style.right = right\n        this.style.bottom = bottom\n        this.style.top = top\n        \n        if (temporarilyInViewTree) {\n            document.body.removeChild(this.viewHTMLElement)\n            if (this.superview) {\n                if (nodeAboveThisView) {\n                    this.superview.viewHTMLElement.insertBefore(this.viewHTMLElement, nodeAboveThisView)\n                }\n                else {\n                    this.superview.viewHTMLElement.appendChild(this.viewHTMLElement)\n                }\n            }\n        }\n        \n        result.height = resultHeight\n        result.width = resultWidth\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    intrinsicContentWidth(constrainingHeight: number = 0): number {\n        \n        const result = this.intrinsicContentSizeWithConstraints(constrainingHeight).width\n        \n        return result\n        \n    }\n    \n    intrinsicContentHeight(constrainingWidth: number = 0): number {\n        \n        const result = this.intrinsicContentSizeWithConstraints(undefined, constrainingWidth).height\n        \n        return result\n        \n        \n    }\n    \n    intrinsicContentSize(): UIRectangle {\n        \n        return nil\n    \n    }\n    \n    \n    \n    \n    \n}\n\n\n// This is here because modules fail with circular imports but they are needed here\ndeclare class UIDialogView<ViewType extends UIView = UIView> extends UIView {\n    _view: ViewType\n    _appearedAnimated: boolean\n    animationDuration: number\n    _zIndex: number\n    isVisible: boolean\n    dismissesOnTapOutside: boolean\n    \n    constructor(elementID?: string, viewHTMLElement?: HTMLElement);\n    \n    didDetectTapOutside(sender: UIView, event: Event): void;\n    \n    set zIndex(zIndex: number);\n    get zIndex(): number;\n    \n    set view(view: ViewType);\n    get view(): ViewType;\n    \n    willAppear(animated?: boolean): void;\n    \n    animateAppearing(): void;\n    \n    animateDisappearing(): void;\n    \n    showInView(containerView: UIView, animated: boolean): void;\n    \n    showInRootView(animated: boolean): void;\n    \n    dismiss(animated?: boolean): void;\n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent): void;\n    \n    layoutSubviews(): void;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"./UIColor\"\nimport { UILocalizedTextObject } from \"./UIInterfaces\"\nimport { FIRST, IS_LIKE_NULL, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UITextView extends UIView {\n    \n    \n    _textColor: UIColor = UITextView.defaultTextColor\n    _textAlignment: string\n    \n    _isSingleLine = YES\n    \n    textPrefix = \"\"\n    textSuffix = \"\"\n    \n    _notificationAmount = 0\n    \n    _minFontSize: number = nil\n    _maxFontSize: number = nil\n    \n    _automaticFontSizeSelection = NO\n    \n    changesOften = NO\n    \n    static defaultTextColor = UIColor.blackColor\n    static notificationTextColor = UIColor.redColor\n    \n    static _intrinsicHeightCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    static _intrinsicWidthCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    \n    _intrinsicHeightCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    _intrinsicWidthCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    \n    \n    static _ptToPx: number\n    static _pxToPt: number\n    _text: string\n    \n    \n    constructor(elementID?: string, textViewType = UITextView.type.paragraph, viewHTMLElement = null) {\n        \n        super(elementID, viewHTMLElement, textViewType)\n        \n        this.text = \"\"\n        \n        this.style.overflow = \"hidden\"\n        this.style.textOverflow = \"ellipsis\"\n        this.isSingleLine = YES\n        \n        this.textColor = this.textColor\n        \n        this.userInteractionEnabled = YES\n        \n        \n        if (textViewType == UITextView.type.textArea) {\n    \n            this.pausesPointerEvents = YES\n    \n            this.addTargetForControlEvent(\n                UIView.controlEvent.PointerUpInside,\n                (sender, event) => sender.focus()\n            )\n    \n    \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    static _determinePXAndPTRatios() {\n        \n        const o = document.createElement(\"div\")\n        o.style.width = \"1000pt\"\n        document.body.appendChild(o)\n        UITextView._ptToPx = o.clientWidth / 1000\n        document.body.removeChild(o)\n        UITextView._pxToPt = 1 / UITextView._ptToPx\n        \n    }\n    \n    \n    \n    \n    \n    static type = {\n        \n        \"paragraph\": \"p\",\n        \"header1\": \"h1\",\n        \"header2\": \"h2\",\n        \"header3\": \"h3\",\n        \"header4\": \"h4\",\n        \"header5\": \"h5\",\n        \"header6\": \"h6\",\n        \"textArea\": \"textarea\",\n        \"textField\": \"input\",\n        \"span\": \"span\",\n        \"label\": \"label\"\n        \n    }\n    \n    \n    \n    static textAlignment = {\n        \n        \"left\": \"left\",\n        \"center\": \"center\",\n        \"right\": \"right\",\n        \"justify\": \"justify\"\n        \n    }\n    \n    get textAlignment() {\n        const result = this.style.textAlign\n        return result\n    }\n    \n    set textAlignment(textAlignment: string) {\n        this._textAlignment = textAlignment\n        this.style.textAlign = textAlignment\n    }\n    \n    \n    \n    get textColor() {\n        const result = this._textColor\n        return result\n    }\n    \n    set textColor(color: UIColor) {\n        \n        this._textColor = color || UITextView.defaultTextColor\n        this.style.color = this._textColor.stringValue\n        \n    }\n    \n    \n    get isSingleLine() {\n        \n        return this._isSingleLine\n        \n    }\n    \n    set isSingleLine(isSingleLine: boolean) {\n        \n        this._isSingleLine = isSingleLine\n        \n        this._intrinsicHeightCache = new UIObject() as any\n        this._intrinsicWidthCache = new UIObject() as any\n        \n        if (isSingleLine) {\n            \n            this.style.whiteSpace = \"pre\"\n            \n            return\n            \n        }\n        \n        this.style.whiteSpace = \"pre-wrap\"\n        \n    }\n    \n    \n    get notificationAmount() {\n        \n        return this._notificationAmount\n        \n    }\n    \n    set notificationAmount(notificationAmount: number) {\n        \n        if (this._notificationAmount == notificationAmount) {\n            \n            return\n            \n        }\n        \n        this._notificationAmount = notificationAmount\n        \n        this.text = this.text\n        \n        this.setNeedsLayoutUpToRootView()\n        \n        this.notificationAmountDidChange(notificationAmount)\n        \n    }\n    \n    notificationAmountDidChange(notificationAmount: number) {\n    \n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    get text() {\n        \n        return (this._text || this.viewHTMLElement.innerHTML)\n        \n    }\n    \n    set text(text) {\n        \n        this._text = text\n        \n        var notificationText = \"\"\n        \n        if (this.notificationAmount) {\n            \n            notificationText = \"<span style=\\\"color: \" + UITextView.notificationTextColor.stringValue + \";\\\">\" +\n                (\" (\" + this.notificationAmount + \")\").bold() + \"</span>\"\n            \n        }\n        \n        if (this.viewHTMLElement.innerHTML != this.textPrefix + text + this.textSuffix + notificationText) {\n            \n            this.viewHTMLElement.innerHTML = this.textPrefix + FIRST(text, \"\") + this.textSuffix + notificationText\n            \n        }\n        \n        this._intrinsicHeightCache = new UIObject() as any\n        this._intrinsicWidthCache = new UIObject() as any\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    set innerHTML(innerHTML: string) {\n        \n        this.text = innerHTML\n        \n    }\n    \n    get innerHTML() {\n        \n        return this.viewHTMLElement.innerHTML\n        \n    }\n    \n    \n    \n    setText(key: string, defaultString: string, parameters?: { [x: string]: string | UILocalizedTextObject }) {\n        \n        this.setInnerHTML(key, defaultString, parameters)\n        \n    }\n    \n    \n    get fontSize() {\n        \n        const style = window.getComputedStyle(this.viewHTMLElement, null).fontSize\n        \n        const result = (parseFloat(style) * UITextView._pxToPt)\n        \n        return result\n        \n    }\n    \n    set fontSize(fontSize: number) {\n        \n        \n        this.style.fontSize = \"\" + fontSize + \"pt\"\n        \n        this._intrinsicHeightCache = new UIObject() as any\n        this._intrinsicWidthCache = new UIObject() as any // MEETOD LUUA!!!!\n        \n        \n    }\n    \n    \n    \n    \n    \n    useAutomaticFontSize(minFontSize: number = nil, maxFontSize: number = nil) {\n        \n        \n        this._automaticFontSizeSelection = YES\n        \n        \n        this._minFontSize = minFontSize\n        \n        this._maxFontSize = maxFontSize\n        \n        this.setNeedsLayout()\n        \n        \n    }\n    \n    \n    \n    \n    \n    static automaticallyCalculatedFontSize(\n        bounds: UIRectangle,\n        currentSize: UIRectangle,\n        currentFontSize: number,\n        minFontSize?: number,\n        maxFontSize?: number\n    ) {\n        \n        minFontSize = FIRST(minFontSize, 1)\n        \n        maxFontSize = FIRST(maxFontSize, 100000000000)\n        \n        \n        const heightMultiplier = bounds.height / (currentSize.height + 1)\n        \n        const widthMultiplier = bounds.width / (currentSize.width + 1)\n        \n        \n        \n        \n        var multiplier = heightMultiplier\n        \n        if (heightMultiplier > widthMultiplier) {\n            \n            multiplier = widthMultiplier\n            \n            \n            \n        }\n        \n        \n        \n        \n        const maxFittingFontSize = currentFontSize * multiplier\n        \n        \n        if (maxFittingFontSize > maxFontSize) {\n            \n            return maxFontSize\n            \n        }\n        \n        if (minFontSize > maxFittingFontSize) {\n            \n            return minFontSize\n            \n        }\n        \n        \n        return maxFittingFontSize\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n    }\n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        super.willMoveToSuperview(superview)\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        \n        if (this._automaticFontSizeSelection) {\n            \n            this.fontSize = UITextView.automaticallyCalculatedFontSize(\n                new UIRectangle(0, 0, 1 *\n                    this.viewHTMLElement.offsetHeight, 1 *\n                    this.viewHTMLElement.offsetWidth),\n                this.intrinsicContentSize(),\n                this.fontSize,\n                this._minFontSize,\n                this._maxFontSize\n            )\n            \n            \n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    intrinsicContentHeight(constrainingWidth = 0) {\n        \n        const keyPath = (this.viewHTMLElement.innerHTML + \"_csf_\" + this.computedStyle.font).replace(new RegExp(\n                \"\\\\.\",\n                \"g\"\n            ), \"_\") + \".\" +\n            (\"\" + constrainingWidth).replace(new RegExp(\"\\\\.\", \"g\"), \"_\")\n        \n        let cacheObject = UITextView._intrinsicHeightCache\n        \n        if (this.changesOften) {\n            \n            cacheObject = this._intrinsicHeightCache\n            \n            \n        }\n        \n        \n        var result = cacheObject.valueForKeyPath(keyPath)\n        \n        \n        if (IS_LIKE_NULL(result)) {\n            \n            result = super.intrinsicContentHeight(constrainingWidth)\n            \n            cacheObject.setValueForKeyPath(keyPath, result)\n            \n            \n        }\n        \n        \n        return result\n        \n    }\n    \n    intrinsicContentWidth(constrainingHeight = 0) {\n        \n        const keyPath = (this.viewHTMLElement.innerHTML + \"_csf_\" + this.computedStyle.font).replace(new RegExp(\n                \"\\\\.\",\n                \"g\"\n            ), \"_\") + \".\" +\n            (\"\" + constrainingHeight).replace(new RegExp(\"\\\\.\", \"g\"), \"_\")\n        \n        let cacheObject = UITextView._intrinsicWidthCache\n        \n        if (this.changesOften) {\n            \n            cacheObject = this._intrinsicWidthCache\n            \n            \n        }\n        \n        \n        var result = cacheObject.valueForKeyPath(keyPath)\n        \n        \n        if (IS_LIKE_NULL(result)) {\n            \n            result = super.intrinsicContentWidth(constrainingHeight)\n            \n            cacheObject.setValueForKeyPath(keyPath, result)\n            \n            \n        }\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    \n    intrinsicContentSize() {\n        \n        // This works but is slow\n        const result = this.intrinsicContentSizeWithConstraints(nil, nil)\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\nUITextView._determinePXAndPTRatios()\n\n\n\n\n\n// /**\n//  * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n//  * \n//  * @param {String} text The text to be rendered.\n//  * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n//  * \n//  * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n//  */\n// function getTextMetrics(text, font) {\n//     // re-use canvas object for better performance\n//     var canvas = getTextMetrics.canvas || (getTextMetrics.canvas = document.createElement(\"canvas\"));\n//     var context = canvas.getContext(\"2d\");\n//     context.font = font;\n//     var metrics = context.measureText(text);\n//     return metrics;\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { nil, NO, YES } from \"./UIObject\"\nimport { UITextView } from \"./UITextView\"\nimport { UIView, UIViewAddControlEventTargetObject, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UITextField extends UITextView {\n    \n    \n    _placeholderTextKey: string\n    _defaultPlaceholderText: string\n    \n    _viewHTMLElement: HTMLInputElement\n    \n    constructor(elementID?: string, viewHTMLElement = null, type = UITextView.type.textField) {\n    \n        super(elementID, type, viewHTMLElement)\n    \n        this.viewHTMLElement.setAttribute(\"type\", \"text\")\n    \n        this.backgroundColor = UIColor.whiteColor\n    \n        this.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            (sender, event) => sender.focus()\n        )\n    \n        this.viewHTMLElement.oninput = (event) => {\n            this.sendControlEventForKey(UITextField.controlEvent.TextChange, event)\n        }\n    \n    \n        this.style.webkitUserSelect = \"text\"\n    \n        this.nativeSelectionEnabled = YES\n        \n        this.pausesPointerEvents = NO\n        \n        \n    }\n    \n    \n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \n        \"TextChange\": \"TextChange\"\n        \n        \n    })\n    \n    \n    \n    \n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UITextField.controlEvent> {\n        \n        // @ts-ignore\n        return super.addControlEventTarget as any;\n        \n    }\n    \n    public get viewHTMLElement() {\n        return this._viewHTMLElement\n    }\n    \n    \n    \n    public set text(text: string) {\n        \n        this.viewHTMLElement.value = text\n        \n    }\n    \n    \n    public get text(): string {\n        \n        return this.viewHTMLElement.value\n        \n    }\n    \n    \n    public set placeholderText(text: string) {\n        \n        this.viewHTMLElement.placeholder = text\n        \n    }\n    \n    \n    public get placeholderText(): string {\n        \n        return this.viewHTMLElement.placeholder\n        \n    }\n    \n    \n    setPlaceholderText(key: string, defaultString: string) {\n        \n        this._placeholderTextKey = key\n        this._defaultPlaceholderText = defaultString\n        \n        const languageName = UICore.languageService.currentLanguageKey\n        this.placeholderText = UICore.languageService.stringForKey(key, languageName, defaultString, nil)\n        \n    }\n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setPlaceholderFromKeyIfPossible()\n            \n        }\n        \n    }\n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        super.willMoveToSuperview(superview)\n        \n        this._setPlaceholderFromKeyIfPossible()\n        \n    }\n    \n    _setPlaceholderFromKeyIfPossible() {\n        \n        if (this._placeholderTextKey && this._defaultPlaceholderText) {\n            \n            this.setPlaceholderText(this._placeholderTextKey, this._defaultPlaceholderText)\n            \n        }\n        \n    }\n    \n    \n    public get isSecure(): boolean {\n        \n        const result = (this.viewHTMLElement.type == \"password\")\n        \n        return result\n        \n    }\n    \n    \n    \n    public set isSecure(secure: boolean) {\n        \n        var type = \"text\"\n        \n        if (secure) {\n            \n            type = \"password\"\n            \n        }\n        \n        this.viewHTMLElement.type = type\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { NO } from \"./UIObject\"\nimport { UITextField } from \"./UITextField\"\nimport { UITextView } from \"./UITextView\"\nimport { UIViewAddControlEventTargetObject } from \"./UIView\"\n\n\n\n\n\nexport class UITextArea extends UITextField {\n    \n    \n    \n    \n    \n    constructor(elementID, viewHTMLElement = null) {\n        \n        super(elementID, viewHTMLElement, UITextView.type.textArea)\n        \n        this.viewHTMLElement.removeAttribute(\"type\")\n        \n        this.style.overflow = \"auto\"\n        this.style.webkitUserSelect = \"text\"\n        \n        this.pausesPointerEvents = NO\n    \n    }\n    \n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UITextArea.controlEvent> {\n        \n        return super.addControlEventTarget as any\n        \n    }\n    \n    \n    get viewHTMLElement(): HTMLTextAreaElement & HTMLInputElement {\n        \n        // @ts-ignore\n        return super.viewHTMLElement\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"./UIColor\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UIBaseButton extends UIView {\n    \n    _selected: boolean = NO\n    _highlighted: boolean = NO\n    \n    _isPointerInside: boolean\n    \n    \n    _isToggleable: boolean = NO\n    _hovered: boolean\n    _focused: boolean\n    \n    \n    \n    \n    \n    constructor(elementID: string, elementType?: string, initViewData?: any) {\n        \n        super(elementID, nil, elementType, initViewData)\n        \n        this.initViewStateControl()\n        \n    }\n    \n    \n    \n    \n    \n    initViewStateControl() {\n        \n        this.class.superclass = UIView\n        \n        // Instance variables\n        \n        \n        this._isPointerInside = NO\n    \n    \n        const setHovered = function () {\n            this.hovered = YES\n        }.bind(this)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerHover, setHovered)\n    \n        const setNotHovered = function () {\n        \n            this.hovered = NO\n        \n        }.bind(this)\n    \n        this.addTargetForControlEvents([\n            UIView.controlEvent.PointerLeave, UIView.controlEvent.PointerCancel, UIView.controlEvent.MultipleTouches\n        ], setNotHovered)\n    \n    \n        var highlightingTime\n        const setHighlighted = function () {\n            this.highlighted = YES\n            highlightingTime = Date.now()\n        }.bind(this)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerDown, setHighlighted)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerEnter, setHighlighted)\n    \n        const setNotHighlighted = function () {\n            this.highlighted = NO\n        }.bind(this)\n        const setNotHighlightedWithMinimumDuration = function () {\n            const minimumDurationInMilliseconds = 50\n            const elapsedTime = Date.now() - highlightingTime\n            if (minimumDurationInMilliseconds < elapsedTime) {\n                this.highlighted = NO\n            }\n            else {\n                setTimeout(function () {\n                    this.highlighted = NO\n                }.bind(this), minimumDurationInMilliseconds - elapsedTime)\n            }\n        }.bind(this)\n        this.addTargetForControlEvents([\n            UIView.controlEvent.PointerLeave, UIView.controlEvent.PointerCancel, UIView.controlEvent.MultipleTouches\n        ], setNotHighlighted)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerUp, setNotHighlightedWithMinimumDuration)\n        \n        // Handle enter key press\n        this.addTargetForControlEvent(UIView.controlEvent.EnterDown, function () {\n            \n            setHighlighted()\n            setNotHighlightedWithMinimumDuration()\n            \n        })\n        \n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.Focus,\n            function (this: UIBaseButton, sender: UIView, event: Event) {\n                \n                this.focused = YES\n                \n            }.bind(this)\n        )\n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.Blur,\n            function (this: UIBaseButton, sender: UIView, event: Event) {\n                \n                this.focused = NO\n                \n            }.bind(this)\n        )\n        \n        \n        this.updateContentForCurrentState()\n        \n        this.pausesPointerEvents = YES\n        this.tabIndex = 1\n        \n        this.style.cursor = \"pointer\"\n        \n        //this.style.outline = \"none\";\n        \n        \n        this.nativeSelectionEnabled = NO\n        \n        \n        this.addTargetForControlEvents([\n            UIView.controlEvent.EnterDown, UIView.controlEvent.PointerUpInside\n        ], function (this: UIBaseButton, sender, event) {\n            \n            if (this.isToggleable) {\n                \n                this.toggleSelectedState()\n                \n            }\n            \n        }.bind(this))\n        \n        \n    }\n    \n    \n    \n    \n    \n    public set hovered(hovered: boolean) {\n        this._hovered = hovered\n        this.updateContentForCurrentState()\n    }\n    \n    public get hovered(): boolean {\n        return this._hovered\n    }\n    \n    public set highlighted(highlighted: boolean) {\n        this._highlighted = highlighted\n        this.updateContentForCurrentState()\n    }\n    \n    public get highlighted(): boolean {\n        return this._highlighted\n    }\n    \n    public set focused(focused: boolean) {\n        this._focused = focused\n        if (focused) {\n            this.focus()\n        }\n        else {\n            this.blur()\n        }\n        this.updateContentForCurrentState()\n    }\n    \n    public get focused(): boolean {\n        return this._focused\n    }\n    \n    public set selected(selected: boolean) {\n        this._selected = selected\n        this.updateContentForCurrentState()\n    }\n    \n    public get selected(): boolean {\n        return this._selected\n    }\n    \n    \n    \n    \n    \n    updateContentForCurrentState() {\n    \n        var updateFunction: Function = this.updateContentForNormalState\n        if (this.selected && this.highlighted) {\n            updateFunction = this.updateContentForSelectedAndHighlightedState\n        }\n        else if (this.selected) {\n            updateFunction = this.updateContentForSelectedState\n        }\n        else if (this.focused) {\n            updateFunction = this.updateContentForFocusedState\n        }\n        else if (this.highlighted) {\n            updateFunction = this.updateContentForHighlightedState\n        }\n        else if (this.hovered) {\n            updateFunction = this.updateContentForHoveredState\n        }\n        \n        if (!IS(updateFunction)) {\n            this.backgroundColor = UIColor.nilColor\n        }\n        else {\n            updateFunction.call(this)\n        }\n        \n    }\n    \n    updateContentForNormalState() {\n        \n        \n        \n    }\n    \n    updateContentForHoveredState() {\n        \n        this.updateContentForNormalState()\n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        this.updateContentForHoveredState()\n        \n    }\n    \n    updateContentForHighlightedState() {\n        \n        \n        \n    }\n    \n    updateContentForSelectedState() {\n        \n        \n        \n    }\n    \n    updateContentForSelectedAndHighlightedState() {\n        \n        this.updateContentForSelectedState()\n        \n    }\n    \n    \n    set enabled(enabled: boolean) {\n        \n        super.enabled = enabled\n        \n        this.updateContentForCurrentEnabledState()\n        \n    }\n    \n    get enabled() {\n        \n        return super.enabled\n        \n    }\n    \n    updateContentForCurrentEnabledState() {\n        \n        if (this.enabled) {\n            this.alpha = 1\n        }\n        else {\n            this.alpha = 0.5\n        }\n        \n        this.userInteractionEnabled = this.enabled\n        \n    }\n    \n    \n    \n    addStyleClass(styleClassName: string) {\n        \n        super.addStyleClass(styleClassName)\n        \n        if (this.styleClassName != styleClassName) {\n            \n            this.updateContentForCurrentState.call(this)\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.PageDidScroll || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this.hovered = NO\n            \n            this.highlighted = NO\n            \n            \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    toggleSelectedState() {\n        \n        \n        this.selected = !this.selected\n        \n        \n    }\n    \n    set isToggleable(isToggleable: boolean) {\n        \n        this._isToggleable = isToggleable\n        \n    }\n    \n    get isToggleable() {\n        \n        return this._isToggleable\n        \n    }\n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    sendControlEventForKey(eventKey: string, nativeEvent: Event) {\n        \n        if (eventKey == UIView.controlEvent.PointerUpInside && !this.highlighted) {\n            \n            // Do not send the event in this case\n            //super.sendControlEventForKey(eventKey, nativeEvent);\n    \n            const asd = 1\n    \n        }\n        else {\n            \n            super.sendControlEventForKey(eventKey, nativeEvent)\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    static getEventCoordinatesInDocument(touchOrMouseEvent) {\n        // http://www.quirksmode.org/js/events_properties.html\n        var posx = 0\n        var posy = 0\n        var e = touchOrMouseEvent\n        if (!e) {\n            e = window.event\n        }\n        if (e.pageX || e.pageY) {\n            posx = e.pageX\n            posy = e.pageY\n        }\n        else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft\n                + document.documentElement.scrollLeft\n            posy = e.clientY + document.body.scrollTop\n                + document.documentElement.scrollTop\n        }\n        // posx and posy contain the mouse position relative to the document\n    \n        const coordinates = { \"x\": posx, \"y\": posy }\n    \n        return coordinates\n        \n    }\n    \n    \n    \n    static getElementPositionInDocument(el) {\n        //https://www.kirupa.com/html5/getting_mouse_click_position.htm\n        var xPosition = 0\n        var yPosition = 0\n    \n        while (el) {\n            if (el.tagName == \"BODY\") {\n                \n                // Coordinates in document are coordinates in body, therefore subtracting the scroll position of the body is not needed\n                \n                //      // deal with browser quirks with body/window/document and page scroll\n                //      var xScrollPos = el.scrollLeft || document.documentElement.scrollLeft;\n                //      var yScrollPos = el.scrollTop || document.documentElement.scrollTop;\n                //\n                //      xPosition += (el.offsetLeft - xScrollPos + el.clientLeft);\n                //      yPosition += (el.offsetTop - yScrollPos + el.clientTop);\n            }\n            else {\n                xPosition += (el.offsetLeft - el.scrollLeft + el.clientLeft)\n                yPosition += (el.offsetTop - el.scrollTop + el.clientTop)\n            }\n            \n            el = el.offsetParent\n        }\n        return {\n            x: xPosition,\n            y: yPosition\n        }\n    }\n    \n    static convertCoordinatesFromDocumentToElement(x, y, element) {\n        const elementPositionInDocument = this.getElementPositionInDocument(element)\n        const coordinatesInElement = { \"x\": x - elementPositionInDocument.x, \"y\": y - elementPositionInDocument.y }\n        return coordinatesInElement\n    }\n    \n    static getEventCoordinatesInElement(touchOrMouseEvent, element) {\n        const coordinatesInDocument = this.getEventCoordinatesInDocument(touchOrMouseEvent)\n        const coordinatesInElement = this.convertCoordinatesFromDocumentToElement(\n            coordinatesInDocument.x,\n            coordinatesInDocument.y,\n            element\n        )\n        return coordinatesInElement\n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UICore } from \"./UICore\"\nimport { IS_NOT, nil, NO, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UIImageView extends UIView {\n    \n    \n    //actionIndicator: UIActionIndicator;\n    _sourceKey: string\n    _defaultSource: string\n    \n    _fillMode: any\n    \n    _hiddenWhenEmpty = NO\n    \n    \n    constructor(elementID?, viewHTMLElement = null) {\n        \n        super(elementID, viewHTMLElement, \"img\")\n        \n        \n        //this.actionIndicator = new UIActionIndicator(elementID + \"ActionIndicator\");\n        \n        \n    }\n    \n    \n    \n    \n    static fillMode = {\n        \n        \"stretchToFill\": \"fill\",\n        \"aspectFit\": \"contain\",\n        \"aspectFill\": \"cover\",\n        \"center\": \"none\",\n        \"aspectFitIfLarger\": \"scale-down\"\n        \n    }\n    \n    \n    \n    \n    \n    get viewHTMLElement() {\n        \n        return super.viewHTMLElement as HTMLImageElement\n        \n    }\n    \n    \n    \n    \n    \n    static objectURLFromDataURL(dataURL: string) {\n        \n        // if (IS_NOT(dataURL)) {\n        \n        //     return nil;\n        \n        // }\n    \n        // @ts-ignore\n        const blob = dataURLtoBlob(dataURL)\n    \n        const objectURL = URL.createObjectURL(blob)\n    \n        return objectURL\n        \n    }\n    \n    \n    \n    \n    static dataURL(url, callback) {\n        const xhr = new XMLHttpRequest()\n        xhr.open(\"get\", url)\n        xhr.responseType = \"blob\"\n        xhr.onload = function () {\n            const fr = new FileReader()\n    \n            fr.onload = function () {\n                callback(this.result)\n            }\n            \n            fr.readAsDataURL(xhr.response) // async call\n        }\n        \n        xhr.send()\n    }\n    \n    \n    \n    static dataURLWithMaxSize(URLString: string, maxSize: number, completion: (resultURLString: string) => void) {\n    \n        const imageView = new UIImageView()\n        imageView.imageSource = URLString\n        \n        imageView.viewHTMLElement.onload = function () {\n    \n            const originalSize = imageView.intrinsicContentSize()\n    \n    \n            var multiplier = maxSize / Math.max(originalSize.height, originalSize.width)\n    \n            multiplier = Math.min(1, multiplier)\n    \n    \n            const result = imageView.getDataURL((originalSize.height * multiplier).integerValue, (originalSize.width *\n                multiplier).integerValue)\n    \n            completion(result)\n            \n        }\n        \n    }\n    \n    \n    static dataURLWithSizes(\n        URLString: string,\n        height: number,\n        width: number,\n        completion: (resultURLString: string) => void\n    ) {\n    \n        const imageView = new UIImageView()\n        imageView.imageSource = URLString\n        \n        imageView.viewHTMLElement.onload = function () {\n    \n            const result = imageView.getDataURL(height, width)\n            completion(result)\n            \n        }\n        \n    }\n    \n    \n    getDataURL(height?: number, width?: number) {\n    \n        const img = this.viewHTMLElement\n    \n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\")\n        canvas.width = width\n        canvas.height = height\n        \n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\")\n        ctx.drawImage(img, 0, 0, width, height)\n        \n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        const dataURL = canvas.toDataURL(\"image/png\")\n    \n        return dataURL\n        \n        //return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n        \n    }\n    \n    \n    \n    \n    get imageSource() {\n        \n        return this.viewHTMLElement.src\n        \n    }\n    \n    set imageSource(sourceString: string) {\n        \n        if (IS_NOT(sourceString)) {\n            sourceString = \"\"\n        }\n        \n        this.viewHTMLElement.src = sourceString\n        \n        if (this.hiddenWhenEmpty) {\n            this.hidden = IS_NOT(this.imageSource)\n        }\n        \n        if (!sourceString || !sourceString.length) {\n            \n            //this.actionIndicator.stop();\n            this.hidden = YES\n            \n            return\n            \n        }\n        else {\n            \n            this.hidden = NO\n            \n        }\n        \n        // this.superview.addSubview(this.actionIndicator);\n        // this.actionIndicator.frame = this.frame;\n        // this.actionIndicator.start();\n        // this.actionIndicator.backgroundColor = UIColor.redColor\n        \n        // @ts-ignore\n        this.viewHTMLElement.onload = function (this: UIImageView, event: Event) {\n            \n            this.superview.setNeedsLayout()\n            \n            //this.actionIndicator.removeFromSuperview();\n            \n        }.bind(this)\n        \n    }\n    \n    \n    \n    setImageSource(key: string, defaultString: string) {\n    \n        const languageName = UICore.languageService.currentLanguageKey\n        this.imageSource = UICore.languageService.stringForKey(key, languageName, defaultString, nil)\n        \n    }\n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setImageSourceFromKeyIfPossible()\n            \n        }\n        \n    }\n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        super.willMoveToSuperview(superview)\n        \n        this._setImageSourceFromKeyIfPossible()\n        \n    }\n    \n    _setImageSourceFromKeyIfPossible() {\n        \n        if (this._sourceKey && this._defaultSource) {\n            \n            this.setImageSource(this._sourceKey, this._defaultSource)\n            \n        }\n        \n    }\n    \n    \n    \n    get fillMode() {\n        \n        \n        return this._fillMode\n        \n    }\n    \n    set fillMode(fillMode) {\n        \n        this._fillMode = fillMode;\n        \n        (this.style as any).objectFit = fillMode\n        \n    }\n    \n    \n    get hiddenWhenEmpty() {\n        return this._hiddenWhenEmpty\n    }\n    \n    set hiddenWhenEmpty(hiddenWhenEmpty: boolean) {\n        this._hiddenWhenEmpty = hiddenWhenEmpty\n        if (hiddenWhenEmpty) {\n            this.hidden = IS_NOT(this.imageSource)\n        }\n    }\n    \n    \n    \n    \n    \n    didMoveToSuperview(superview: UIView) {\n        \n        super.didMoveToSuperview(superview)\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        \n        \n    }\n    \n    \n    \n    \n    intrinsicContentSize() {\n    \n    \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.naturalHeight, this.viewHTMLElement.naturalWidth)\n    \n        return result\n        \n        \n    }\n    \n    intrinsicContentSizeWithConstraints(constrainingHeight = 0, constrainingWidth = 0) {\n    \n        const heightRatio = constrainingHeight / this.viewHTMLElement.naturalHeight\n    \n        const widthRatio = constrainingWidth / this.viewHTMLElement.naturalWidth\n    \n        const multiplier = Math.max(heightRatio, widthRatio)\n    \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.naturalHeight *\n            multiplier, this.viewHTMLElement.naturalWidth * multiplier)\n    \n        return result\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport { UIBaseButton } from \"./UIBaseButton\"\nimport { UIColor } from \"./UIColor\"\nimport { UIImageView } from \"./UIImageView\"\nimport { IS, IS_NOT, IS_NOT_NIL, nil, NO, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UITextView } from \"./UITextView\"\n\n\nexport interface UIButtonColorSpecifier {\n    \n    titleLabel: UIButtonElementColorSpecifier;\n    background: UIButtonElementColorSpecifier;\n    \n}\n\n\nexport interface UIButtonElementColorSpecifier {\n    \n    normal: UIColor;\n    hovered?: UIColor;\n    highlighted: UIColor;\n    focused?: UIColor;\n    selected: UIColor;\n    selectedAndHighlighted?: UIColor;\n    \n}\n\n\n\nexport class UIButton extends UIBaseButton {\n    \n    _contentPadding: any\n    _titleLabel: UITextView\n    _imageView: UIImageView\n    \n    usesAutomaticTitleFontSize = NO\n    minAutomaticFontSize: number = nil\n    maxAutomaticFontSize: number = 25\n    \n    colors: UIButtonColorSpecifier\n    \n    \n    constructor(elementID: string, elementType?: string, titleType = UITextView.type.span) {\n        \n        super(elementID, elementType, { \"titleType\": titleType })\n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID, viewHTMLElement, initViewData: { titleType: string }) {\n        \n        this.class.superclass = UIBaseButton\n        \n        // Instance variables\n        \n        this.colors = {\n            \n            titleLabel: {\n                \n                normal: UIColor.whiteColor,\n                highlighted: UIColor.whiteColor,\n                selected: UIColor.whiteColor\n                \n            },\n            \n            background: {\n                \n                normal: UIColor.blueColor,\n                highlighted: UIColor.greenColor,\n                selected: UIColor.redColor\n                \n            }\n            \n        }\n        \n        \n        this._imageView = new UIImageView(elementID + \"ImageView\")\n        this._imageView.hidden = YES\n        this.addSubview(this.imageView)\n        \n        this.imageView.fillMode = UIImageView.fillMode.aspectFitIfLarger\n        \n        \n        if (IS_NOT_NIL(initViewData.titleType)) {\n            \n            this._titleLabel = new UITextView(elementID + \"TitleLabel\", initViewData.titleType)\n            this.titleLabel.style.whiteSpace = \"nowrap\"\n            this.addSubview(this.titleLabel)\n            \n            this.titleLabel.userInteractionEnabled = NO\n            \n        }\n        \n        this.contentPadding = 10\n        \n        this.imageView.userInteractionEnabled = NO\n        this.titleLabel.textAlignment = UITextView.textAlignment.center\n        this.titleLabel.nativeSelectionEnabled = NO\n        \n    }\n    \n    \n    \n    get contentPadding() {\n        \n        return this._contentPadding.integerValue\n        \n    }\n    \n    set contentPadding(contentPadding) {\n        \n        this._contentPadding = contentPadding\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    \n    public set hovered(hovered: boolean) {\n        this._hovered = hovered\n        this.updateContentForCurrentState()\n    }\n    \n    public get hovered(): boolean {\n        return this._hovered\n    }\n    \n    public set highlighted(highlighted: boolean) {\n        this._highlighted = highlighted\n        this.updateContentForCurrentState()\n    }\n    \n    public get highlighted(): boolean {\n        return this._highlighted\n    }\n    \n    public set focused(focused: boolean) {\n        this._focused = focused\n        if (focused) {\n            this.focus()\n        }\n        else {\n            this.blur()\n        }\n        this.updateContentForCurrentState()\n    }\n    \n    public get focused(): boolean {\n        return this._focused\n    }\n    \n    public set selected(selected: boolean) {\n        this._selected = selected\n        this.updateContentForCurrentState()\n    }\n    \n    public get selected(): boolean {\n        return this._selected\n    }\n    \n    \n    \n    \n    \n    updateContentForCurrentState() {\n    \n        var updateFunction: Function = this.updateContentForNormalState\n        if (this.selected && this.highlighted) {\n            updateFunction = this.updateContentForSelectedAndHighlightedState\n        }\n        else if (this.selected) {\n            updateFunction = this.updateContentForSelectedState\n        }\n        else if (this.focused) {\n            updateFunction = this.updateContentForFocusedState\n        }\n        else if (this.highlighted) {\n            updateFunction = this.updateContentForHighlightedState\n        }\n        else if (this.hovered) {\n            updateFunction = this.updateContentForHoveredState\n        }\n        \n        if (!IS(updateFunction)) {\n            this.titleLabel.textColor = UIColor.nilColor\n            this.backgroundColor = UIColor.nilColor\n        }\n        else {\n            updateFunction.call(this)\n        }\n        \n        this.updateContentForCurrentEnabledState();\n        \n    }\n    \n    updateContentForNormalState() {\n        \n        this.backgroundColor = this.colors.background.normal\n        this.titleLabel.textColor = this.colors.titleLabel.normal\n        \n    }\n    \n    updateContentForHoveredState() {\n        \n        this.updateContentForNormalState()\n        \n        if (this.colors.background.hovered) {\n            this.backgroundColor = this.colors.background.hovered\n        }\n        \n        if (this.colors.titleLabel.hovered) {\n            this.titleLabel.textColor = this.colors.titleLabel.hovered\n        }\n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        this.updateContentForHoveredState()\n        \n        if (this.colors.background.focused) {\n            this.backgroundColor = this.colors.background.focused\n        }\n        \n        if (this.colors.titleLabel.focused) {\n            this.titleLabel.textColor = this.colors.titleLabel.focused\n        }\n        \n    }\n    \n    updateContentForHighlightedState() {\n        \n        this.backgroundColor = this.colors.background.highlighted\n        this.titleLabel.textColor = this.colors.titleLabel.highlighted\n        \n    }\n    \n    updateContentForSelectedState() {\n        \n        this.backgroundColor = this.colors.background.selected\n        this.titleLabel.textColor = this.colors.titleLabel.selected\n        \n    }\n    \n    updateContentForSelectedAndHighlightedState() {\n        \n        this.updateContentForSelectedState()\n        \n        if (this.colors.background.selectedAndHighlighted) {\n            this.backgroundColor = this.colors.background.selectedAndHighlighted\n        }\n        \n        if (this.colors.titleLabel.selectedAndHighlighted) {\n            this.titleLabel.textColor = this.colors.titleLabel.selectedAndHighlighted\n        }\n        \n    }\n    \n    \n    set enabled(enabled: boolean) {\n        \n        // @ts-ignore\n        super.enabled = enabled\n        \n        this.updateContentForCurrentState()\n        \n    }\n    \n    get enabled() {\n        \n        // @ts-ignore\n        return super.enabled\n        \n    }\n    \n    updateContentForCurrentEnabledState() {\n        \n        if (this.enabled) {\n            this.alpha = 1\n        }\n        else {\n            this.alpha = 0.5\n        }\n        \n        this.userInteractionEnabled = this.enabled\n        \n    }\n    \n    \n    \n    addStyleClass(styleClassName: string) {\n        \n        super.addStyleClass(styleClassName)\n        \n        if (this.styleClassName != styleClassName) {\n            \n            this.updateContentForCurrentState.call(this)\n            \n        }\n        \n    }\n    \n    \n    get titleLabel() {\n        \n        return this._titleLabel\n        \n    }\n    \n    get imageView() {\n        \n        return this._imageView\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        var bounds = this.bounds\n    \n        this.hoverText = this.titleLabel.text\n        \n        // Image only if text is not present\n        if (IS_NOT(this.imageView.hidden) && !IS(this.titleLabel.text)) {\n            \n            \n            this.imageView.frame = bounds\n            \n            \n        }\n        \n        // Text only if image is not present\n        if (IS(this.imageView.hidden) && IS(this.titleLabel.text)) {\n            \n            var titleElement = this.titleLabel.viewHTMLElement\n            \n            \n            this.titleLabel.style.left = this.contentPadding\n            this.titleLabel.style.right = this.contentPadding\n            // this.titleLabel.style.marginLeft = \"\"\n            // this.titleLabel.style.right = this.contentPadding\n            this.titleLabel.style.top = \"50%\"\n            this.titleLabel.style.transform = \"translateY(-50%)\"\n            this.titleLabel.frame = new UIRectangle(nil, nil, nil, nil)\n            \n            if (this.usesAutomaticTitleFontSize) {\n                \n                var hidden = this.titleLabel.hidden\n                \n                this.titleLabel.hidden = YES\n                \n                this.titleLabel.fontSize = 15\n                \n                this.titleLabel.fontSize = UITextView.automaticallyCalculatedFontSize(\n                    new UIRectangle(\n                        0,\n                        0,\n                        this.bounds.height,\n                        1 *\n                        this.titleLabel.viewHTMLElement.offsetWidth\n                    ),\n                    this.titleLabel.intrinsicContentSize(),\n                    this.titleLabel.fontSize,\n                    this.minAutomaticFontSize,\n                    this.maxAutomaticFontSize\n                )\n                \n                this.titleLabel.hidden = hidden\n                \n            }\n            \n            \n        }\n        \n        // Image and text both present\n        if (IS_NOT(this.imageView.hidden) && IS(this.titleLabel.text)) {\n    \n            const imageShareOfWidth = 0.25\n    \n            bounds = bounds.rectangleWithInset(this.contentPadding)\n    \n            const imageFrame = bounds.copy()\n            imageFrame.width = bounds.height - this.contentPadding * 0.5\n            this.imageView.frame = imageFrame\n            \n            var titleElement = this.titleLabel.viewHTMLElement\n            \n            this.titleLabel.style.left = imageFrame.max.x + this.contentPadding\n            this.titleLabel.style.right = this.contentPadding\n            this.titleLabel.style.top = \"50%\"\n            this.titleLabel.style.transform = \"translateY(-50%)\"\n            \n            if (this.usesAutomaticTitleFontSize) {\n                \n                var hidden = this.titleLabel.hidden\n                \n                this.titleLabel.hidden = YES\n                \n                this.titleLabel.fontSize = 15\n                \n                this.titleLabel.fontSize = UITextView.automaticallyCalculatedFontSize(\n                    new UIRectangle(\n                        0,\n                        0,\n                        this.bounds.height,\n                        1 *\n                        this.titleLabel.viewHTMLElement.offsetWidth\n                    ),\n                    this.titleLabel.intrinsicContentSize(),\n                    this.titleLabel.fontSize,\n                    this.minAutomaticFontSize,\n                    this.maxAutomaticFontSize\n                )\n                \n                this.titleLabel.hidden = hidden\n                \n            }\n            \n        }\n        \n        this.applyClassesAndStyles()\n        \n    }\n    \n    initViewStyleSelectors() {\n        \n        this.initStyleSelector(\".\" + this.styleClassName, \"background-color: lightblue;\")\n        \n        // var selectorWithoutImage = \".\" + this.styleClassName + \" .\" + this.imageView.styleClassName + \" + .\" + this.titleLabel.styleClassName;\n        \n        // this.initStyleSelector(\n        //     selectorWithoutImage,\n        //     \"left: \" + this.contentPadding + \";\" +\n        //     \"right: \" + this.contentPadding + \";\" +\n        //     \"top: 50%;\" +\n        //     \"transform: translateY(-50%);\");\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UINativeScrollView extends UIView {\n    \n    \n    animationDuration = 0\n    \n    constructor(elementID, viewHTMLElement?) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this.style.cssText = this.style.cssText + \"-webkit-overflow-scrolling: touch;\"\n        \n        this.style.overflow = \"auto\"\n        \n        // this.scrollsX = YES;\n        // this.scrollsY = YES;\n        \n        this.viewHTMLElement.addEventListener(\"scroll\", function (this: UINativeScrollView, event: UIEvent) {\n            \n            \n            this.didScrollToPosition(new UIPoint(this.viewHTMLElement.scrollLeft, this.viewHTMLElement.scrollTop))\n            \n            this.broadcastEventInSubtree({\n                \n                name: UIView.broadcastEventName.PageDidScroll,\n                parameters: nil\n                \n            })\n            \n            \n        }.bind(this))\n        \n        \n    }\n    \n    \n    \n    \n    \n    didScrollToPosition(offsetPosition: UIPoint) {\n        \n        \n        \n    }\n    \n    \n    \n    get scrollsX() {\n        const result = (this.style.overflowX == \"scroll\")\n        return result\n    }\n    \n    set scrollsX(scrolls: boolean) {\n        if (scrolls) {\n            this.style.overflowX = \"scroll\"\n        }\n        else {\n            this.style.overflowX = \"hidden\"\n        }\n    }\n    \n    \n    \n    get scrollsY() {\n        const result = (this.style.overflowY == \"scroll\")\n        return result\n    }\n    \n    set scrollsY(scrolls: boolean) {\n        if (scrolls) {\n            this.style.overflowY = \"scroll\"\n        }\n        else {\n            this.style.overflowY = \"hidden\"\n        }\n    }\n    \n    \n    \n    get contentOffset() {\n        const result = new UIPoint(this.viewHTMLElement.scrollLeft, this.viewHTMLElement.scrollTop)\n        return result\n    }\n    \n    \n    set contentOffset(offsetPoint: UIPoint) {\n        \n        if (this.animationDuration) {\n            \n            this.scrollXTo(this.viewHTMLElement, offsetPoint.x, this.animationDuration)\n            this.scrollYTo(this.viewHTMLElement, offsetPoint.y, this.animationDuration)\n            \n            return\n            \n        }\n        \n        \n        this.viewHTMLElement.scrollLeft = offsetPoint.x\n        this.viewHTMLElement.scrollTop = offsetPoint.y\n        \n    }\n    \n    \n    scrollToBottom() {\n        \n        this.contentOffset = new UIPoint(this.contentOffset.x, this.scrollSize.height - this.frame.height)\n        \n    }\n    \n    scrollToTop() {\n        \n        this.contentOffset = new UIPoint(this.contentOffset.x, 0)\n        \n    }\n    \n    get isScrolledToBottom() {\n        \n        return this.contentOffset.isEqualTo(new UIPoint(this.contentOffset.x, this.scrollSize.height -\n            this.frame.height))\n        \n    }\n    \n    get isScrolledToTop() {\n        \n        return this.contentOffset.isEqualTo(new UIPoint(this.contentOffset.x, 0))\n        \n    }\n    \n    \n    \n    \n    \n    scrollYTo(element, to, duration) {\n        \n        duration = duration * 1000\n    \n        const start = element.scrollTop\n        const change = to - start\n        const increment = 10\n    \n        const animateScroll = function (elapsedTime) {\n            elapsedTime += increment\n            const position = this.easeInOut(elapsedTime, start, change, duration)\n            element.scrollTop = position\n            if (elapsedTime < duration) {\n                setTimeout(function () {\n                    animateScroll(elapsedTime)\n                }, increment)\n            }\n        }.bind(this)\n    \n        animateScroll(0)\n    }\n    \n    scrollXTo(element, to, duration) {\n        \n        duration = duration * 1000\n    \n        const start = element.scrollTop\n        const change = to - start\n        const increment = 10\n    \n        const animateScroll = function (elapsedTime) {\n            elapsedTime += increment\n            const position = this.easeInOut(elapsedTime, start, change, duration)\n            element.scrollLeft = position\n            if (elapsedTime < duration) {\n                setTimeout(function () {\n                    animateScroll(elapsedTime)\n                }, increment)\n            }\n        }.bind(this)\n    \n        animateScroll(0)\n    }\n    \n    easeInOut(currentTime, start, change, duration) {\n        currentTime /= duration / 2\n        if (currentTime < 1) {\n            return change / 2 * currentTime * currentTime + start\n        }\n        currentTime -= 1\n        return -change / 2 * (currentTime * (currentTime - 2) - 1) + start\n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton } from \"./UIButton\"\nimport { UINativeScrollView } from \"./UINativeScrollView\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport interface UITableViewReusableViewsContainerObject {\n    \n    [key: string]: UIView[];\n    \n}\n\n\nexport interface UITableViewReusableViewPositionObject {\n    \n    bottomY: number;\n    topY: number;\n    \n    isValid: boolean;\n    \n}\n\n\n\n\n\nexport class UITableView extends UINativeScrollView {\n    \n    \n    \n    \n    allRowsHaveEqualHeight: boolean = NO\n    _visibleRows: UIView[] = []\n    _firstLayoutVisibleRows: UIView[] = []\n    \n    _rowPositions: UITableViewReusableViewPositionObject[] = []\n    \n    _highestValidRowPositionIndex: number = 0\n    \n    _reusableViews: UITableViewReusableViewsContainerObject = {}\n    \n    _removedReusableViews: UITableViewReusableViewsContainerObject = {}\n    \n    _fullHeightView: UIView\n    \n    _rowIDIndex: number = 0\n    \n    reloadsOnLanguageChange = YES\n    \n    sidePadding = 0\n    \n    _persistedData: any[] = []\n    _needsDrawingOfVisibleRowsBeforeLayout = NO\n    _isDrawVisibleRowsScheduled = NO\n    _shouldAnimateNextLayout: boolean\n    \n    animationDuration = 0.25\n    \n    \n    constructor(elementID) {\n        \n        super(elementID)\n        \n        this.scrollsX = NO\n        \n    }\n    \n    \n    \n    initView(elementID, viewHTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        this._fullHeightView = new UIView()\n        this._fullHeightView.hidden = YES\n        this._fullHeightView.userInteractionEnabled = NO\n        this.addSubview(this._fullHeightView)\n        \n    }\n    \n    \n    \n    loadData() {\n        \n        this._persistedData = []\n        \n        this._calculatePositionsUntilIndex(this.numberOfRows() - 1)\n        this._needsDrawingOfVisibleRowsBeforeLayout = YES\n        \n        this.setNeedsLayout()\n        \n        // this.forEachViewInSubtree(function(view) {\n        \n        //     view.setNeedsLayout();\n        \n        // })\n        \n    }\n    \n    reloadData() {\n        \n        this._removeVisibleRows()\n        this._removeAllReusableRows()\n        \n        this._rowPositions = []\n        this._highestValidRowPositionIndex = 0\n        \n        this.loadData()\n        \n    }\n    \n    \n    \n    highlightChanges(previousData: any[], newData: any[]) {\n        \n        previousData = previousData.map(function (dataPoint, index, array) {\n            \n            return JSON.stringify(dataPoint)\n            \n        })\n        \n        newData = newData.map(function (dataPoint, index, array) {\n            \n            return JSON.stringify(dataPoint)\n            \n        })\n        \n        \n        const newIndexes: number[] = []\n        \n        newData.forEach(function (value, index, array) {\n            \n            if (!previousData.contains(value)) {\n                \n                newIndexes.push(index)\n                \n            }\n            \n        })\n        \n        newIndexes.forEach(function (this: UITableView, index) {\n            \n            if (this.isRowWithIndexVisible(index)) {\n                \n                this.highlightRowAsNew(this.viewForRowWithIndex(index))\n                \n            }\n            \n        }.bind(this))\n        \n    }\n    \n    \n    \n    highlightRowAsNew(row: UIView) {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    invalidateSizeOfRowWithIndex(index: number, animateChange = NO) {\n        \n        if (this._rowPositions[index]) {\n            this._rowPositions[index].isValid = NO\n        }\n        \n        this._highestValidRowPositionIndex = Math.min(this._highestValidRowPositionIndex, index - 1)\n        \n        // if (index == 0) {\n        \n        //     this._highestValidRowPositionIndex = 0;\n        \n        //     this._rowPositions = [];\n        \n        // }\n        \n        this._needsDrawingOfVisibleRowsBeforeLayout = YES\n        \n        this._shouldAnimateNextLayout = animateChange\n        \n    }\n    \n    \n    \n    _calculateAllPositions() {\n        this._calculatePositionsUntilIndex(this.numberOfRows() - 1)\n    }\n    \n    _calculatePositionsUntilIndex(maxIndex: number) {\n        \n        var validPositionObject = this._rowPositions[this._highestValidRowPositionIndex]\n        if (!IS(validPositionObject)) {\n            validPositionObject = {\n                bottomY: 0,\n                topY: 0,\n                isValid: YES\n            }\n        }\n        \n        var previousBottomY = validPositionObject.bottomY\n        \n        if (!this._rowPositions.length) {\n            \n            this._highestValidRowPositionIndex = -1\n            \n        }\n        \n        for (var i = this._highestValidRowPositionIndex + 1; i <= maxIndex; i++) {\n            \n            var height: number\n            \n            const rowPositionObject = this._rowPositions[i]\n            \n            if (IS((rowPositionObject || nil).isValid)) {\n                \n                height = rowPositionObject.bottomY - rowPositionObject.topY\n                \n            }\n            else {\n                \n                height = this.heightForRowWithIndex(i)\n                \n            }\n            \n            \n            \n            \n            const positionObject: UITableViewReusableViewPositionObject = {\n                bottomY: previousBottomY + height,\n                topY: previousBottomY,\n                isValid: YES\n            }\n            \n            if (i < this._rowPositions.length) {\n                this._rowPositions[i] = positionObject\n            }\n            else {\n                this._rowPositions.push(positionObject)\n            }\n            this._highestValidRowPositionIndex = i\n            previousBottomY = previousBottomY + height\n            \n        }\n        \n    }\n    \n    \n    \n    indexesForVisibleRows(paddingRatio = 0.5): number[] {\n        \n        const firstVisibleY = this.contentOffset.y - this.bounds.height * paddingRatio\n        const lastVisibleY = firstVisibleY + this.bounds.height * (1 + paddingRatio)\n        \n        const numberOfRows = this.numberOfRows()\n        \n        if (this.allRowsHaveEqualHeight) {\n            \n            const rowHeight = this.heightForRowWithIndex(0)\n            \n            var firstIndex = firstVisibleY / rowHeight\n            var lastIndex = lastVisibleY / rowHeight\n            \n            firstIndex = Math.trunc(firstIndex)\n            lastIndex = Math.trunc(lastIndex) + 1\n            \n            firstIndex = Math.max(firstIndex, 0)\n            lastIndex = Math.min(lastIndex, numberOfRows - 1)\n            \n            var result = []\n            for (var i = firstIndex; i < lastIndex + 1; i++) {\n                result.push(i)\n            }\n            return result\n        }\n        \n        var accumulatedHeight = 0\n        var result = []\n        \n        this._calculateAllPositions()\n        \n        const rowPositions = this._rowPositions\n        \n        for (var i = 0; i < numberOfRows; i++) {\n            \n            const height = rowPositions[i].bottomY - rowPositions[i].topY  // this.heightForRowWithIndex(i)\n            \n            accumulatedHeight = accumulatedHeight + height\n            if (accumulatedHeight >= firstVisibleY) {\n                result.push(i)\n            }\n            if (accumulatedHeight >= lastVisibleY) {\n                break\n            }\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    _removeVisibleRows() {\n        \n        const visibleRows = []\n        this._visibleRows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n            \n            this._persistedData[row._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(\n                row._UITableViewRowIndex,\n                row\n            )\n            row.removeFromSuperview()\n            this._removedReusableViews[row._UITableViewReusabilityIdentifier].push(row)\n            \n            \n        }, this)\n        this._visibleRows = visibleRows\n        \n    }\n    \n    \n    \n    _removeAllReusableRows() {\n        // @ts-ignore\n        this._reusableViews.forEach(function (this: UITableView, rows: UIView[]) {\n            rows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n                \n                this._persistedData[row._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(\n                    row._UITableViewRowIndex,\n                    row\n                )\n                row.removeFromSuperview()\n                \n                this._markReusableViewAsUnused(row)\n                \n            }.bind(this))\n        }.bind(this))\n    }\n    \n    \n    \n    _markReusableViewAsUnused(row: UIView) {\n        if (!this._removedReusableViews[row._UITableViewReusabilityIdentifier].contains(row)) {\n            this._removedReusableViews[row._UITableViewReusabilityIdentifier].push(row)\n        }\n    }\n    \n    _drawVisibleRows() {\n        \n        if (!this.isMemberOfViewTree) {\n            return\n        }\n        \n        const visibleIndexes = this.indexesForVisibleRows()\n        \n        const minIndex = visibleIndexes[0]\n        const maxIndex = visibleIndexes[visibleIndexes.length - 1]\n        \n        const removedViews = []\n        \n        const visibleRows = []\n        this._visibleRows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n            if (row._UITableViewRowIndex < minIndex || row._UITableViewRowIndex > maxIndex) {\n                \n                //row.removeFromSuperview();\n                \n                this._persistedData[row._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(\n                    row._UITableViewRowIndex,\n                    row\n                )\n                \n                this._removedReusableViews[row._UITableViewReusabilityIdentifier].push(row)\n                \n                removedViews.push(row)\n                \n            }\n            else {\n                visibleRows.push(row)\n            }\n        }, this)\n        this._visibleRows = visibleRows\n        \n        visibleIndexes.forEach(function (this: UITableView, rowIndex: number, index: number, array: number) {\n            \n            \n            if (this.isRowWithIndexVisible(rowIndex)) {\n                return\n            }\n            const view: UIView = this.viewForRowWithIndex(rowIndex)\n            //view._UITableViewRowIndex = rowIndex;\n            this._firstLayoutVisibleRows.push(view)\n            this._visibleRows.push(view)\n            this.addSubview(view)\n            \n        } as any, this)\n        \n        for (var i = 0; i < removedViews.length; i++) {\n            \n            var view: UIView = removedViews[i]\n            if (this._visibleRows.indexOf(view) == -1) {\n                \n                //this._persistedData[view._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(view._UITableViewRowIndex, view);\n                view.removeFromSuperview()\n                \n                //this._removedReusableViews[view._UITableViewReusabilityIdentifier].push(view);\n                \n            }\n            \n        }\n        \n        //this.setNeedsLayout();\n        \n    }\n    \n    \n    visibleRowWithIndex(rowIndex: number): UIView {\n        for (var i = 0; i < this._visibleRows.length; i++) {\n            const row = this._visibleRows[i]\n            if (row._UITableViewRowIndex == rowIndex) {\n                return row\n            }\n        }\n        return nil\n    }\n    \n    \n    isRowWithIndexVisible(rowIndex: number) {\n        return IS(this.visibleRowWithIndex(rowIndex))\n    }\n    \n    \n    \n    reusableViewForIdentifier(identifier: string, rowIndex: number) {\n        \n        if (!this._removedReusableViews[identifier]) {\n            this._removedReusableViews[identifier] = []\n        }\n        \n        if (this._removedReusableViews[identifier] && this._removedReusableViews[identifier].length) {\n            \n            const view = this._removedReusableViews[identifier].pop()\n            \n            view._UITableViewRowIndex = rowIndex\n            \n            Object.assign(view, this._persistedData[rowIndex] || this.defaultRowPersistenceDataItem())\n            \n            return view\n            \n        }\n        \n        if (!this._reusableViews[identifier]) {\n            this._reusableViews[identifier] = []\n        }\n        \n        const newView = this.newReusableViewForIdentifier(identifier, this._rowIDIndex)\n        this._rowIDIndex = this._rowIDIndex + 1\n        \n        if (this._rowIDIndex > 40) {\n            \n            const asd = 1\n            \n        }\n        \n        newView._UITableViewReusabilityIdentifier = identifier\n        \n        newView._UITableViewRowIndex = rowIndex\n        \n        Object.assign(newView, this._persistedData[rowIndex] || this.defaultRowPersistenceDataItem())\n        this._reusableViews[identifier].push(newView)\n        \n        return newView\n        \n    }\n    \n    \n    // Functions that should be overridden to draw the correct content START\n    newReusableViewForIdentifier(identifier: string, rowIDIndex: number): UIView {\n        \n        const view = new UIButton(this.elementID + \"Row\" + rowIDIndex)\n        \n        view.stopsPointerEventPropagation = NO\n        view.pausesPointerEvents = NO\n        \n        return view\n        \n    }\n    \n    heightForRowWithIndex(index: number): number {\n        return 50\n    }\n    \n    numberOfRows() {\n        return 10000\n    }\n    \n    defaultRowPersistenceDataItem() {\n        \n        \n        \n    }\n    \n    persistenceDataItemForRowWithIndex(rowIndex: number, row: UIView) {\n        \n        \n        \n    }\n    \n    viewForRowWithIndex(rowIndex: number): UIView {\n        \n        const row = this.reusableViewForIdentifier(\"Row\", rowIndex);\n        (row as UIButton).titleLabel.text = \"Row \" + rowIndex\n        \n        return row\n        \n    }\n    \n    // Functions that should be overridden to draw the correct content END\n    \n    \n    // Functions that trigger redrawing of the content\n    didScrollToPosition(offsetPosition: UIPoint) {\n        \n        super.didScrollToPosition(offsetPosition)\n        \n        this.forEachViewInSubtree(function (view: UIView) {\n            \n            view._isPointerValid = NO\n            \n        })\n        \n        if (!this._isDrawVisibleRowsScheduled) {\n            \n            this._isDrawVisibleRowsScheduled = YES\n            \n            UIView.runFunctionBeforeNextFrame(function (this: UITableView) {\n                \n                this._calculateAllPositions()\n                \n                this._drawVisibleRows()\n                \n                this.setNeedsLayout()\n                \n                this._isDrawVisibleRowsScheduled = NO\n                \n            }.bind(this))\n            \n        }\n        \n    }\n    \n    wasAddedToViewTree() {\n        this.loadData()\n    }\n    \n    setFrame(rectangle: UIRectangle, zIndex?: number, performUncheckedLayout?: boolean) {\n        \n        const frame = this.frame\n        super.setFrame(rectangle, zIndex, performUncheckedLayout)\n        if (frame.isEqualTo(rectangle) && !performUncheckedLayout) {\n            return\n        }\n        \n        this._needsDrawingOfVisibleRowsBeforeLayout = YES\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged && this.reloadsOnLanguageChange) {\n            \n            this.reloadData()\n            \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    private _layoutAllRows(positions = this._rowPositions) {\n        \n        const bounds = this.bounds\n        \n        this._visibleRows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n            \n            const frame = bounds.copy()\n            \n            const positionObject = positions[row._UITableViewRowIndex]\n            frame.min.y = positionObject.topY\n            frame.max.y = positionObject.bottomY\n            row.frame = frame\n            \n            row.style.width = \"\" + (bounds.width - this.sidePadding * 2).integerValue + \"px\"\n            row.style.left = \"\" + this.sidePadding.integerValue + \"px\"\n            \n            \n        }, this)\n        \n        this._fullHeightView.frame = bounds.rectangleWithHeight((positions.lastElement ||\n            nil).bottomY).rectangleWithWidth(bounds.width * 0.5)\n        \n        this._firstLayoutVisibleRows = []\n        \n        \n    }\n    \n    private _animateLayoutAllRows() {\n        \n        UIView.animateViewOrViewsWithDurationDelayAndFunction(\n            this._visibleRows,\n            this.animationDuration,\n            0,\n            undefined,\n            function (this: UITableView) {\n                \n                this._layoutAllRows()\n                \n            }.bind(this),\n            function (this: UITableView) {\n                \n                // this._calculateAllPositions()\n                // this._layoutAllRows()\n                \n            }.bind(this)\n        )\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        const previousPositions: UITableViewReusableViewPositionObject[] = JSON.parse(JSON.stringify(this._rowPositions))\n        \n        const previousVisibleRowsLength = this._visibleRows.length\n        \n        if (this._needsDrawingOfVisibleRowsBeforeLayout) {\n            \n            //this._calculateAllPositions()\n            \n            this._drawVisibleRows()\n            \n            this._needsDrawingOfVisibleRowsBeforeLayout = NO\n            \n        }\n        \n        \n        \n        super.layoutSubviews()\n        \n        \n        if (!this.numberOfRows() || !this.isMemberOfViewTree) {\n            \n            return\n            \n        }\n        \n        \n        \n        \n        \n        if (this._shouldAnimateNextLayout) {\n            \n            \n            \n            // Need to do layout with the previous positions\n            \n            this._layoutAllRows(previousPositions)\n            \n            \n            if (previousVisibleRowsLength < this._visibleRows.length) {\n                \n                \n                UIView.runFunctionBeforeNextFrame(function (this: UITableView) {\n                    \n                    this._animateLayoutAllRows()\n                    \n                }.bind(this))\n                \n            }\n            else {\n                \n                this._animateLayoutAllRows()\n                \n            }\n            \n            \n            this._shouldAnimateNextLayout = NO\n            \n        }\n        else {\n            \n            // if (this._needsDrawingOfVisibleRowsBeforeLayout) {\n            \n            //     this._drawVisibleRows();\n            \n            //     this._needsDrawingOfVisibleRowsBeforeLayout = NO;\n            \n            // }\n            \n            this._calculateAllPositions()\n            \n            this._layoutAllRows()\n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    intrinsicContentHeight(constrainingWidth = 0) {\n        \n        \n        \n        var result = 0\n        \n        this._calculateAllPositions()\n        \n        if (this._rowPositions.length) {\n            \n            result = this._rowPositions[this._rowPositions.length - 1].bottomY\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nexport default function inlineWorker(scriptText) {\n  let blob = new Blob([scriptText], {type: 'text/javascript'});\n  let url = URL.createObjectURL(blob);\n  let worker = new Worker(url);\n  URL.revokeObjectURL(url);\n  return worker;\n}\n", "import inlineWorker from '__inline-worker'\nexport default function Worker() {\n  return inlineWorker(\"\\\"contains\\\"in Array.prototype||(Array.prototype.contains=function(n){var r=this.indexOf(n)!=-1;return r});\\\"contains\\\"in String.prototype||(String.prototype.contains=function(n){var r=this.indexOf(n)!=-1;return r});onmessage=function(n){var r=h(n.data.filteringString,n.data.data,n.data.excludedData);r.identifier=n.data.identifier,r.instanceIdentifier=n.data.instanceIdentifier,postMessage(r)};function h(n,r,s){var a=[],e=[];if(n){var c=[];n.split(\\\" \\\").forEach(function(i,t,o){i&&c.push(i.toLowerCase())}),r.forEach(function(i,t,o){var u=i.toLowerCase(),f=[];c.forEach(function(p){f.push(u.contains(p)&&!s.contains(i))}),f.contains(!0)&&!f.contains(!1)&&(a.push(i),e.push(t))})}else s.length?a=r.forEach(function(i,t,o){s.indexOf(i)==-1&&(a.push(i),e.push(t))}):(a=r,r.forEach(function(i,t,o){e.push(t)}));return{filteredData:a,filteredIndexes:e}}\\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdWljb3JlLXRzL3NjcmlwdHMvVUlTdHJpbmdGaWx0ZXJXZWJXb3JrZXIud29ya2VyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyBAdHMtY2hlY2tcblxuaWYgKFwiY29udGFpbnNcIiBpbiBBcnJheS5wcm90b3R5cGUgPT0gZmFsc2UpIHtcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgQXJyYXkucHJvdG90eXBlLmNvbnRhaW5zID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgXG4gICAgICAgIHZhciByZXN1bHQgPSAodGhpcy5pbmRleE9mKGVsZW1lbnQpICE9IC0xKVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIFxuICAgIH1cbiAgICBcbn1cblxuaWYgKFwiY29udGFpbnNcIiBpbiBTdHJpbmcucHJvdG90eXBlID09IGZhbHNlKSB7XG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIFN0cmluZy5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgcmVzdWx0ID0gKHRoaXMuaW5kZXhPZihzdHJpbmcpICE9IC0xKVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIFxuICAgIH1cbiAgICBcbn1cblxuXG5cblxuXG5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBcbiAgICAvL2NvbnNvbGUubG9nKCdNZXNzYWdlIHJlY2VpdmVkIGZyb20gbWFpbiBzY3JpcHQnKTtcbiAgICB2YXIgd29ya2VyUmVzdWx0ID0gZmlsdGVyRGF0YShldmVudC5kYXRhLmZpbHRlcmluZ1N0cmluZywgZXZlbnQuZGF0YS5kYXRhLCBldmVudC5kYXRhLmV4Y2x1ZGVkRGF0YSlcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0LmlkZW50aWZpZXIgPSBldmVudC5kYXRhLmlkZW50aWZpZXJcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0Lmluc3RhbmNlSWRlbnRpZmllciA9IGV2ZW50LmRhdGEuaW5zdGFuY2VJZGVudGlmaWVyXG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHBvc3RNZXNzYWdlKHdvcmtlclJlc3VsdClcbiAgICBcbn1cblxuXG5cblxuXG5mdW5jdGlvbiBmaWx0ZXJEYXRhKGZpbHRlcmluZ1N0cmluZywgZGF0YSwgZXhjbHVkZWREYXRhKSB7XG4gICAgXG4gICAgdmFyIGZpbHRlcmVkRGF0YSA9IFtdXG4gICAgdmFyIGZpbHRlcmVkSW5kZXhlcyA9IFtdXG4gICAgXG4gICAgaWYgKGZpbHRlcmluZ1N0cmluZykge1xuICAgICAgICBcbiAgICAgICAgdmFyIGZpbHRlcmluZ1N0cmluZ1dvcmRzID0gW11cbiAgICAgICAgZmlsdGVyaW5nU3RyaW5nLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uICh3b3JkLCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgIGlmICh3b3JkKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVyaW5nU3RyaW5nV29yZHMucHVzaCh3b3JkLnRvTG93ZXJDYXNlKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGRhdGFTdHJpbmcsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgbG93ZXJjYXNlRGF0YVN0cmluZyA9IGRhdGFTdHJpbmcudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb29rIHRocm91Z2ggYWxsIHRoZSB3b3JkcyBpbiB0aGUgaW5wdXRcbiAgICAgICAgICAgIHZhciB3b3Jkc0ZvdW5kID0gW11cbiAgICAgICAgICAgIGZpbHRlcmluZ1N0cmluZ1dvcmRzLmZvckVhY2goZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgICAgICAgICAgICB3b3Jkc0ZvdW5kLnB1c2gobG93ZXJjYXNlRGF0YVN0cmluZy5jb250YWlucyh3b3JkKSAmJiAhZXhjbHVkZWREYXRhLmNvbnRhaW5zKGRhdGFTdHJpbmcpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gT25seSBzaG93IHRoZSBkYXRhU3RyaW5nIGlmIGl0IG1hdGNoZXMgYWxsIG9mIHRoZW1cbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGlmICh3b3Jkc0ZvdW5kLmNvbnRhaW5zKHRydWUpICYmICF3b3Jkc0ZvdW5kLmNvbnRhaW5zKGZhbHNlKSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFTdHJpbmcpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICB9XG4gICAgZWxzZSBpZiAoZXhjbHVkZWREYXRhLmxlbmd0aCkge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGZpbHRlcmVkRGF0YSA9IGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YVN0cmluZywgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChleGNsdWRlZERhdGEuaW5kZXhPZihkYXRhU3RyaW5nKSA9PSAtMSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFTdHJpbmcpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBcbiAgICAgICAgZmlsdGVyZWREYXRhID0gZGF0YVxuICAgICAgICBcbiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChzdHJpbmcsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaChpbmRleClcbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgXG4gICAgXG4gICAgcmV0dXJuIHsgXCJmaWx0ZXJlZERhdGFcIjogZmlsdGVyZWREYXRhLCBcImZpbHRlcmVkSW5kZXhlc1wiOiBmaWx0ZXJlZEluZGV4ZXMgfVxuICAgIFxuICAgIFxuICAgIFxufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIl0sCiAgIm1hcHBpbmdzIjogIkFBRUksYUFBYyxNQUFNLFlBR3BCLE1BQU0sVUFBVSxTQUFXLFNBQVVBLEVBQVMsQ0FFMUMsSUFBSUMsRUFBVSxLQUFLLFFBQVFELENBQU8sR0FBSyxHQUN2QyxPQUFPQyxDQUVYLEdBSUEsYUFBYyxPQUFPLFlBR3JCLE9BQU8sVUFBVSxTQUFXLFNBQVVDLEVBQVEsQ0FFMUMsSUFBSUQsRUFBVSxLQUFLLFFBQVFDLENBQU0sR0FBSyxHQUN0QyxPQUFPRCxDQUVYLEdBUUosVUFBWSxTQUFVRSxFQUFPLENBR3pCLElBQUlDLEVBQWVDLEVBQVdGLEVBQU0sS0FBSyxnQkFBaUJBLEVBQU0sS0FBSyxLQUFNQSxFQUFNLEtBQUssWUFBWSxFQUdsR0MsRUFBYSxXQUFhRCxFQUFNLEtBQUssV0FFckNDLEVBQWEsbUJBQXFCRCxFQUFNLEtBQUssbUJBRzdDLFlBQVlDLENBQVksQ0FFNUIsRUFNQSxTQUFTQyxFQUFXQyxFQUFpQkMsRUFBTUMsRUFBYyxDQUVyRCxJQUFJQyxFQUFlLENBQUMsRUFDaEJDLEVBQWtCLENBQUMsRUFFdkIsR0FBSUosRUFBaUIsQ0FFakIsSUFBSUssRUFBdUIsQ0FBQyxFQUM1QkwsRUFBZ0IsTUFBTSxHQUFHLEVBQUUsUUFBUSxTQUFVTSxFQUFNQyxFQUFPQyxFQUFPLENBQ3pERixHQUNBRCxFQUFxQixLQUFLQyxFQUFLLFlBQVksQ0FBQyxDQUVwRCxDQUFDLEVBRURMLEVBQUssUUFBUSxTQUFVUSxFQUFZRixFQUFPQyxFQUFPLENBRTdDLElBQUlFLEVBQXNCRCxFQUFXLFlBQVksRUFHN0NFLEVBQWEsQ0FBQyxFQUNsQk4sRUFBcUIsUUFBUSxTQUFVQyxFQUFNLENBQ3pDSyxFQUFXLEtBQUtELEVBQW9CLFNBQVNKLENBQUksR0FBSyxDQUFDSixFQUFhLFNBQVNPLENBQVUsQ0FBQyxDQUM1RixDQUFDLEVBSUdFLEVBQVcsU0FBUyxFQUFJLEdBQUssQ0FBQ0EsRUFBVyxTQUFTLEVBQUssSUFFdkRSLEVBQWEsS0FBS00sQ0FBVSxFQUM1QkwsRUFBZ0IsS0FBS0csQ0FBSyxFQUlsQyxDQUFDLENBSUwsTUFDU0wsRUFBYSxPQUdsQkMsRUFBZUYsRUFBSyxRQUFRLFNBQVVRLEVBQVlGLEVBQU9DLEVBQU8sQ0FFeEROLEVBQWEsUUFBUU8sQ0FBVSxHQUFLLEtBRXBDTixFQUFhLEtBQUtNLENBQVUsRUFDNUJMLEVBQWdCLEtBQUtHLENBQUssRUFJbEMsQ0FBQyxHQUtESixFQUFlRixFQUVmQSxFQUFLLFFBQVEsU0FBVUwsRUFBUVcsRUFBT0MsRUFBTyxDQUV6Q0osRUFBZ0IsS0FBS0csQ0FBSyxDQUU5QixDQUFDLEdBTUwsTUFBTyxDQUFFLGFBQWdCSixFQUFjLGdCQUFtQkMsQ0FBZ0IsQ0FJOUUiLAogICJuYW1lcyI6IFsiZWxlbWVudCIsICJyZXN1bHQiLCAic3RyaW5nIiwgImV2ZW50IiwgIndvcmtlclJlc3VsdCIsICJmaWx0ZXJEYXRhIiwgImZpbHRlcmluZ1N0cmluZyIsICJkYXRhIiwgImV4Y2x1ZGVkRGF0YSIsICJmaWx0ZXJlZERhdGEiLCAiZmlsdGVyZWRJbmRleGVzIiwgImZpbHRlcmluZ1N0cmluZ1dvcmRzIiwgIndvcmQiLCAiaW5kZXgiLCAiYXJyYXkiLCAiZGF0YVN0cmluZyIsICJsb3dlcmNhc2VEYXRhU3RyaW5nIiwgIndvcmRzRm91bmQiXQp9Cg==\\n\");\n}\n", "import { IS, IS_NOT, MAKE_ID, NO, UIObject, YES } from \"./UIObject\"\n// @ts-ignore\nimport UIStringFilterWebWorker from \"./UIStringFilterWebWorker.worker.js\"\n\n\nexport class UIStringFilter extends UIObject {\n    \n    \n    \n    \n    \n    static _sharedWebWorkerHolder = { webWorker: new UIStringFilterWebWorker() }\n    \n    static _instanceNumber = -1\n    \n    \n    _instanceNumber: number\n    \n    _isThreadClosed = NO\n    \n    private readonly _webWorkerHolder = UIStringFilter._sharedWebWorkerHolder\n    \n    \n    \n    constructor(useSeparateWebWorkerHolder = NO) {\n        \n        super()\n        \n        if (useSeparateWebWorkerHolder) {\n    \n            this._webWorkerHolder = {\n                webWorker: new UIStringFilterWebWorker()\n            }\n    \n        }\n        \n        UIStringFilter._instanceNumber = UIStringFilter._instanceNumber + 1\n        this._instanceNumber = UIStringFilter._instanceNumber\n        \n        if (IS_NOT(this._webWorkerHolder.webWorker.onmessage)) {\n            \n            this._webWorkerHolder.webWorker.onmessage = message => {\n    \n                this.isWorkerBusy = NO\n                this.postNextMessageIfNeeded()\n    \n                const key = \"\" + message.data.identifier + message.data.instanceIdentifier\n    \n                const completionFunction = this.completionFunctions[key]\n    \n                if (IS(completionFunction)) {\n        \n                    //console.log(\"Filtering took \" + (Date.now() - startTime) + \" ms\");\n        \n                    completionFunction(message.data.filteredData, message.data.filteredIndexes, message.data.identifier)\n        \n                }\n    \n                delete this.completionFunctions[key]\n    \n                var asd = 1\n                \n            }\n            \n        }\n    \n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    get instanceIdentifier() {\n        \n        return this._instanceNumber\n        \n    }\n    \n    \n    get completionFunctions() {\n    \n        const key = \"UICore_completionFunctions\"\n        var result: {\n        \n            [x: string]: (filteredData: string[], filteredIndexes: number[], identifier: any) => void;\n        \n        } = this._webWorkerHolder[key]\n        \n        if (IS_NOT(result)) {\n    \n            result = {}\n            this._webWorkerHolder[key] = result\n    \n        }\n    \n        return result\n        \n    }\n    \n    get messagesToPost() {\n    \n        const key = \"UICore_messagesToPost\"\n        var result: any[] = this._webWorkerHolder[key]\n    \n        if (IS_NOT(result)) {\n        \n            result = []\n            this._webWorkerHolder[key] = result\n        \n        }\n    \n        return result\n        \n    }\n    \n    \n    set isWorkerBusy(isWorkerBusy: boolean) {\n    \n        this._webWorkerHolder[\"UICore_isWorking\"] = isWorkerBusy\n        \n    }\n    \n    get isWorkerBusy() {\n    \n        return IS(this._webWorkerHolder[\"UICore_isWorking\"])\n        \n    }\n    \n    \n    \n    postNextMessageIfNeeded() {\n        \n        if (this.messagesToPost.length && IS_NOT(this.isWorkerBusy)) {\n    \n            this._webWorkerHolder.webWorker.postMessage(this.messagesToPost.firstElement)\n            this.messagesToPost.removeElementAtIndex(0)\n    \n            this.isWorkerBusy = YES\n    \n        }\n        \n    }\n    \n    \n    \n    \n    \n    filterData(\n        filteringString: string,\n        data: string[],\n        excludedData: string[],\n        identifier: any,\n        completion: (filteredData: string[], filteredIndexes: number[], identifier: any) => void\n    ) {\n        \n        \n        if (this._isThreadClosed) {\n            \n            return\n            \n        }\n        \n        //var startTime = Date.now();\n        \n        const instanceIdentifier = this.instanceIdentifier\n        \n        const key = \"\" + identifier + instanceIdentifier\n        \n        this.completionFunctions[key] = completion\n        \n        this.messagesToPost.push({\n    \n            \"filteringString\": filteringString,\n            \"data\": data,\n            \"excludedData\": excludedData,\n            \"identifier\": identifier,\n            \"instanceIdentifier\": instanceIdentifier\n    \n        })\n    \n        this.postNextMessageIfNeeded()\n        \n        \n    }\n    \n    \n    filteredData(\n        filteringString: string,\n        data: string[],\n        excludedData: string[] = [],\n        identifier: any = MAKE_ID()\n    ) {\n        \n        \n        const result: Promise<{\n            \n            filteredData: string[],\n            filteredIndexes: number[],\n            identifier: any\n            \n        }> = new Promise((resolve, reject) => {\n            \n            this.filterData(filteringString, data, excludedData, identifier,\n                (filteredData, filteredIndexes, filteredIdentifier) => {\n                    \n                    if (filteredIdentifier == identifier) {\n                        \n                        resolve({\n                            \n                            filteredData: filteredData,\n                            filteredIndexes: filteredIndexes,\n                            identifier: filteredIdentifier\n                            \n                        })\n                        \n                    }\n                    \n                    \n                }\n            )\n            \n            \n        })\n        \n        return result\n        \n        \n    }\n    \n    \n    \n    \n    \n    closeThread() {\n        \n        this._isThreadClosed = YES\n        \n        if (this._webWorkerHolder != UIStringFilter._sharedWebWorkerHolder) {\n    \n            this._webWorkerHolder.webWorker.terminate()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil, NO, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UIScrollView extends UIView {\n    \n    \n    _contentOffset: UIPoint = new UIPoint(0, 0)\n    _contentScale: number = 1\n    \n    containerView: UIView\n    \n    _pointerDown: boolean\n    \n    _scrollEnabled: boolean = YES\n    \n    _previousClientPoint: UIPoint\n    \n    _intrinsicContentFrame: UIRectangle\n    \n    constructor(elementID: string, viewHTMLElement?: HTMLElement) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this.containerView = new UIView(elementID + \"ContainerView\")\n        super.addSubview(this.containerView)\n        \n        \n        this.style.overflow = \"hidden\"\n        \n        this.pausesPointerEvents = NO //YES;\n        \n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerDown, function () {\n            \n            this._pointerDown = YES\n            \n        }.bind(this))\n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerUp, function () {\n            \n            this._pointerDown = NO\n            \n            this._previousClientPoint = null\n            \n            scrollStopped()\n            \n        }.bind(this))\n        \n        \n        function scrollStopped() {\n            \n            // Handle paging if needed\n            \n        }\n        \n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerMove, function (sender: UIScrollView, event: Event) {\n            \n            if (!(this._pointerDown && this._scrollEnabled && this._enabled)) {\n                \n                return\n                \n            }\n    \n            const currentClientPoint = new UIPoint(nil, nil)\n    \n            if ((window as any).MouseEvent && event instanceof MouseEvent) {\n                \n                currentClientPoint.x = (event as MouseEvent).clientX\n                currentClientPoint.y = (event as MouseEvent).clientY\n                \n            }\n            \n            if ((window as any).TouchEvent && event instanceof TouchEvent) {\n    \n                const touchEvent: TouchEvent = event\n    \n                if (touchEvent.touches.length != 1) {\n                    \n                    this._pointerDown = NO\n                    this._previousClientPoint = null\n                    \n                    scrollStopped()\n                    \n                    return\n                    \n                }\n                \n                currentClientPoint.x = touchEvent.touches[0].clientX\n                currentClientPoint.y = touchEvent.touches[0].clientY\n                \n            }\n            \n            if (!this._previousClientPoint) {\n                \n                this._previousClientPoint = currentClientPoint\n                \n                return\n                \n            }\n    \n            const changePoint = currentClientPoint.copy().subtract(this._previousClientPoint)\n    \n    \n            if (this.containerView.bounds.width <= this.bounds.width) {\n                changePoint.x = 0\n            }\n            if (0 < this.contentOffset.x + changePoint.x) {\n                changePoint.x = -this.contentOffset.x\n            }\n            if (this.contentOffset.x + changePoint.x < -this.bounds.width) {\n                changePoint.x = -this.bounds.width - this.contentOffset.x\n            }\n            \n            if (this.containerView.bounds.height <= this.bounds.height) {\n                changePoint.y = 0\n            }\n            if (0 < this.contentOffset.y + changePoint.y) {\n                changePoint.y = -this.contentOffset.y\n            }\n            if (this.contentOffset.y + changePoint.y < -this.bounds.height) {\n                changePoint.y = -this.bounds.height - this.contentOffset.y\n            }\n            \n            this.contentOffset = this.contentOffset.add(changePoint)\n            \n            this._previousClientPoint = currentClientPoint\n            \n        }.bind(this))\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    invalidateIntrinsicContentFrame() {\n        \n        this._intrinsicContentFrame = nil\n        \n    }\n    \n    \n    \n    \n    \n    get contentOffset() {\n        \n        return this._contentOffset\n        \n    }\n    \n    set contentOffset(offset: UIPoint) {\n        \n        this._contentOffset = offset\n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        // var intrinsicContentFrame = this._intrinsicContentFrame;\n        // if (!IS(intrinsicContentFrame)) {\n        //     intrinsicContentFrame = this.containerView.intrinsicContentSizeWithConstraints();   \n        // }\n        // intrinsicContentFrame.offsetByPoint(this.contentOffset);\n        // intrinsicContentFrame.height = this.containerView.viewHTMLElement.scrollHeight;\n        // intrinsicContentFrame.width = this.containerView.viewHTMLElement.scrollWidth;\n        // this.containerView.frame = intrinsicContentFrame;\n        \n        this.containerView.frame = this.containerView.bounds.offsetByPoint(this.contentOffset)\n        \n        \n        \n        \n    }\n    \n    \n    \n    // get _subviews() {\n    //     return super.subviews;\n    // }\n    \n    // set _subviews(subviews: UIView[]) {\n    //     super.subviews = subviews;\n    // }\n    \n    // get subviews() {\n    //     return this.containerView.subviews;\n    // }\n    \n    // set subviews(subviews: UIView[]) {\n    \n    //     this.containerView.subviews = subviews;\n    \n    //     this.invalidateIntrinsicContentFrame();\n    \n    \n    // }\n    \n    \n    hasSubview(view: UIView) {\n        return this.containerView.hasSubview(view)\n    }\n    \n    addSubview(view: UIView) {\n        \n        this.containerView.addSubview(view)\n        \n        this.invalidateIntrinsicContentFrame()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton } from \"./UIButton\"\nimport { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIScrollView } from \"./UIScrollView\"\nimport { UITimer } from \"./UITimer\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport class UISlideScrollerView extends UIView {\n    \n    \n    \n    _previousLayoutBounds: UIRectangle\n    _targetIndex: number = 0\n    pageIndicatorsView: UIView\n    _isAnimating: boolean = NO\n    _isAnimationOngoing: boolean = NO\n    _animationTimer: UITimer = nil\n    _scrollView: UIScrollView\n    _slideViews: UIView[] = []\n    \n    wrapAround: boolean = YES\n    \n    animationDuration: number = 0.35\n    animationDelay: number = 2\n    \n    _currentPageIndex: number = 0\n    \n    constructor(elementID: string, viewHTMLElement?: HTMLElement) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this._scrollView = new UIScrollView(elementID + \"ScrollView\")\n        \n        this.addSubview(this._scrollView)\n        \n        \n        this._scrollView._scrollEnabled = NO\n        \n        this._scrollView.addTargetForControlEvent(\n            UIView.controlEvent.PointerMove,\n            function (sender: UIView, event: Event) {\n                \n                if (event instanceof MouseEvent) {\n                    this._animationTimer.invalidate()\n                }\n                \n            }.bind(this)\n        )\n        \n        this._scrollView.addTargetForControlEvent(UIView.controlEvent.PointerLeave, function () {\n            \n            if (this._isAnimating && event instanceof MouseEvent) {\n                this.startAnimating()\n            }\n            \n        }.bind(this))\n        \n        // Touch events\n        this._scrollView.addTargetForControlEvent(UIView.controlEvent.PointerDown, function (sender, event) {\n            \n            if (event instanceof TouchEvent) {\n                this._animationTimer.invalidate()\n            }\n            \n        }.bind(this))\n        \n        this._scrollView.addTargetForControlEvents([\n            UIView.controlEvent.PointerUp, UIView.controlEvent.PointerCancel\n        ], function (sender, event) {\n            \n            if (event instanceof TouchEvent && this._isAnimating) {\n                \n                this.startAnimating()\n                \n            }\n            \n        }.bind(this))\n        \n        \n        // Page indicator\n        \n        this.pageIndicatorsView = new UIView(elementID + \"PageIndicatorsView\")\n        this.addSubview(this.pageIndicatorsView)\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    buttonForPageIndicatorWithIndex(index: number): UIButton {\n    \n        const result = new UIButton(this.viewHTMLElement.id + \"PageIndicatorButton\" + index)\n    \n        result.addTargetForControlEvents([\n            UIView.controlEvent.PointerUpInside, UIView.controlEvent.EnterUp\n        ], function (sender, event) {\n            \n            this.scrollToPageWithIndex(index, YES)\n            \n            if (this._isAnimating) {\n                \n                this.startAnimating()\n                \n            }\n            \n            \n            \n        }.bind(this))\n        \n        result.addTargetForControlEvent(UIView.controlEvent.PointerMove, function () {\n            \n            this._animationTimer.invalidate()\n            \n        }.bind(this))\n        \n        \n        result.updateContentForNormalState = function () {\n            \n            result.backgroundColor = UIColor.blueColor\n            result.titleLabel.textColor = UIColor.whiteColor\n            \n        }\n        \n        \n        result.frame = new UIRectangle(nil, nil, 20, 50)\n        \n        // result.style.height = \"20px\";\n        // result.style.width = \"50px\";\n        result.style.display = \"table-cell\"\n        result.style.position = \"relative\"\n        \n        \n        // var resultContent = new UIView(result.viewHTMLElement.id + \"Content\");\n        // resultContent.backgroundColor = UIColor.whiteColor;\n        // resultContent.centerYInContainer();\n        // resultContent.style.height = \"10px\";\n        // resultContent.style.height = \"100%\";\n        // resultContent.style.borderRadius = \"5px\";\n        \n        // result.addSubview(resultContent);\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    addSlideView(view: UIView) {\n        \n        this.slideViews.push(view)\n        \n        this.updateSlideViews()\n        \n    }\n    \n    set slideViews(views: UIView[]) {\n        \n        this._slideViews = views\n        \n        this.updateSlideViews()\n        \n    }\n    \n    get slideViews() {\n        return this._slideViews\n    }\n    \n    \n    \n    get currentPageIndex() {\n    \n        const result = this._currentPageIndex\n    \n        return result\n        \n    }\n    \n    set currentPageIndex(index: number) {\n        \n        this._currentPageIndex = index\n        \n        this._slideViews[index].willAppear()\n        \n        //this._scrollView.contentOffset.x = -this._slideViews[index].frame.min.x; //-this.bounds.width * index;\n        //this._scrollView.contentOffset.x = Math.round(this._scrollView.contentOffset.x);\n        \n        this._scrollView.contentOffset = this._scrollView.contentOffset.pointWithX(-this._slideViews[index].frame.min.x)\n        \n        \n        this.pageIndicatorsView.subviews.forEach(function (button: UIButton, index, array) {\n            \n            button.selected = NO\n            \n        });\n        \n        \n        \n        (this.pageIndicatorsView.subviews[index] as UIButton).selected = YES\n        \n        \n        \n    }\n    \n    \n    \n    scrollToPreviousPage(animated: boolean) {\n        \n        if (this.slideViews.length == 0) {\n            return\n        }\n    \n        var targetIndex = this.currentPageIndex\n    \n        if (this.wrapAround) {\n            targetIndex = (this.currentPageIndex - 1) % (this.slideViews.length)\n        }\n        else if (this.currentPageIndex - 1 < this.slideViews.length) {\n            targetIndex = this.currentPageIndex - 1\n        }\n        else {\n            return\n        }\n        \n        this.scrollToPageWithIndex(targetIndex, animated)\n        \n    }\n    \n    scrollToNextPage(animated: boolean) {\n        \n        if (this.slideViews.length == 0) {\n            return\n        }\n    \n        var targetIndex = this.currentPageIndex\n    \n        if (this.wrapAround) {\n            targetIndex = (this.currentPageIndex + 1) % (this.slideViews.length)\n        }\n        else if (this.currentPageIndex + 1 < this.slideViews.length) {\n            targetIndex = this.currentPageIndex + 1\n        }\n        else {\n            return\n        }\n        \n        this.scrollToPageWithIndex(targetIndex, animated)\n        \n    }\n    \n    \n    \n    scrollToPageWithIndex(targetIndex: number, animated: boolean = YES) {\n        \n        this._targetIndex = targetIndex\n        \n        // this._slideViews[this.currentPageIndex]._shouldLayout = NO;\n        // this._slideViews[this._targetIndex]._shouldLayout = YES;\n        \n        //this._slideViews[this._targetIndex].hidden = NO;\n        \n        this.willScrollToPageWithIndex(targetIndex)\n        \n        this._isAnimationOngoing = YES\n        \n        //var previousView = this._slideViews[this.currentPageIndex];\n        \n        if (animated) {\n            \n            \n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this._scrollView.containerView,\n                this.animationDuration,\n                0,\n                undefined,\n                function (this: UISlideScrollerView) {\n                    \n                    \n                    this.currentPageIndex = targetIndex\n                    \n                    \n                    \n                }.bind(this),\n                function (this: UISlideScrollerView) {\n                    \n                    this.didScrollToPageWithIndex(targetIndex)\n                    \n                    this._isAnimationOngoing = NO\n                    \n                    //previousView.hidden = YES;\n                    \n                }.bind(this)\n            )\n            \n        }\n        else {\n            \n            \n            this.currentPageIndex = targetIndex\n            this.didScrollToPageWithIndex(targetIndex)\n            \n            //previousView.hidden = YES;\n            \n        }\n        \n    }\n    \n    \n    \n    willScrollToPageWithIndex(index: number) {\n    \n        const targetView = this.slideViews[index]\n    \n        if (IS(targetView) && (targetView as any).willAppear && (targetView as any).willAppear instanceof Function) {\n            \n            (targetView as any).willAppear()\n            \n        }\n        \n    }\n    \n    didScrollToPageWithIndex(index: number) {\n        \n        \n        \n    }\n    \n    \n    \n    startAnimating() {\n        \n        this._isAnimating = YES\n        \n        this._animationTimer.invalidate()\n        \n        this._animationTimer = new UITimer(this.animationDelay + this.animationDuration, YES, function () {\n            \n            this.scrollToNextPage(YES)\n            \n        }.bind(this))\n        \n    }\n    \n    stopAnimating() {\n        \n        this._isAnimating = NO\n        this._animationTimer.invalidate()\n        \n    }\n    \n    \n    \n    \n    \n    updateSlideViews() {\n        \n        this._scrollView.containerView.subviews.slice().forEach(function (subview, index, array) {\n            \n            subview.removeFromSuperview()\n            \n        })\n        \n        this.pageIndicatorsView.subviews.slice().forEach(function (subview, index, array) {\n            \n            subview.removeFromSuperview()\n            \n        })\n        \n        this._slideViews.forEach(function (view, index, array) {\n            \n            this._scrollView.addSubview(view)\n            \n            this.pageIndicatorsView.addSubview(this.buttonForPageIndicatorWithIndex(index))\n            \n        }.bind(this))\n        \n    }\n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICore.broadcastEventName.WindowDidResize) {\n            \n            this.currentPageIndex = this.currentPageIndex\n            \n            \n        }\n        \n        \n    }\n    \n    \n    set frame(frame: UIRectangle) {\n        \n        super.frame = frame\n        \n        this.currentPageIndex = this.currentPageIndex\n        \n    }\n    \n    get frame() {\n        \n        return super.frame\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        if (this.bounds.isEqualTo(this._previousLayoutBounds)) {\n            return\n        }\n    \n        const bounds = this.bounds\n    \n        this._previousLayoutBounds = bounds\n        \n        this._scrollView.frame = bounds\n        \n        \n        \n        this._scrollView.containerView.frame = bounds.rectangleWithWidth(bounds.width *\n            this.slideViews.length).performFunctionWithSelf(function (this: UISlideScrollerView, self: UIRectangle) {\n            \n            self.offsetByPoint(this._scrollView.contentOffset)\n            \n            return self\n            \n        }.bind(this))\n        \n        this._slideViews.forEach(function (view, index, array) {\n            \n            view.frame = bounds.rectangleWithX((this.bounds.width + 1) * index)\n            \n        }.bind(this))\n        \n        \n        this.layoutPageIndicators()\n        \n        \n    }\n    \n    \n    layoutPageIndicators() {\n        \n        this.pageIndicatorsView.centerXInContainer()\n        this.pageIndicatorsView.style.bottom = \"20px\"\n        this.pageIndicatorsView.style.height = \"20px\"\n        this.pageIndicatorsView.style.display = \"table-row\"\n        \n    }\n    \n    \n    \n    \n    removeFromSuperview() {\n        \n        \n        super.removeFromSuperview()\n        \n        this.stopAnimating()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIBaseButton } from \"./UIBaseButton\"\nimport { UIButtonColorSpecifier } from \"./UIButton\"\nimport { UICore } from \"./UICore\"\nimport { nil, NO } from \"./UIObject\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UILink extends UIBaseButton {\n    \n    private _colors: UIButtonColorSpecifier\n    \n    \n    constructor(elementID: string, initViewData = nil) {\n        \n        super(elementID, \"a\", initViewData)\n        \n        this.stopsPointerEventPropagation = NO\n        this.pausesPointerEvents = NO\n        \n    }\n    \n    \n    initView(elementID, viewHTMLElement, initViewData: { titleType: string }) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        this.class.superclass = UIBaseButton\n        \n        // Instance variables\n        \n        \n        //this.style.position = \"relative\"\n        \n        \n        viewHTMLElement.onclick = this.blur.bind(this)\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get colors(): UIButtonColorSpecifier {\n        return this._colors\n    }\n    \n    set colors(value: UIButtonColorSpecifier) {\n        this._colors = value\n    }\n    \n    \n    \n    \n    \n    get viewHTMLElement() {\n        \n        // @ts-ignore\n        return super.viewHTMLElement as HTMLLinkElement\n        \n    }\n    \n    set text(text: string) {\n        \n        this.viewHTMLElement.textContent = text\n        \n    }\n    \n    get text() {\n        \n        return this.viewHTMLElement.textContent\n        \n    }\n    \n    \n    set target(target: string) {\n        \n        this.viewHTMLElement.setAttribute(\"href\", target)\n        \n    }\n    \n    get target() {\n    \n        const result = this.viewHTMLElement.getAttribute(\"href\")\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    set targetRouteForCurrentState(targetRouteForCurrentState: () => (UIRoute | string)) {\n        \n        this._targetRouteForCurrentState = targetRouteForCurrentState\n        \n        this.updateTarget()\n        \n    }\n    \n    get targetRouteForCurrentState() {\n        \n        return this._targetRouteForCurrentState\n        \n    }\n    \n    \n    _targetRouteForCurrentState() {\n    \n        const result = UIRoute.currentRoute.routeByRemovingComponentsOtherThanOnesNamed([\"settings\"]) as (UIRoute | string)\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICore.broadcastEventName.RouteDidChange) {\n            \n            this.updateTarget()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    wasAddedToViewTree() {\n        \n        super.wasAddedToViewTree()\n        \n        this.updateTarget()\n        \n        \n    }\n    \n    \n    \n    \n    \n    updateTarget() {\n        \n        const route = this.targetRouteForCurrentState()\n        \n        if (route instanceof UIRoute) {\n            \n            this.target = route.linkRepresentation\n            \n            return\n            \n        }\n        \n        this.target = route\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton, UIButtonColorSpecifier } from \"./UIButton\"\nimport { UILink } from \"./UILink\"\n\n\n\n\nexport class UILinkButton extends UILink {\n    \n    \n    button: UIButton\n    \n    //link = new UILink(this.elementID + \"Link\");\n    \n    \n    \n    \n    \n    constructor(elementID: string, elementType?: string, titleType?: string) {\n        \n        super(elementID, { \"elementType\": elementType, \"titleType\": titleType })\n        \n        this.button.addTargetForControlEvents([\n            UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n        ], function (this: UILinkButton, sender: UIButton, event: Event) {\n    \n            window.location = this.target as any\n            \n        }.bind(this))\n        \n        // this.link.hidden = YES;\n        \n        // this.addSubview(this.link);\n        \n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID, viewHTMLElement, initViewData: { titleType: string, elementType: string }) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        this.class.superclass = UILink\n        \n        // Instance variables\n        \n        this.button = new UIButton(this.elementID + \"Button\", initViewData.elementType, initViewData.titleType)\n        \n        this.addSubview(this.button)\n        \n        this.style.position = \"absolute\"\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get titleLabel() {\n        \n        return this.button.titleLabel\n        \n    }\n    \n    get imageView() {\n        \n        return this.button.imageView\n        \n    }\n    \n    \n    set colors(colors: UIButtonColorSpecifier) {\n        \n        this.button.colors = colors\n        \n    }\n    \n    \n    get colors() {\n        \n        return this.button.colors\n        \n    }\n    \n    \n    \n    \n    \n    get viewHTMLElement() {\n        \n        // @ts-ignore\n        return super.viewHTMLElement as HTMLLinkElement\n        \n    }\n    \n    \n    set target(target: string) {\n        \n        this.viewHTMLElement.setAttribute(\"href\", target)\n        \n    }\n    \n    get target() {\n    \n        const result = this.viewHTMLElement.getAttribute(\"href\")\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n        this.button.frame = bounds\n        \n        this.button.layoutSubviews()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIObject } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\n\n\nexport class UILayoutGrid extends UIObject {\n    \n    \n    \n    _frame: UIRectangle\n    \n    _subframes: UILayoutGrid[] = []\n    \n    \n    constructor(frame: UIRectangle) {\n        \n        super()\n        \n        this._frame = frame\n        \n    }\n    \n    \n    \n    \n    \n    splitXInto(numberOfFrames: number) {\n        \n        \n        \n        if (this._subframes.length == 0) {\n            \n            \n            \n            for (var i = 0; i < numberOfFrames; i++) {\n    \n                const asd = 1\n    \n    \n    \n            }\n            \n        }\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import inlineWorker from '__inline-worker'\nexport default function Worker() {\n  return inlineWorker(\"\\\"contains\\\"in Array.prototype||(Array.prototype.contains=function(a){var r=this.indexOf(a)!=-1;return r});\\\"contains\\\"in String.prototype||(String.prototype.contains=function(a){var r=this.indexOf(a)!=-1;return r});onmessage=function(a){var r=y(a.data.filteringString,a.data.data,a.data.excludedData,a.data.dataKeyPath);r.identifier=a.data.identifier,r.instanceIdentifier=a.data.instanceIdentifier,postMessage(r)};function y(a,r,u,d){function l(t,n){var o=t.split(\\\".\\\"),i=n;return o.forEach(function(c,f,p){i=i[c]}),i}var e=[],s=[];if(a){var h=[];a.split(\\\" \\\").forEach(function(t,n,o){t&&h.push(t.toLowerCase())}),r.forEach(function(t,n,o){var i=l(d,t),c=i.toLowerCase(),f=[];h.forEach(function(p){f.push(c.contains(p)&&!u.contains(i))}),f.contains(!0)&&!f.contains(!1)&&(e.push(t),s.push(n))})}else u.length?e=r.forEach(function(t,n,o){u.indexOf(t)==-1&&(e.push(t),s.push(n))}):(e=r,r.forEach(function(t,n,o){s.push(n)}));return{filteredData:e,filteredIndexes:s}}\\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdWljb3JlLXRzL3NjcmlwdHMvVUlLZXlWYWx1ZVN0cmluZ0ZpbHRlcldlYldvcmtlci53b3JrZXIudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8vIEB0cy1jaGVja1xuXG5pZiAoXCJjb250YWluc1wiIGluIEFycmF5LnByb3RvdHlwZSA9PSBmYWxzZSkge1xuICAgIFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBBcnJheS5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICBcbiAgICAgICAgdmFyIHJlc3VsdCA9ICh0aGlzLmluZGV4T2YoZWxlbWVudCkgIT0gLTEpXG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgXG4gICAgfVxuICAgIFxufVxuXG5pZiAoXCJjb250YWluc1wiIGluIFN0cmluZy5wcm90b3R5cGUgPT0gZmFsc2UpIHtcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgU3RyaW5nLnByb3RvdHlwZS5jb250YWlucyA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgICAgICAgXG4gICAgICAgIHZhciByZXN1bHQgPSAodGhpcy5pbmRleE9mKHN0cmluZykgIT0gLTEpXG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgXG4gICAgfVxuICAgIFxufVxuXG5cblxuXG5cbm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIFxuICAgIC8vY29uc29sZS5sb2coJ01lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBtYWluIHNjcmlwdCcpO1xuICAgIHZhciB3b3JrZXJSZXN1bHQgPSBmaWx0ZXJLZXlWYWx1ZVBhdGhEYXRhKFxuICAgICAgICBldmVudC5kYXRhLmZpbHRlcmluZ1N0cmluZyxcbiAgICAgICAgZXZlbnQuZGF0YS5kYXRhLFxuICAgICAgICBldmVudC5kYXRhLmV4Y2x1ZGVkRGF0YSxcbiAgICAgICAgZXZlbnQuZGF0YS5kYXRhS2V5UGF0aFxuICAgIClcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0LmlkZW50aWZpZXIgPSBldmVudC5kYXRhLmlkZW50aWZpZXJcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0Lmluc3RhbmNlSWRlbnRpZmllciA9IGV2ZW50LmRhdGEuaW5zdGFuY2VJZGVudGlmaWVyXG4gICAgXG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHBvc3RNZXNzYWdlKHdvcmtlclJlc3VsdClcbiAgICBcbn1cblxuXG5cblxuXG5mdW5jdGlvbiBmaWx0ZXJLZXlWYWx1ZVBhdGhEYXRhKGZpbHRlcmluZ1N0cmluZywgZGF0YSwgZXhjbHVkZWREYXRhLCBkYXRhS2V5UGF0aCkge1xuICAgIFxuICAgIGZ1bmN0aW9uIHZhbHVlRm9yS2V5UGF0aChrZXlQYXRoLCBvYmplY3QpIHtcbiAgICAgICAgXG4gICAgICAgIHZhciBrZXlzID0ga2V5UGF0aC5zcGxpdChcIi5cIilcbiAgICAgICAgdmFyIGN1cnJlbnRPYmplY3QgPSBvYmplY3RcbiAgICAgICAgXG4gICAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5LCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgIGN1cnJlbnRPYmplY3QgPSBjdXJyZW50T2JqZWN0W2tleV1cbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBjdXJyZW50T2JqZWN0XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICB2YXIgZmlsdGVyZWREYXRhID0gW11cbiAgICB2YXIgZmlsdGVyZWRJbmRleGVzID0gW11cbiAgICBcbiAgICBpZiAoZmlsdGVyaW5nU3RyaW5nKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgZmlsdGVyaW5nU3RyaW5nV29yZHMgPSBbXVxuICAgICAgICBmaWx0ZXJpbmdTdHJpbmcuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24gKHdvcmQsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgaWYgKHdvcmQpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJpbmdTdHJpbmdXb3Jkcy5wdXNoKHdvcmQudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YU9iamVjdCwgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBkYXRhU3RyaW5nID0gdmFsdWVGb3JLZXlQYXRoKGRhdGFLZXlQYXRoLCBkYXRhT2JqZWN0KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgbG93ZXJjYXNlRGF0YVN0cmluZyA9IGRhdGFTdHJpbmcudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb29rIHRocm91Z2ggYWxsIHRoZSB3b3JkcyBpbiB0aGUgaW5wdXRcbiAgICAgICAgICAgIHZhciB3b3Jkc0ZvdW5kID0gW11cbiAgICAgICAgICAgIGZpbHRlcmluZ1N0cmluZ1dvcmRzLmZvckVhY2goZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgICAgICAgICAgICB3b3Jkc0ZvdW5kLnB1c2gobG93ZXJjYXNlRGF0YVN0cmluZy5jb250YWlucyh3b3JkKSAmJiAhZXhjbHVkZWREYXRhLmNvbnRhaW5zKGRhdGFTdHJpbmcpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gT25seSBzaG93IHRoZSBkYXRhU3RyaW5nIGlmIGl0IG1hdGNoZXMgYWxsIG9mIHRoZW1cbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGlmICh3b3Jkc0ZvdW5kLmNvbnRhaW5zKHRydWUpICYmICF3b3Jkc0ZvdW5kLmNvbnRhaW5zKGZhbHNlKSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFPYmplY3QpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICB9XG4gICAgZWxzZSBpZiAoZXhjbHVkZWREYXRhLmxlbmd0aCkge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGZpbHRlcmVkRGF0YSA9IGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YU9iamVjdCwgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChleGNsdWRlZERhdGEuaW5kZXhPZihkYXRhT2JqZWN0KSA9PSAtMSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFPYmplY3QpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBcbiAgICAgICAgZmlsdGVyZWREYXRhID0gZGF0YVxuICAgICAgICBcbiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChvYmplY3QsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaChpbmRleClcbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgXG4gICAgXG4gICAgcmV0dXJuIHsgXCJmaWx0ZXJlZERhdGFcIjogZmlsdGVyZWREYXRhLCBcImZpbHRlcmVkSW5kZXhlc1wiOiBmaWx0ZXJlZEluZGV4ZXMgfVxuICAgIFxuICAgIFxuICAgIFxufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIl0sCiAgIm1hcHBpbmdzIjogIkFBRUksYUFBYyxNQUFNLFlBR3BCLE1BQU0sVUFBVSxTQUFXLFNBQVVBLEVBQVMsQ0FFMUMsSUFBSUMsRUFBVSxLQUFLLFFBQVFELENBQU8sR0FBSyxHQUN2QyxPQUFPQyxDQUVYLEdBSUEsYUFBYyxPQUFPLFlBR3JCLE9BQU8sVUFBVSxTQUFXLFNBQVVDLEVBQVEsQ0FFMUMsSUFBSUQsRUFBVSxLQUFLLFFBQVFDLENBQU0sR0FBSyxHQUN0QyxPQUFPRCxDQUVYLEdBUUosVUFBWSxTQUFVRSxFQUFPLENBR3pCLElBQUlDLEVBQWVDLEVBQ2ZGLEVBQU0sS0FBSyxnQkFDWEEsRUFBTSxLQUFLLEtBQ1hBLEVBQU0sS0FBSyxhQUNYQSxFQUFNLEtBQUssV0FDZixFQUdBQyxFQUFhLFdBQWFELEVBQU0sS0FBSyxXQUVyQ0MsRUFBYSxtQkFBcUJELEVBQU0sS0FBSyxtQkFJN0MsWUFBWUMsQ0FBWSxDQUU1QixFQU1BLFNBQVNDLEVBQXVCQyxFQUFpQkMsRUFBTUMsRUFBY0MsRUFBYSxDQUU5RSxTQUFTQyxFQUFnQkMsRUFBU0MsRUFBUSxDQUV0QyxJQUFJQyxFQUFPRixFQUFRLE1BQU0sR0FBRyxFQUN4QkcsRUFBZ0JGLEVBRXBCLE9BQUFDLEVBQUssUUFBUSxTQUFVRSxFQUFLQyxFQUFPQyxFQUFPLENBQ3RDSCxFQUFnQkEsRUFBY0MsRUFDbEMsQ0FBQyxFQUVNRCxDQUVYLENBRUEsSUFBSUksRUFBZSxDQUFDLEVBQ2hCQyxFQUFrQixDQUFDLEVBRXZCLEdBQUliLEVBQWlCLENBRWpCLElBQUljLEVBQXVCLENBQUMsRUFDNUJkLEVBQWdCLE1BQU0sR0FBRyxFQUFFLFFBQVEsU0FBVWUsRUFBTUwsRUFBT0MsRUFBTyxDQUN6REksR0FDQUQsRUFBcUIsS0FBS0MsRUFBSyxZQUFZLENBQUMsQ0FFcEQsQ0FBQyxFQUVEZCxFQUFLLFFBQVEsU0FBVWUsRUFBWU4sRUFBT0MsRUFBTyxDQUU3QyxJQUFJTSxFQUFhYixFQUFnQkQsRUFBYWEsQ0FBVSxFQUVwREUsRUFBc0JELEVBQVcsWUFBWSxFQUc3Q0UsRUFBYSxDQUFDLEVBQ2xCTCxFQUFxQixRQUFRLFNBQVVDLEVBQU0sQ0FDekNJLEVBQVcsS0FBS0QsRUFBb0IsU0FBU0gsQ0FBSSxHQUFLLENBQUNiLEVBQWEsU0FBU2UsQ0FBVSxDQUFDLENBQzVGLENBQUMsRUFJR0UsRUFBVyxTQUFTLEVBQUksR0FBSyxDQUFDQSxFQUFXLFNBQVMsRUFBSyxJQUV2RFAsRUFBYSxLQUFLSSxDQUFVLEVBQzVCSCxFQUFnQixLQUFLSCxDQUFLLEVBSWxDLENBQUMsQ0FJTCxNQUNTUixFQUFhLE9BR2xCVSxFQUFlWCxFQUFLLFFBQVEsU0FBVWUsRUFBWU4sRUFBT0MsRUFBTyxDQUV4RFQsRUFBYSxRQUFRYyxDQUFVLEdBQUssS0FFcENKLEVBQWEsS0FBS0ksQ0FBVSxFQUM1QkgsRUFBZ0IsS0FBS0gsQ0FBSyxFQUlsQyxDQUFDLEdBS0RFLEVBQWVYLEVBRWZBLEVBQUssUUFBUSxTQUFVSyxFQUFRSSxFQUFPQyxFQUFPLENBRXpDRSxFQUFnQixLQUFLSCxDQUFLLENBRTlCLENBQUMsR0FNTCxNQUFPLENBQUUsYUFBZ0JFLEVBQWMsZ0JBQW1CQyxDQUFnQixDQUk5RSIsCiAgIm5hbWVzIjogWyJlbGVtZW50IiwgInJlc3VsdCIsICJzdHJpbmciLCAiZXZlbnQiLCAid29ya2VyUmVzdWx0IiwgImZpbHRlcktleVZhbHVlUGF0aERhdGEiLCAiZmlsdGVyaW5nU3RyaW5nIiwgImRhdGEiLCAiZXhjbHVkZWREYXRhIiwgImRhdGFLZXlQYXRoIiwgInZhbHVlRm9yS2V5UGF0aCIsICJrZXlQYXRoIiwgIm9iamVjdCIsICJrZXlzIiwgImN1cnJlbnRPYmplY3QiLCAia2V5IiwgImluZGV4IiwgImFycmF5IiwgImZpbHRlcmVkRGF0YSIsICJmaWx0ZXJlZEluZGV4ZXMiLCAiZmlsdGVyaW5nU3RyaW5nV29yZHMiLCAid29yZCIsICJkYXRhT2JqZWN0IiwgImRhdGFTdHJpbmciLCAibG93ZXJjYXNlRGF0YVN0cmluZyIsICJ3b3Jkc0ZvdW5kIl0KfQo=\\n\");\n}\n", "import { IS, IS_NOT, NO, UIObject, YES } from \"./UIObject\"\n// @ts-ignore\nimport UIKeyValueStringFilterWebWorker from \"./UIKeyValueStringFilterWebWorker.worker.js\"\n\n\n\n\n\nexport class UIKeyValueStringFilter extends UIObject {\n    \n    \n    static _sharedWebWorkerHolder = { webWorker: new UIKeyValueStringFilterWebWorker() }\n    \n    static _instanceNumber = -1\n    \n    \n    _instanceNumber: number\n    \n    _isThreadClosed = NO\n    \n    private _webWorkerHolder = UIKeyValueStringFilter._sharedWebWorkerHolder\n    \n    constructor(useSeparateWebWorkerHolder = NO) {\n        \n        \n        super()\n        \n        if (useSeparateWebWorkerHolder) {\n    \n            this._webWorkerHolder = { webWorker: new UIKeyValueStringFilterWebWorker() }\n            \n        }\n        \n        UIKeyValueStringFilter._instanceNumber = UIKeyValueStringFilter._instanceNumber + 1\n        this._instanceNumber = UIKeyValueStringFilter._instanceNumber\n        \n        if (IS_NOT(this._webWorkerHolder.webWorker.onmessage)) {\n            \n            this._webWorkerHolder.webWorker.onmessage = message => {\n                \n                this.isWorkerBusy = NO\n                this.postNextMessageIfNeeded()\n                \n                const key = \"\" + message.data.identifier + message.data.instanceIdentifier\n                \n                const completionFunction = this.completionFunctions[key]\n                \n                if (IS(completionFunction)) {\n                    \n                    //console.log(\"Filtering took \" + (Date.now() - startTime) + \" ms\");\n                    \n                    completionFunction(message.data.filteredData, message.data.filteredIndexes, message.data.identifier)\n                    \n                }\n                \n                delete this.completionFunctions[key]\n                \n                var asd = 1\n                \n            }\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get instanceIdentifier() {\n        \n        return this._instanceNumber\n        \n    }\n    \n    \n    get completionFunctions() {\n        \n        const key = \"UICore_completionFunctions\"\n        var result: {\n            \n            [x: string]: (filteredData: string[], filteredIndexes: number[], identifier: any) => void;\n            \n        } = this._webWorkerHolder[key]\n        \n        if (IS_NOT(result)) {\n            \n            result = {}\n            this._webWorkerHolder[key] = result\n            \n        }\n        \n        return result\n        \n    }\n    \n    get messagesToPost() {\n        \n        const key = \"UICore_messagesToPost\"\n        var result: any[] = this._webWorkerHolder[key]\n        \n        if (IS_NOT(result)) {\n            \n            result = []\n            this._webWorkerHolder[key] = result\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    set isWorkerBusy(isWorkerBusy: boolean) {\n        \n        this._webWorkerHolder[\"UICore_isWorking\"] = isWorkerBusy\n        \n    }\n    \n    get isWorkerBusy() {\n        \n        return IS(this._webWorkerHolder[\"UICore_isWorking\"])\n        \n    }\n    \n    \n    postNextMessageIfNeeded() {\n        \n        if (this.messagesToPost.length && IS_NOT(this.isWorkerBusy)) {\n            \n            this._webWorkerHolder.webWorker.postMessage(this.messagesToPost.firstElement)\n            this.messagesToPost.removeElementAtIndex(0)\n            \n            this.isWorkerBusy = YES\n            \n        }\n        \n    }\n    \n    \n    \n    \n    filterData(\n        filteringString: string,\n        data: any[],\n        excludedData: string[],\n        dataKeyPath: string,\n        identifier: any,\n        completion: (filteredData: string[], filteredIndexes: number[], identifier: any) => void\n    ) {\n        \n        \n        if (this._isThreadClosed) {\n            \n            return\n            \n        }\n        \n        \n        \n        const instanceIdentifier = this.instanceIdentifier\n        \n        const key = \"\" + identifier + instanceIdentifier\n        \n        this.completionFunctions[key] = completion\n        \n        \n        try {\n            \n            this.messagesToPost.push({\n                \n                \"filteringString\": filteringString,\n                \"data\": data,\n                \"excludedData\": excludedData,\n                \"dataKeyPath\": dataKeyPath,\n                \"identifier\": identifier,\n                \"instanceIdentifier\": instanceIdentifier\n                \n            })\n            \n            this.postNextMessageIfNeeded()\n            \n        } catch (exception) {\n            \n            completion([], [], identifier)\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    closeThread() {\n        \n        this._isThreadClosed = YES\n        \n        if (this._webWorkerHolder != UIKeyValueStringFilter._sharedWebWorkerHolder) {\n            \n            this._webWorkerHolder.webWorker.terminate()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import inlineWorker from '__inline-worker'\nexport default function Worker() {\n  return inlineWorker(\"onmessage=function(e){var a=g(e.data.data,e.data.sortingInstructions);a.identifier=e.data.identifier,a.instanceIdentifier=e.data.instanceIdentifier,postMessage(a)};function v(e,a){for(var i=e.split(\\\".\\\"),r=a,n=0;n<i.length;n++){var u=i[n];if(u.substring(0,2)==\\\"[]\\\"){r=r[u.substring(2)];var t=i.slice(n+1).join(\\\".\\\"),o=r;r=o.map(function(d,s,f){var c=v(t,d);return c});break}r=(r||{})[u]}return r}function l(e,a,i){if(i.length==0)return 0;var r=i[0],n=1;r.direction==\\\"descending\\\"&&(n=-1);var u=e[r.keyPath],t=a[r.keyPath];if(u<t)return-1*n;if(u>t)return 1*n;if(i.length>1){var o=i.slice(1);return l(e,a,o)}return 0}function g(e,a){var i=e.map(function(t,o,d){var s={_UIKeyValueStringSorterWebWorkerSortingObjectIndex:o};return a.forEach(function(f,c,y){s[f.keyPath]=JSON.stringify(v(f.keyPath,t)||{}).toLowerCase()}),s}),r=i.sort(function(t,o){return l(t,o,a)}),n=r.map(function(t,o,d){var s=t._UIKeyValueStringSorterWebWorkerSortingObjectIndex;return s}),u={sortedData:n.map(function(t,o,d){return e[t]}),sortedIndexes:n};return u}\\n//# sourceMappingURL=data:application/json;base64,\\n\");\n}\n", "import { IS, IS_NOT, MAKE_ID, NO, UIObject, YES } from \"./UIObject\"\n// @ts-ignore\nimport UIKeyValueStringSorterWebWorker from \"./UIKeyValueStringSorterWebWorker.worker.js\"\n\n\nexport interface UIKeyValueStringSorterSortingInstruction {\n    \n    keyPath: string;\n    \n    dataType: string;\n    \n    direction: string;\n    \n    \n}\n\n\n\n\n\nexport class UIKeyValueStringSorter extends UIObject {\n    \n    \n    static _sharedWebWorkerHolder = { webWorker: new UIKeyValueStringSorterWebWorker() }\n    \n    static _instanceNumber = -1\n    \n    \n    _instanceNumber: number\n    \n    _isThreadClosed = NO\n    \n    private _webWorkerHolder = UIKeyValueStringSorter._sharedWebWorkerHolder\n    \n    \n    constructor(useSeparateWebWorkerHolder = NO) {\n        \n        \n        super()\n        \n        if (useSeparateWebWorkerHolder) {\n    \n            this._webWorkerHolder = { webWorker: new UIKeyValueStringSorterWebWorker() }\n            \n        }\n        \n        UIKeyValueStringSorter._instanceNumber = UIKeyValueStringSorter._instanceNumber + 1\n        this._instanceNumber = UIKeyValueStringSorter._instanceNumber\n        \n        if (IS_NOT(this._webWorkerHolder.webWorker.onmessage)) {\n            \n            this._webWorkerHolder.webWorker.onmessage = message => {\n    \n                this.isWorkerBusy = NO;\n                this.postNextMessageIfNeeded();\n                \n                const key = \"\" + message.data.identifier + message.data.instanceIdentifier\n        \n                const completionFunction = this.completionFunctions[key]\n        \n                if (IS(completionFunction)) {\n            \n                    //console.log(\"Filtering took \" + (Date.now() - startTime) + \" ms\");\n            \n                    completionFunction(message.data.sortedData, message.data.sortedIndexes, message.data.identifier)\n            \n                }\n                \n                delete this.completionFunctions[key];\n                \n                var asd = 1;\n                \n            }\n            \n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get instanceIdentifier() {\n        \n        return this._instanceNumber\n        \n    }\n    \n    \n    \n    \n    get completionFunctions() {\n        \n        const key = \"UICore_completionFunctions\";\n        var result: {\n        \n            [x: string]: (sortedData: any[], sortedIndexes: number[], identifier: any) => void\n            \n        } = this._webWorkerHolder[key];\n        \n        if (IS_NOT(result)) {\n            \n            result = {};\n            this._webWorkerHolder[key] = result;\n            \n        }\n        \n        return result;\n        \n    }\n    \n    get messagesToPost() {\n        \n        const key = \"UICore_messagesToPost\";\n        var result: any[] = this._webWorkerHolder[key];\n        \n        if (IS_NOT(result)) {\n            \n            result = [];\n            this._webWorkerHolder[key] = result;\n            \n        }\n        \n        return result;\n        \n    }\n    \n    \n    set isWorkerBusy(isWorkerBusy: boolean) {\n        \n        this._webWorkerHolder[\"UICore_isWorking\"] = isWorkerBusy;\n        \n    }\n    \n    get isWorkerBusy() {\n        \n        return IS(this._webWorkerHolder[\"UICore_isWorking\"]);\n        \n    }\n    \n    \n    postNextMessageIfNeeded() {\n        \n        if (this.messagesToPost.length && IS_NOT(this.isWorkerBusy)) {\n            \n            this._webWorkerHolder.webWorker.postMessage(this.messagesToPost.firstElement);\n            this.messagesToPost.removeElementAtIndex(0);\n            \n            this.isWorkerBusy = YES;\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    static dataType = {\n        \n        \"string\": \"string\"\n        \n    }\n    \n    \n    static direction = {\n        \n        \"descending\": \"descending\",\n        \"ascending\": \"ascending\"\n        \n    }\n    \n    \n    \n    \n    \n    sortData<T>(\n        data: T[],\n        sortingInstructions: UIKeyValueStringSorterSortingInstruction[],\n        identifier: any,\n        completion: (sortedData: T[], sortedIndexes: number[], identifier: any) => void\n    ) {\n        \n        \n        if (this._isThreadClosed) {\n            \n            return\n            \n        }\n    \n        \n        const instanceIdentifier = this.instanceIdentifier\n        \n        const key = \"\" + identifier + instanceIdentifier\n        \n        this.completionFunctions[key] = completion;\n        \n        \n        try {\n            \n            this.messagesToPost.push({\n                \n                \"data\": data,\n                \"sortingInstructions\": sortingInstructions,\n                \"identifier\": identifier,\n                \"instanceIdentifier\": instanceIdentifier\n                \n            });\n            \n            this.postNextMessageIfNeeded();\n            \n        } catch (exception) {\n            \n            completion([], [], identifier)\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    sortedData<T>(\n        data: T[],\n        sortingInstructions: UIKeyValueStringSorterSortingInstruction[],\n        identifier: any = MAKE_ID()\n    ) {\n    \n        const result: Promise<{\n        \n            sortedData: T[],\n            sortedIndexes: number[],\n            identifier: any\n        \n        }> = new Promise((resolve, reject) => {\n        \n            this.sortData(data, sortingInstructions, identifier, (sortedData, sortedIndexes, sortedIdentifier) => {\n    \n                if (sortedIdentifier == identifier) {\n    \n                    resolve({\n        \n                        sortedData: sortedData,\n                        sortedIndexes: sortedIndexes,\n                        identifier: sortedIdentifier\n        \n                    })\n        \n                }\n                \n                \n            \n            })\n        \n        \n        \n        })\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    closeThread() {\n        \n        this._isThreadClosed = YES\n        \n        if (this._webWorkerHolder != UIKeyValueStringSorter._sharedWebWorkerHolder) {\n            \n            this._webWorkerHolder.webWorker.terminate();\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS_FIREFOX } from \"./ClientCheckers\"\nimport { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport class UIDialogView<ViewType extends UIView = UIView> extends UIView {\n    \n    _isAUIDialogView = YES\n    \n    _view: ViewType = nil\n    \n    _appearedAnimated: boolean\n    \n    animationDuration: number = 0.25\n    \n    _zIndex: number = 100\n    \n    isVisible: boolean = NO\n    \n    dismissesOnTapOutside = YES\n    \n    constructor(elementID?: string, viewHTMLElement?: HTMLElement) {\n        \n        \n        super(elementID, viewHTMLElement)\n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.PointerTap,\n            function (this: UIDialogView, sender: UIView, event: Event) {\n                \n                this.didDetectTapOutside(sender, event)\n                \n            }.bind(this)\n        )\n        \n        this.backgroundColor = UIColor.colorWithRGBA(0, 10, 25).colorWithAlpha(0.75) //CBColor.primaryContentColor.colorWithAlpha(0.75)\n        \n        this.zIndex = this._zIndex\n        \n    }\n    \n    \n    \n    didDetectTapOutside(sender: UIView, event: Event) {\n        \n        if (event.target == this.viewHTMLElement && this.dismissesOnTapOutside) {\n            this.dismiss(this._appearedAnimated)\n        }\n        \n    }\n    \n    \n    set zIndex(zIndex: number) {\n        \n        this._zIndex = zIndex\n        this.style.zIndex = \"\" + zIndex\n        \n    }\n    \n    get zIndex() {\n        \n        return this._zIndex\n        \n    }\n    \n    \n    \n    set view(view: ViewType) {\n        \n        this._view.removeFromSuperview()\n        \n        this._view = view\n        \n        this.addSubview(view)\n        \n    }\n    \n    \n    get view() {\n        \n        return this._view\n        \n    }\n    \n    \n    \n    willAppear(animated: boolean = NO) {\n        \n        if (animated) {\n            \n            this.style.opacity = \"0\"\n            \n        }\n        \n        this.style.height = \"\"\n        \n        this._frame = null\n        \n    }\n    \n    \n    animateAppearing() {\n        \n        this.style.opacity = \"1\"\n        \n    }\n    \n    animateDisappearing() {\n        \n        this.style.opacity = \"0\"\n        \n    }\n    \n    \n    \n    showInView(containerView: UIView, animated: boolean) {\n        \n        \n        animated = (animated && !IS_FIREFOX)\n        \n        this._appearedAnimated = animated\n        \n        this.willAppear(animated)\n        \n        \n        containerView.addSubview(this)\n        \n        if (animated) {\n            \n            this.layoutSubviews()\n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this,\n                this.animationDuration,\n                0,\n                undefined,\n                function () {\n                    \n                    \n                    this.animateAppearing()\n                    \n                    \n                }.bind(this),\n                nil\n            )\n            \n            \n        }\n        else {\n            \n            this.setNeedsLayout()\n            \n        }\n        \n        this.isVisible = YES\n        \n    }\n    \n    \n    showInRootView(animated: boolean) {\n        \n        this.showInView(UICore.main.rootViewController.view, animated)\n        \n    }\n    \n    \n    dismiss(animated?: boolean) {\n        \n        if (!this.isVisible) {\n            return\n        }\n        \n        animated = (animated && !IS_FIREFOX)\n        \n        if (animated == undefined) {\n            \n            animated = this._appearedAnimated\n            \n        }\n        \n        if (animated) {\n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this,\n                this.animationDuration,\n                0,\n                undefined,\n                function () {\n                    \n                    this.animateDisappearing()\n                    \n                }.bind(this),\n                function () {\n                    \n                    if (this.isVisible == NO) {\n                        \n                        this.removeFromSuperview()\n                        \n                    }\n                    \n                }.bind(this)\n            )\n            \n        }\n        else {\n            \n            this.removeFromSuperview()\n            \n        }\n        \n        this.isVisible = NO\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICore.broadcastEventName.WindowDidResize) {\n            \n            this.setNeedsLayout()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        \n        if (!IS(this.view)) {\n            \n            return\n            \n        }\n        \n        //this.frame = this.superview.bounds;\n        \n        this.setPosition(0, 0, 0, 0, 0, \"100%\")\n        this.setPosition(0, 0, 0, 0, UIView.pageHeight, \"100%\")\n        \n        const bounds = this.bounds\n        \n        const margin = 20\n        \n        //this.view.centerInContainer();\n        \n        this.view.style.position = \"relative\"\n        \n        // this.view.style.maxHeight = \"\" + (bounds.height - margin * 2).integerValue + \"px\";\n        // this.view.style.maxWidth = \"\" + (bounds.width - margin * 2).integerValue + \"px\";\n        \n        \n        \n        \n        // var viewIntrinsicRectangle = this.view.intrinsicContentSize();\n        // this.view.frame = new UIRectangle((bounds.width - viewIntrinsicRectangle.width)*0.5,  )\n        \n        super.layoutSubviews()\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil } from \"./UIObject\"\nimport { UIView, UIViewAddControlEventTargetObject } from \"./UIView\"\n\n\nexport class UIDateTimeInput extends UIView {\n    \n    \n    \n    \n    \n    constructor(elementID: string, type: string = UIDateTimeInput.type.DateTime) {\n        \n        super(elementID, nil, \"input\")\n        \n        this.viewHTMLElement.setAttribute(\"type\", type)\n        \n        this.viewHTMLElement.onchange = (event) => {\n            this.sendControlEventForKey(UIDateTimeInput.controlEvent.ValueChange, event)\n        }\n        \n    }\n    \n    \n    \n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \"ValueChange\": \"ValueChange\"\n        \n    })\n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UIDateTimeInput.controlEvent> {\n        \n        return super.addControlEventTarget as any\n        \n    }\n    \n    \n    \n    \n    \n    static type = {\n        \n        \"Date\": \"date\",\n        \"Time\": \"time\",\n        \"DateTime\": \"datetime\"\n        \n        \n    }\n    \n    \n    static format = {\n        \n        \"European\": \"DD-MM-YYYY\",\n        \"ISOComputer\": \"YYYY-MM-DD\",\n        \"American\": \"MM/DD/YYYY\"\n        \n    }\n    \n    \n    \n    \n    \n    get date() {\n        \n        const result = new Date((this.viewHTMLElement as HTMLInputElement).value)\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { NO, YES } from \"./UIObject\"\nimport { UIView } from \"./UIView\"\n\n\nexport class UIActionIndicator extends UIView {\n    \n    \n    indicatorView: UIView\n    \n    _size: number = 50\n    \n    constructor(elementID?: string) {\n        \n        super(elementID)\n        \n        this.indicatorView = new UIView(this.elementID + \"IndicatorView\")\n        this.indicatorView.viewHTMLElement.classList.add(\"LukeHaasLoader\")\n        this.addSubview(this.indicatorView)\n        \n        this.hidden = YES\n        \n    }\n    \n    \n    \n    \n    \n    set size(size: number) {\n        \n        this._size = size\n        \n        this.setNeedsLayoutUpToRootView()\n        \n    }\n    \n    get size() {\n        \n        return this._size\n        \n    }\n    \n    \n    \n    set hidden(hidden: boolean) {\n        \n        super.hidden = hidden\n        \n        if (hidden) {\n            \n            this.indicatorView.removeFromSuperview()\n            \n        }\n        else {\n            \n            this.addSubview(this.indicatorView)\n            \n        }\n        \n    }\n    \n    start() {\n        \n        this.hidden = NO\n        \n    }\n    \n    stop() {\n        \n        this.hidden = YES\n        \n    }\n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n        //this.indicatorView.centerInContainer();\n        \n        this.indicatorView.style.height = \"\" + this._size.integerValue + \"px\"\n        this.indicatorView.style.width = \"\" + this._size.integerValue + \"px\"\n    \n        const minSize = Math.min(this.bounds.height, this.bounds.width)\n    \n        this.indicatorView.style.maxHeight = \"\" + minSize.integerValue + \"px\"\n        this.indicatorView.style.maxWidth = \"\" + minSize.integerValue + \"px\"\n    \n        const size = Math.min(this._size, minSize)\n    \n        this.indicatorView.style.left = \"\" + ((bounds.width - size) * 0.5 - 11).integerValue + \"px\"\n        this.indicatorView.style.top = \"\" + ((bounds.height - size) * 0.5 - 11).integerValue + \"px\"\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "export interface UILanguageService {\n    \n    updateCurrentLanguageKey();\n    \n    currentLanguageKey: string;\n    \n    stringForKey(\n        key: string,\n        languageName: string,\n        defaultString: string,\n        parameters: { [x: string]: string | UILocalizedTextObject; }\n    ): string | undefined;\n    \n    stringForCurrentLanguage(localizedTextObject: UILocalizedTextObject);\n    \n    \n    \n}\n\n\nexport interface UILocalizedTextObject {\n    \n    [key: string]: string;\n    \n}\n", "import { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { UIDialogView } from \"./UIDialogView\"\nimport { EXTEND, FIRST, FIRST_OR_NIL, IS, IS_NOT, LAZY_VALUE, nil, NO, UIObject, wrapInNil, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView } from \"./UIView\"\nimport { UIViewController } from \"./UIViewController\"\n\n\n\n\ninterface UIRootViewControllerLazyViewControllerObject<T extends typeof UIViewController> {\n    instance: InstanceType<T>;\n    class: T;\n    shouldShow: () => (Promise<boolean> | boolean);\n    isInitialized: boolean\n}\n\n\ninterface UIRootViewControllerLazyViewControllersObject {\n    [x: string]: UIRootViewControllerLazyViewControllerObject<typeof UIViewController>\n}\n\n\ninterface UIRootViewControllerLazyContentViewControllersObject extends UIRootViewControllerLazyViewControllersObject {\n    mainViewController: UIRootViewControllerLazyViewControllerObject<typeof UIViewController>\n}\n\n\n\n\n\nexport class UIRootViewController extends UIViewController {\n    \n    topBarView: UIView = nil\n    backgroundView: UIView = new UIView(this.view.elementID + \"BackgroundView\").configuredWithObject({\n        style: {\n            background: \"linear-gradient(\" + UIColor.whiteColor.stringValue + \", \" + UIColor.blueColor.stringValue + \")\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\"\n        }\n    })\n    bottomBarView: UIView = nil\n    \n    _contentViewController: UIViewController\n    contentViewControllers: UIRootViewControllerLazyContentViewControllersObject = {\n        mainViewController: this.lazyViewControllerObjectWithClass(UIViewController)\n    }\n    \n    _detailsDialogView: UIDialogView = new UIDialogView(this.view.elementID + \"DetailsDialogView\")\n        .configuredWithObject({\n            dismiss: EXTEND((animated: boolean) => {\n                    const route = UIRoute.currentRoute\n                    this.detailsViewControllers.allValues.forEach(\n                        value => route.routeByRemovingComponentNamed(value.class.routeComponentName)\n                    )\n                    route.apply()\n                }\n            )\n        })\n    _detailsViewController: UIViewController\n    detailsViewControllers: UIRootViewControllerLazyViewControllersObject = {}\n    \n    \n    constructor(view: UIView) {\n        \n        super(view)\n        \n        this.view.addSubview(this.backgroundView)\n        \n    }\n    \n    \n    lazyViewControllerObjectWithClass<T extends typeof UIViewController>(\n        classObject: T,\n        shouldShow: () => (Promise<boolean> | boolean) = () => YES\n    ): UIRootViewControllerLazyViewControllerObject<T> {\n        const result: UIRootViewControllerLazyViewControllerObject<T> = {\n            class: classObject,\n            instance: nil,\n            shouldShow: shouldShow,\n            isInitialized: NO\n        }\n        UIObject.configureWithObject(result, {\n            // @ts-ignore\n            instance: LAZY_VALUE(\n                () => {\n                    result.isInitialized = YES\n                    return new classObject(\n                        new UIView(classObject.name.replace(\"ViewController\", \"View\"))\n                    )\n                }\n            )\n        })\n        return result\n    }\n    \n    \n    \n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        \n        UICore.languageService.updateCurrentLanguageKey()\n        \n        // Show content view\n        await this.setContentViewControllerForRoute(route)\n        \n        await this.setDetailsViewControllerForRoute(route)\n        \n    }\n    \n    \n    async setContentViewControllerForRoute(route: UIRoute) {\n        const contentViewControllerObject = FIRST(\n            await this.contentViewControllers.allValues.findAsyncSequential(\n                async value => IS(route.componentWithViewController(value.class)) && await value.shouldShow()\n            ),\n            this.contentViewControllers.mainViewController\n        )\n        this.contentViewController = contentViewControllerObject.instance\n    }\n    \n    async setDetailsViewControllerForRoute(route: UIRoute) {\n        const detailsViewControllerObject = FIRST_OR_NIL(\n            await this.detailsViewControllers.allValues.findAsyncSequential(\n                async value => IS(route.componentWithViewController(value.class)) && await value.shouldShow()\n            )\n        )\n        if (IS(route) && IS(this.detailsViewController) && IS_NOT(detailsViewControllerObject)) {\n            this.detailsViewController = nil\n            this._detailsDialogView.dismiss()\n            this.view.setNeedsLayout()\n            return\n        }\n        this.detailsViewController = detailsViewControllerObject.instance\n    }\n    \n    get contentViewController(): UIViewController {\n        return this._contentViewController || nil\n    }\n    \n    set contentViewController(controller: UIViewController) {\n        \n        if (this.contentViewController == controller) {\n            return\n        }\n        \n        if (this.contentViewController) {\n            this.removeChildViewController(this.contentViewController)\n        }\n        \n        this._contentViewController = controller\n        this.addChildViewControllerInContainer(controller, this.backgroundView)\n        this._triggerLayoutViewSubviews()\n        \n        this.contentViewController.view.style.boxShadow = \"0 3px 6px 0 rgba(0, 0, 0, 0.1)\"\n        \n        this.view.setNeedsLayout()\n        \n    }\n    \n    \n    get detailsViewController(): UIViewController {\n        return this._detailsViewController\n    }\n    \n    set detailsViewController(controller: UIViewController) {\n        \n        if (this.detailsViewController == controller) {\n            return\n        }\n        \n        if (this.detailsViewController) {\n            this.removeChildViewController(this.detailsViewController)\n        }\n        \n        this._detailsViewController = controller\n        \n        if (!IS(controller)) {\n            return\n        }\n        \n        this.addChildViewControllerInDialogView(controller, this._detailsDialogView)\n        this._triggerLayoutViewSubviews()\n        \n        this.detailsViewController.view.style.borderRadius = \"5px\"\n        \n        this._detailsDialogView.showInView(this.view, YES)\n        \n    }\n    \n    updatePageScale() {\n        \n        const actualPageWidth = (UIView.pageWidth * UIView.pageScale).integerValue\n        const minScaleWidth = 700\n        const maxScaleWidth = 1500\n        const minScale = 0.7\n        const maxScale = 1\n        let scale = minScale + (maxScale - minScale) *\n            ((actualPageWidth - minScaleWidth) / (maxScaleWidth - minScaleWidth))\n        scale = Math.min(scale, maxScale)\n        scale = Math.max(scale, minScale)\n        \n        UIView.pageScale = scale\n        \n    }\n    \n    \n    performDefaultLayout(\n        paddingLength = 20,\n        contentViewMaxWidth = 1000,\n        topBarHeight = 65,\n        bottomBarMinHeight = 100\n    ) {\n        \n        // View bounds\n        const bounds = this.view.bounds\n        \n        this.topBarView.frame = new UIRectangle(0, 0, topBarHeight, bounds.width)\n        \n        this.backgroundView.style.top = \"\" + this.topBarView.frame.height.integerValue + \"px\"\n        this.backgroundView.style.width = \"100%\"\n        this.backgroundView.style.height = \"fit-content\"\n        this.backgroundView.style.minHeight = \"\" +\n            (bounds.height - this.topBarView.frame.height - this.bottomBarView.frame.height).integerValue + \"px\"\n        \n        this.contentViewController.view.style.position = \"relative\"\n        this.contentViewController.view.style.bottom = \"0\"\n        this.contentViewController.view.style.top = \"0\"\n        this.contentViewController.view.style.width = \"100%\"\n        this.contentViewController.view.setPaddings(nil, nil, paddingLength, nil)\n        this.contentViewController.view.setNeedsLayout()\n        \n        if (contentViewMaxWidth < this.backgroundView.bounds.width) {\n            \n            this.contentViewController.view.style.marginBottom = \"\" +\n                Math.min(\n                    (this.backgroundView.bounds.width - contentViewMaxWidth) * 0.5,\n                    paddingLength\n                ).integerValue + \"px\"\n            this.contentViewController.view.style.marginTop = \"\" +\n                Math.min(\n                    (this.backgroundView.bounds.width - contentViewMaxWidth) * 0.5,\n                    paddingLength\n                ).integerValue + \"px\"\n            this.contentViewController.view.style.maxWidth = contentViewMaxWidth + \"px\"\n            \n            this.contentViewController.view.style.left = \"\" +\n                ((this.backgroundView.bounds.width - this.contentViewController.view.bounds.width) * 0.5).integerValue +\n                \"px\"\n            \n        }\n        else {\n            \n            this.contentViewController.view.style.margin = \"\"\n            this.contentViewController.view.style.left = \"\"\n            this.contentViewController.view.style.maxWidth = \"\"\n            \n        }\n        \n        // Triggering immediate layout to ensure that the intrinsicContentHeight calculations work well\n        this.contentViewController._triggerLayoutViewSubviews()\n        \n        let contentViewControllerViewHeight = this.contentViewController.view.intrinsicContentHeight(\n            this.contentViewController.view.bounds.width\n        )\n        \n        const detailsViewControllerViewHeight = FIRST_OR_NIL(this.detailsViewController).view.intrinsicContentHeight(\n            this.contentViewController.view.bounds.width)\n        if (detailsViewControllerViewHeight > contentViewControllerViewHeight) {\n            contentViewControllerViewHeight = detailsViewControllerViewHeight\n        }\n        \n        \n        this.contentViewController.view.style.height = \"\" + contentViewControllerViewHeight.integerValue + \"px\"\n        this.contentViewController.view.setNeedsLayout()\n        \n        if (IS(this.detailsViewController)) {\n            \n            this.contentViewController.view.style.transform = \"translateX(\" + 0 + \"px)\"\n            \n            this.detailsViewController.view.frame = this.backgroundView.frame.rectangleWithInset(\n                paddingLength\n            ).rectangleWithWidth(\n                this.contentViewController.view.bounds.width,\n                0.5\n            ).rectangleWithHeight(\n                Math.max(\n                    this.detailsViewController.view.intrinsicContentHeight(\n                        this.detailsViewController.view.bounds.width\n                    ),\n                    this.contentViewController.view.bounds.height\n                )\n            )\n            \n        }\n        else {\n            \n            this.contentViewController.view.style.transform = \"translateX(\" + 0 + \"px)\"\n            \n        }\n        \n        \n        this.bottomBarView.frame = this.backgroundView.frame.rectangleWithY(\n            this.backgroundView.frame.max.y\n        ).rectangleWithHeight(\n            Math.max(bottomBarMinHeight, this.bottomBarView.intrinsicContentHeight(this.backgroundView.frame.width))\n        )\n        \n        \n        wrapInNil(this._detailsDialogView).setMaxSizes(this.bottomBarView.frame.max.y)\n        \n    }\n    \n    \n}\n", "export * from \"./UIObject\"\nexport * from \"./UIView\"\nexport * from \"./UIViewController\"\nexport * from \"./UITimer\"\nexport * from \"./UITextArea\"\nexport * from \"./UITextView\"\nexport * from \"./UITextField\"\nexport * from \"./UITableView\"\nexport * from \"./UIStringFilter\"\nexport * from \"./UISlideScrollerView\"\nexport * from \"./UIScrollView\"\nexport * from \"./UIRoute\"\nexport * from \"./UIRectangle\"\nexport * from \"./UIPoint\"\nexport * from \"./UINativeScrollView\"\nexport * from \"./UILink\"\nexport * from \"./UILinkButton\"\nexport * from \"./UILayoutGrid\"\nexport * from \"./UIKeyValueStringFilter\"\nexport * from \"./UIKeyValueStringSorter\"\nexport * from \"./UIImageView\"\nexport * from \"./UIDialogView\"\nexport * from \"./UIDateTimeInput\"\nexport * from \"./UICoreExtensions\"\nexport * from \"./UICore\"\nexport * from \"./UIColor\"\nexport * from \"./UIBaseButton\"\nexport * from \"./UIButton\"\nexport * from \"./UIActionIndicator\"\nexport * from \"./UICoreExtensionValueObject\"\nexport * from \"./UIInterfaces\"\nexport * from \"./ClientCheckers\"\nexport * from \"./UICore\"\nexport * from \"./UIRootViewController\"\n\n\n\n\n\n\n\n\n", "export class UICoreExtensionValueObject {\n    \n    isAUICoreExtensionValueObject = true\n    value: any\n    \n    constructor(value: any) {\n        \n        this.value = value\n        \n    }\n    \n}\n", "const YES = true\nconst NO = false\n\n\nexport class UITimer {\n    \n    \n    \n    \n    \n    _intervalID: number\n    \n    isValid: boolean = YES\n    \n    \n    constructor(public interval: number, public repeats: boolean, public target: Function) {\n        \n        this.schedule()\n        \n    }\n    \n    \n    \n    schedule() {\n    \n        const callback = function () {\n            if (this.repeats == NO) {\n                this.invalidate()\n            }\n            this.target()\n        }.bind(this)\n    \n        this._intervalID = window.setInterval(callback, this.interval * 1000)\n        \n    }\n    \n    \n    reschedule() {\n        \n        this.invalidate()\n        this.schedule()\n        \n    }\n    \n    \n    \n    fire() {\n        if (this.repeats == NO) {\n            this.invalidate()\n        }\n        else {\n            this.reschedule()\n        }\n        this.target()\n    }\n    \n    invalidate() {\n        \n        if (this.isValid) {\n            \n            clearInterval(this._intervalID)\n            \n            this.isValid = NO\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UICoreExtensionValueObject } from \"./UICoreExtensionValueObject\"\nimport { UITimer } from \"./UITimer\"\n\n\nexport function NilFunction() {\n    return nil\n}\n\n\n\nexport var nil: any = new Proxy(Object.assign(NilFunction, { \"class\": nil, \"className\": \"Nil\" }), {\n    \n    get(target, name) {\n        \n        if (name == Symbol.toPrimitive) {\n            \n            return function (hint) {\n                if (hint == \"number\") {\n                    return 0\n                }\n                if (hint == \"string\") {\n                    return \"\"\n                }\n                return false\n            }\n            \n        }\n        \n        if (name == \"toString\") {\n            \n            return function toString() {\n                return \"\"\n            }\n            \n        }\n        \n        return NilFunction()\n    },\n    \n    set(target, name, value) {\n        return NilFunction()\n    }\n    \n})\n\n\n\n\n\nexport function wrapInNil<T>(object?: T): T {\n    \n    \n    let result = FIRST_OR_NIL(object)\n    \n    if (object instanceof Object && !(object instanceof Function)) {\n        \n        result = new Proxy(object as Object & T, {\n            \n            get(target, name) {\n                \n                if (name == \"wrapped_nil_target\") {\n                    \n                    return target\n                    \n                }\n                \n                \n                const value = Reflect.get(target, name)\n                \n                if (typeof value === \"object\") {\n                    \n                    return wrapInNil(value)\n                    \n                }\n                \n                if (IS_NOT_LIKE_NULL(value)) {\n                    \n                    return value\n                    \n                }\n                \n                return nil\n                \n            },\n            \n            set(target, name, value) {\n                \n                if (IS(target)) {\n                    \n                    target[name] = value\n                    \n                }\n                \n                return YES\n                \n            }\n            \n        })\n        \n    }\n    \n    return result\n    \n}\n\n\nexport const YES = true\nexport const NO = false\n\nexport function IS(object) {\n    \n    if (object && object !== nil) {\n        \n        return YES\n        \n    }\n    \n    return NO\n    \n    //return (object != nil && object);\n    \n}\n\nexport function IS_NOT(object) {\n    \n    return !IS(object)\n    \n}\n\nexport function IS_DEFINED(object) {\n    \n    if (object != undefined) {\n        \n        return YES\n        \n    }\n    \n    return NO\n    \n}\n\nexport function IS_UNDEFINED(object) {\n    \n    return !IS_DEFINED(object)\n    \n}\n\nexport function IS_NIL(object) {\n    \n    if (object === nil) {\n        \n        return YES\n        \n    }\n    \n    return NO\n    \n}\n\nexport function IS_NOT_NIL(object) {\n    \n    return !IS_NIL(object)\n    \n}\n\n\nexport function IS_LIKE_NULL(object) {\n    \n    return (IS_UNDEFINED(object) || IS_NIL(object) || object == null)\n    \n}\n\nexport function IS_NOT_LIKE_NULL(object) {\n    \n    return !IS_LIKE_NULL(object)\n    \n}\n\n\nexport function IS_AN_EMAIL_ADDRESS(email: string) {\n    const re = /\\S+@\\S+\\.\\S+/\n    return re.test(email)\n}\n\n\nexport function FIRST_OR_NIL<T>(...objects: T[]): T {\n    \n    const result = objects.find(function (object, index, array) {\n        \n        return IS(object)\n        \n    })\n    \n    return result || nil\n    \n}\n\nexport function FIRST<T>(...objects: T[]): T {\n    \n    const result = objects.find(function (object, index, array) {\n        \n        return IS(object)\n        \n    })\n    \n    return result || IF(IS_DEFINED(objects.lastElement))(RETURNER(objects.lastElement))()\n    \n}\n\n\nexport function MAKE_ID(randomPartLength = 15) {\n    \n    let result = \"\"\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n    \n    for (let i = 0; i < randomPartLength; i++) {\n        \n        result = result + characters.charAt(Math.floor(Math.random() * characters.length))\n        \n    }\n    \n    result = result + Date.now()\n    \n    return result\n    \n}\n\n\nexport function RETURNER<T>(value?: T) {\n    \n    return (...objects: any[]) => value\n    \n}\n\n\n\n\n\nexport type UIIFBlockReceiver<T> = (functionToCall: () => any) => UIIFEvaluator<T>;\n\nexport type UIIFEvaluatorBase<T> = () => T;\n\n\nexport interface UIIFEvaluator<T> extends UIIFEvaluatorBase<T> {\n    \n    ELSE_IF: (otherValue: any) => UIIFBlockReceiver<T>;\n    ELSE: (functionToCall: () => any) => T;\n    \n}\n\n\nexport function IF<T = any>(value: any): UIIFBlockReceiver<T> {\n    \n    let thenFunction = nil\n    let elseFunction = nil\n    \n    const result: any = function (functionToCall: () => T) {\n        thenFunction = functionToCall\n        return result.evaluateConditions\n    }\n    \n    \n    result.evaluateConditions = function () {\n        if (IS(value)) {\n            return thenFunction()\n        }\n        return elseFunction()\n    }\n    \n    \n    result.evaluateConditions.ELSE_IF = function (otherValue: any) {\n        \n        const functionResult = IF(otherValue) as (UIIFBlockReceiver<T> & { evaluateConditions: UIIFEvaluator<T> })\n        elseFunction = functionResult.evaluateConditions\n        \n        const functionResultEvaluateConditionsFunction: any = function () {\n            return result.evaluateConditions()\n        }\n        functionResultEvaluateConditionsFunction.ELSE_IF = functionResult.evaluateConditions.ELSE_IF\n        functionResultEvaluateConditionsFunction.ELSE = functionResult.evaluateConditions.ELSE\n        \n        functionResult.evaluateConditions = functionResultEvaluateConditionsFunction\n        \n        return functionResult\n        \n    }\n    \n    \n    result.evaluateConditions.ELSE = function (functionToCall: () => T) {\n        elseFunction = functionToCall\n        return result.evaluateConditions()\n    }\n    \n    \n    return result\n}\n\n\n\n\n\nexport class UIFunctionCall<T extends (...args: any) => any> {\n    \n    isAUIFunctionCallObject = YES\n    parameters: Parameters<T>[]\n    \n    constructor(...parameters: Parameters<T>) {\n        \n        this.parameters = parameters\n        \n    }\n    \n    callFunction(functionToCall: T) {\n        \n        const parameters = this.parameters\n        functionToCall(...parameters)\n        \n    }\n    \n    \n}\n\n\nexport function CALL<T extends (...args: any) => any>(...objects: Parameters<T>) {\n    \n    const result = new UIFunctionCall<T>(...objects)\n    return result\n    \n}\n\n\nexport class UIFunctionExtender<T extends (...args: any) => any> {\n    \n    isAUIFunctionExtenderObject = YES\n    extendingFunction: T\n    \n    constructor(extendingFunction: T) {\n        \n        this.extendingFunction = extendingFunction\n        \n    }\n    \n    extendedFunction(functionToExtend: T) {\n        \n        const extendingFunction = this.extendingFunction\n        \n        function extendedFunction(...objects: any[]) {\n            \n            const boundFunctionToExtend = functionToExtend.bind(this)\n            boundFunctionToExtend(...objects)\n            \n            const boundExtendingFunction = extendingFunction.bind(this)\n            boundExtendingFunction(...objects)\n            \n        }\n        \n        return extendedFunction\n        \n    }\n    \n    \n}\n\n\nexport function EXTEND<T extends (...args: any) => any>(extendingFunction: T) {\n    \n    const result = new UIFunctionExtender(extendingFunction)\n    return result\n    \n}\n\n\nexport class UILazyPropertyValue<T> {\n    \n    isAUILazyPropertyValueObject = YES\n    initFunction: () => T\n    \n    constructor(initFunction: () => T) {\n        \n        this.initFunction = initFunction\n        \n    }\n    \n    setLazyPropertyValue(key: string, target: object) {\n        \n        let isValueInitialized = NO\n        \n        // property value\n        let _value = nil\n        \n        const initValue = () => {\n            \n            _value = this.initFunction()\n            isValueInitialized = YES\n            this.initFunction = nil\n            \n        }\n        \n        if (delete target[key]) {\n            \n            // Create new property with getter and setter\n            Object.defineProperty(target, key, {\n                get: function () {\n                    \n                    if (IS_NOT(isValueInitialized)) {\n                        \n                        initValue()\n                        \n                    }\n                    \n                    return _value\n                    \n                },\n                set: function (newValue) {\n                    \n                    _value = newValue\n                    \n                },\n                enumerable: true,\n                configurable: true\n            })\n            \n        }\n        \n    }\n    \n    \n}\n\n\nexport function LAZY_VALUE<T>(initFunction: () => T) {\n    \n    const result = new UILazyPropertyValue(initFunction)\n    \n    return result\n    \n}\n\n\nexport type UIInitializerObject<T> = {\n    \n    [P in keyof T]?:\n    //T[P] extends (infer U)[] ? UIInitializerObject<U>[] :\n    T[P] extends (...args: any) => any ? UIFunctionCall<T[P]> | UIFunctionExtender<T[P]> | T[P] :\n        T[P] extends object ? UIInitializerObject<T[P]> | UILazyPropertyValue<T[P]> :\n            T[P];\n    \n}\n\n\nexport class UIObject {\n    \n    constructor() {\n    \n        // Do something here if needed\n        \n    }\n    \n    public get class(): any {\n        return Object.getPrototypeOf(this).constructor\n    }\n    \n    public get superclass(): any {\n        return Object.getPrototypeOf(Object.getPrototypeOf(this)).constructor\n    }\n    \n    \n    public static wrapObject<T>(object: T): UIObject & T {\n        \n        if (IS_NOT(object)) {\n            return nil\n        }\n        \n        if (object instanceof UIObject) {\n            return object\n        }\n    \n        return Object.assign(new UIObject(), object)\n        \n    }\n    \n    \n    isKindOfClass(classObject) {\n        if (this.isMemberOfClass(classObject)) {\n            return YES\n        }\n        for (let superclassObject = this.superclass; IS(superclassObject); superclassObject = superclassObject.superclass) {\n            if (superclassObject == classObject) {\n                return YES\n            }\n        }\n        return NO\n    }\n    \n    \n    isMemberOfClass(classObject: any) {\n        return (this.class == classObject)\n    }\n    \n    \n    \n    valueForKey(key: string) {\n        return this[key]\n    }\n    \n    valueForKeyPath(keyPath: string): any {\n        return UIObject.valueForKeyPath(keyPath, this)\n    }\n    \n    static valueForKeyPath(keyPath: string, object: any): any {\n        \n        if (IS_NOT(keyPath)) {\n            return object\n        }\n        \n        const keys = keyPath.split(\".\")\n        let currentObject = object\n    \n        for (let i = 0; i < keys.length; i++) {\n            \n            const key = keys[i]\n            \n            if (key.substring(0, 2) == \"[]\") {\n                \n                // This next object will be an array and the rest of the keys need to be run for each of the elements\n                currentObject = currentObject[key.substring(2)]\n                \n                // CurrentObject is now an array\n                \n                const remainingKeyPath = keys.slice(i + 1).join(\".\")\n                const currentArray = currentObject as unknown as any[]\n                currentObject = currentArray.map(function (subObject, index, array) {\n                    return UIObject.valueForKeyPath(remainingKeyPath, subObject)\n                })\n                \n                break\n                \n            }\n            \n            currentObject = currentObject[key]\n            if (IS_NOT(currentObject)) {\n                currentObject = nil\n            }\n            \n        }\n        \n        return currentObject\n        \n    }\n    \n    setValueForKeyPath(keyPath: string, value: any, createPath = YES) {\n        return UIObject.setValueForKeyPath(keyPath, value, this, createPath)\n    }\n    \n    static setValueForKeyPath(keyPath: string, value: any, currentObject: any, createPath) {\n        \n        const keys = keyPath.split(\".\")\n        let didSetValue = NO\n    \n        keys.forEach(function (key, index, array) {\n            if (index == array.length - 1 && IS_NOT_LIKE_NULL(currentObject)) {\n                currentObject[key] = value\n                didSetValue = YES\n                return\n            }\n            else if (IS_NOT(currentObject)) {\n                return\n            }\n            \n            const currentObjectValue = currentObject[key]\n            if (IS_LIKE_NULL(currentObjectValue) && createPath) {\n                currentObject[key] = {}\n            }\n            currentObject = currentObject[key]\n        })\n    \n        return didSetValue\n    \n    }\n    \n    \n    configureWithObject(object: UIInitializerObject<this>) {\n        this.configuredWithObject(object)\n    }\n    \n    configuredWithObject(object: UIInitializerObject<this>): this {\n        return UIObject.configureWithObject(this, object)\n    }\n    \n    \n    static configureWithObject<T extends object>(configurationTarget: T, object: UIInitializerObject<T>) {\n        \n        const isAnObject = (item: any) => (item && typeof item === \"object\" && !Array.isArray(item) &&\n            !(item instanceof UICoreExtensionValueObject))\n        \n        function isAClass(funcOrClass) {\n            const isFunction = functionToCheck => (functionToCheck && {}.toString.call(functionToCheck) ===\n                \"[object Function]\")\n            const propertyNames = Object.getOwnPropertyNames(funcOrClass)\n            return (isFunction(funcOrClass) && !propertyNames.includes(\"arguments\") &&\n                propertyNames.includes(\"prototype\"))\n        }\n        \n        let keyPathsAndValues = []\n        \n        function prepareKeyPathsAndValues(target: object, source: object, keyPath = \"\") {\n            \n            if ((isAnObject(target) || isAClass(target)) && isAnObject(source)) {\n                \n                source.forEach((sourceValue, key) => {\n                    \n                    const valueKeyPath = keyPath + \".\" + key\n                    function addValueAndKeyPath(sourceValue) {\n                        keyPathsAndValues.push({\n                            value: sourceValue,\n                            keyPath: valueKeyPath.replace(\".\", \"\")\n                        })\n                    }\n                    \n                    if (isAnObject(sourceValue) || isAClass(sourceValue)) {\n                        if (!(key in target) || target[key] instanceof Function) {\n                            addValueAndKeyPath(sourceValue)\n                        }\n                        else {\n                            prepareKeyPathsAndValues(target[key], sourceValue, valueKeyPath)\n                        }\n                    }\n                    else if (sourceValue instanceof UICoreExtensionValueObject) {\n                        addValueAndKeyPath(sourceValue.value)\n                    }\n                    else {\n                        addValueAndKeyPath(sourceValue)\n                    }\n                    \n                })\n                \n            }\n            \n        }\n        \n        prepareKeyPathsAndValues(configurationTarget, object)\n        \n        // Sort based on key paths\n        keyPathsAndValues = keyPathsAndValues.sort((a, b) => {\n            \n            const firstKeyPath = (a.keyPath as string).split(\".\").length\n            const secondKeyPath = (b.keyPath as string).split(\".\").length\n            \n            if (firstKeyPath < secondKeyPath) {\n                return -1\n            }\n            if (firstKeyPath > secondKeyPath) {\n                return 1\n            }\n            return 0\n            \n        })\n        \n        keyPathsAndValues.forEach((valueAndKeyPath) => {\n            \n            const keyPath: string = valueAndKeyPath.keyPath\n            let value = valueAndKeyPath.value\n            \n            const getTargetFunction = (bindThis = NO) => {\n                let result = (UIObject.valueForKeyPath(keyPath, configurationTarget) as Function)\n                if (bindThis) {\n                    const indexOfDot = keyPath.lastIndexOf(\".\")\n                    const thisObject = UIObject.valueForKeyPath(keyPath.substring(0, indexOfDot), configurationTarget)\n                    result = result.bind(thisObject)\n                }\n                return result\n            }\n            \n            if (value instanceof UILazyPropertyValue) {\n                const indexOfDot = keyPath.lastIndexOf(\".\")\n                const thisObject = UIObject.valueForKeyPath(keyPath.substring(0, indexOfDot), configurationTarget)\n                const key = keyPath.substring(indexOfDot + 1)\n                value.setLazyPropertyValue(key, thisObject)\n                return\n            }\n            \n            if (value instanceof UIFunctionCall) {\n                value.callFunction(getTargetFunction(YES))\n                return\n            }\n            \n            if (value instanceof UIFunctionExtender) {\n                value = value.extendedFunction(getTargetFunction())\n            }\n            \n            UIObject.setValueForKeyPath(keyPath, value, configurationTarget, YES)\n            \n        })\n        \n        \n        return configurationTarget\n        \n    }\n    \n    \n    performFunctionWithSelf<T>(functionToPerform: (self: this) => T): T {\n        return functionToPerform(this)\n    }\n    \n    performingFunctionWithSelf(functionToPerform: (self: this) => void): this {\n        functionToPerform(this)\n        return this\n    }\n    \n    performFunctionWithDelay(delay: number, functionToCall: Function) {\n        \n        new UITimer(delay, NO, functionToCall)\n        \n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "export const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1\nexport const IS_SAFARI = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n", "import { UIObject } from \"./UIObject\"\n\n\nexport interface UIColorDescriptor {\n    \n    red: number;\n    green: number;\n    blue: number;\n    alpha?: number;\n    \n}\n\n\n\n\n\nexport class UIColor extends UIObject {\n    \n    \n    constructor(public stringValue: string) {\n        \n        super()\n        \n    }\n    \n    \n    \n    toString() {\n        return this.stringValue\n    }\n    \n    static get redColor() {\n        return new UIColor(\"red\")\n    }\n    \n    static get blueColor() {\n        return new UIColor(\"blue\")\n    }\n    \n    static get greenColor() {\n        return new UIColor(\"green\")\n    }\n    \n    static get yellowColor() {\n        return new UIColor(\"yellow\")\n    }\n    \n    static get blackColor() {\n        return new UIColor(\"black\")\n    }\n    \n    static get brownColor() {\n        return new UIColor(\"brown\")\n    }\n    \n    static get whiteColor() {\n        return new UIColor(\"white\")\n    }\n    \n    static get greyColor() {\n        return new UIColor(\"grey\")\n    }\n    \n    static get lightGreyColor() {\n        return new UIColor(\"lightgrey\")\n    }\n    \n    static get transparentColor() {\n        return new UIColor(\"transparent\")\n    }\n    \n    static get undefinedColor() {\n        return new UIColor(\"\")\n    }\n    \n    static get nilColor() {\n        return new UIColor(\"\")\n    }\n    \n    \n    \n    static nameToHex(name: string) {\n        return {\n            \"aliceblue\": \"#f0f8ff\",\n            \"antiquewhite\": \"#faebd7\",\n            \"aqua\": \"#00ffff\",\n            \"aquamarine\": \"#7fffd4\",\n            \"azure\": \"#f0ffff\",\n            \"beige\": \"#f5f5dc\",\n            \"bisque\": \"#ffe4c4\",\n            \"black\": \"#000000\",\n            \"blanchedalmond\": \"#ffebcd\",\n            \"blue\": \"#0000ff\",\n            \"blueviolet\": \"#8a2be2\",\n            \"brown\": \"#a52a2a\",\n            \"burlywood\": \"#deb887\",\n            \"cadetblue\": \"#5f9ea0\",\n            \"chartreuse\": \"#7fff00\",\n            \"chocolate\": \"#d2691e\",\n            \"coral\": \"#ff7f50\",\n            \"cornflowerblue\": \"#6495ed\",\n            \"cornsilk\": \"#fff8dc\",\n            \"crimson\": \"#dc143c\",\n            \"cyan\": \"#00ffff\",\n            \"darkblue\": \"#00008b\",\n            \"darkcyan\": \"#008b8b\",\n            \"darkgoldenrod\": \"#b8860b\",\n            \"darkgray\": \"#a9a9a9\",\n            \"darkgreen\": \"#006400\",\n            \"darkkhaki\": \"#bdb76b\",\n            \"darkmagenta\": \"#8b008b\",\n            \"darkolivegreen\": \"#556b2f\",\n            \"darkorange\": \"#ff8c00\",\n            \"darkorchid\": \"#9932cc\",\n            \"darkred\": \"#8b0000\",\n            \"darksalmon\": \"#e9967a\",\n            \"darkseagreen\": \"#8fbc8f\",\n            \"darkslateblue\": \"#483d8b\",\n            \"darkslategray\": \"#2f4f4f\",\n            \"darkturquoise\": \"#00ced1\",\n            \"darkviolet\": \"#9400d3\",\n            \"deeppink\": \"#ff1493\",\n            \"deepskyblue\": \"#00bfff\",\n            \"dimgray\": \"#696969\",\n            \"dodgerblue\": \"#1e90ff\",\n            \"firebrick\": \"#b22222\",\n            \"floralwhite\": \"#fffaf0\",\n            \"forestgreen\": \"#228b22\",\n            \"fuchsia\": \"#ff00ff\",\n            \"gainsboro\": \"#dcdcdc\",\n            \"ghostwhite\": \"#f8f8ff\",\n            \"gold\": \"#ffd700\",\n            \"goldenrod\": \"#daa520\",\n            \"gray\": \"#808080\",\n            \"green\": \"#008000\",\n            \"greenyellow\": \"#adff2f\",\n            \"honeydew\": \"#f0fff0\",\n            \"hotpink\": \"#ff69b4\",\n            \"indianred \": \"#cd5c5c\",\n            \"indigo\": \"#4b0082\",\n            \"ivory\": \"#fffff0\",\n            \"khaki\": \"#f0e68c\",\n            \"lavender\": \"#e6e6fa\",\n            \"lavenderblush\": \"#fff0f5\",\n            \"lawngreen\": \"#7cfc00\",\n            \"lemonchiffon\": \"#fffacd\",\n            \"lightblue\": \"#add8e6\",\n            \"lightcoral\": \"#f08080\",\n            \"lightcyan\": \"#e0ffff\",\n            \"lightgoldenrodyellow\": \"#fafad2\",\n            \"lightgrey\": \"#d3d3d3\",\n            \"lightgreen\": \"#90ee90\",\n            \"lightpink\": \"#ffb6c1\",\n            \"lightsalmon\": \"#ffa07a\",\n            \"lightseagreen\": \"#20b2aa\",\n            \"lightskyblue\": \"#87cefa\",\n            \"lightslategray\": \"#778899\",\n            \"lightsteelblue\": \"#b0c4de\",\n            \"lightyellow\": \"#ffffe0\",\n            \"lime\": \"#00ff00\",\n            \"limegreen\": \"#32cd32\",\n            \"linen\": \"#faf0e6\",\n            \"magenta\": \"#ff00ff\",\n            \"maroon\": \"#800000\",\n            \"mediumaquamarine\": \"#66cdaa\",\n            \"mediumblue\": \"#0000cd\",\n            \"mediumorchid\": \"#ba55d3\",\n            \"mediumpurple\": \"#9370d8\",\n            \"mediumseagreen\": \"#3cb371\",\n            \"mediumslateblue\": \"#7b68ee\",\n            \"mediumspringgreen\": \"#00fa9a\",\n            \"mediumturquoise\": \"#48d1cc\",\n            \"mediumvioletred\": \"#c71585\",\n            \"midnightblue\": \"#191970\",\n            \"mintcream\": \"#f5fffa\",\n            \"mistyrose\": \"#ffe4e1\",\n            \"moccasin\": \"#ffe4b5\",\n            \"navajowhite\": \"#ffdead\",\n            \"navy\": \"#000080\",\n            \"oldlace\": \"#fdf5e6\",\n            \"olive\": \"#808000\",\n            \"olivedrab\": \"#6b8e23\",\n            \"orange\": \"#ffa500\",\n            \"orangered\": \"#ff4500\",\n            \"orchid\": \"#da70d6\",\n            \"palegoldenrod\": \"#eee8aa\",\n            \"palegreen\": \"#98fb98\",\n            \"paleturquoise\": \"#afeeee\",\n            \"palevioletred\": \"#d87093\",\n            \"papayawhip\": \"#ffefd5\",\n            \"peachpuff\": \"#ffdab9\",\n            \"peru\": \"#cd853f\",\n            \"pink\": \"#ffc0cb\",\n            \"plum\": \"#dda0dd\",\n            \"powderblue\": \"#b0e0e6\",\n            \"purple\": \"#800080\",\n            \"red\": \"#ff0000\",\n            \"rosybrown\": \"#bc8f8f\",\n            \"royalblue\": \"#4169e1\",\n            \"saddlebrown\": \"#8b4513\",\n            \"salmon\": \"#fa8072\",\n            \"sandybrown\": \"#f4a460\",\n            \"seagreen\": \"#2e8b57\",\n            \"seashell\": \"#fff5ee\",\n            \"sienna\": \"#a0522d\",\n            \"silver\": \"#c0c0c0\",\n            \"skyblue\": \"#87ceeb\",\n            \"slateblue\": \"#6a5acd\",\n            \"slategray\": \"#708090\",\n            \"snow\": \"#fffafa\",\n            \"springgreen\": \"#00ff7f\",\n            \"steelblue\": \"#4682b4\",\n            \"tan\": \"#d2b48c\",\n            \"teal\": \"#008080\",\n            \"thistle\": \"#d8bfd8\",\n            \"tomato\": \"#ff6347\",\n            \"turquoise\": \"#40e0d0\",\n            \"violet\": \"#ee82ee\",\n            \"wheat\": \"#f5deb3\",\n            \"white\": \"#ffffff\",\n            \"whitesmoke\": \"#f5f5f5\",\n            \"yellow\": \"#ffff00\",\n            \"yellowgreen\": \"#9acd32\"\n        }[name.toLowerCase()]\n    }\n    \n    \n    \n    static hexToDescriptor(c: string): UIColorDescriptor {\n        if (c[0] === \"#\") {\n            c = c.substr(1)\n        }\n        const r = parseInt(c.slice(0, 2), 16)\n        const g = parseInt(c.slice(2, 4), 16)\n        const b = parseInt(c.slice(4, 6), 16)\n        const a = parseInt(c.slice(6, 8), 16)\n    \n        const result = { \"red\": r, \"green\": g, \"blue\": b, \"alpha\": a }\n    \n        return result\n        \n        //return 'rgb(' + r + ',' + g + ',' + b + ')';\n        \n    }\n    \n    static rgbToDescriptor(colorString: string) {\n        \n        \n        if (colorString.startsWith(\"rgba(\")) {\n            \n            colorString = colorString.slice(5, colorString.length - 1)\n            \n        }\n        \n        if (colorString.startsWith(\"rgb(\")) {\n            \n            colorString = colorString.slice(4, colorString.length - 1) + \", 0\"\n            \n        }\n    \n    \n        const components = colorString.split(\",\")\n    \n    \n    \n        const result = {\n            \"red\": Number(components[0]),\n            \"green\": Number(components[1]),\n            \"blue\": Number(components[2]),\n            \"alpha\": Number(components[3])\n        }\n    \n    \n        return result\n        \n        \n    }\n    \n    \n    \n    get colorDescriptor(): UIColorDescriptor {\n    \n        var descriptor\n    \n        const colorHEXFromName = UIColor.nameToHex(this.stringValue)\n    \n        if (this.stringValue.startsWith(\"rgb\")) {\n            \n            descriptor = UIColor.rgbToDescriptor(this.stringValue)\n            \n        }\n        else if (colorHEXFromName) {\n            \n            descriptor = UIColor.hexToDescriptor(colorHEXFromName)\n            \n        }\n        else {\n            \n            descriptor = UIColor.hexToDescriptor(this.stringValue)\n            \n        }\n        \n        return descriptor\n        \n    }\n    \n    \n    \n    colorWithRed(red: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + red + \",\" + descriptor.green + \",\" + descriptor.blue + \",\" +\n            descriptor.alpha + \")\")\n    \n        return result\n        \n    }\n    \n    colorWithGreen(green: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + descriptor.red + \",\" + green + \",\" + descriptor.blue + \",\" +\n            descriptor.alpha + \")\")\n    \n        return result\n        \n    }\n    \n    colorWithBlue(blue: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + descriptor.red + \",\" + descriptor.green + \",\" + blue + \",\" +\n            descriptor.alpha + \")\")\n    \n        return result\n        \n    }\n    \n    \n    colorWithAlpha(alpha: number) {\n    \n    \n        const descriptor = this.colorDescriptor\n    \n        const result = new UIColor(\"rgba(\" + descriptor.red + \",\" + descriptor.green + \",\" + descriptor.blue + \",\" +\n            alpha + \")\")\n    \n        return result\n        \n    }\n    \n    \n    \n    static colorWithRGBA(red: number, green: number, blue: number, alpha: number = 1) {\n    \n    \n        const result = new UIColor(\"rgba(\" + red + \",\" + green + \",\" + blue + \",\" + alpha + \")\")\n    \n        return result\n        \n        \n    }\n    \n    static colorWithDescriptor(descriptor: UIColorDescriptor) {\n    \n    \n        const result = new UIColor(\"rgba(\" + descriptor.red.toFixed(0) + \",\" + descriptor.green.toFixed(0) + \",\" +\n            descriptor.blue.toFixed(0) + \",\" + this.defaultAlphaToOne(descriptor.alpha) + \")\")\n    \n        return result\n        \n    }\n    \n    \n    private static defaultAlphaToOne(value = 1) {\n        if (value != value) {\n            value = 1\n        }\n        return value\n    }\n    \n    \n    \n    colorByMultiplyingRGB(multiplier: number) {\n    \n        const descriptor = this.colorDescriptor\n    \n        descriptor.red = descriptor.red * multiplier\n        descriptor.green = descriptor.green * multiplier\n        descriptor.blue = descriptor.blue * multiplier\n    \n        const result = UIColor.colorWithDescriptor(descriptor)\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UICoreExtensionValueObject } from \"./UICoreExtensionValueObject\"\nimport { UIObject } from \"./UIObject\"\n\n\n\n\n\ndeclare global {\n    \n    \n    interface Array<T> {\n        \n        removeElementAtIndex(index: number);\n        \n        removeElement(element: T);\n        \n        insertElementAtIndex(index: number, element: T);\n        \n        replaceElementAtIndex(index: number, element: T);\n        \n        \n        contains(element: T): boolean;\n        \n        findAsyncSequential(functionToCall: (value: any) => Promise<boolean>): Promise<any>;\n        \n        groupedBy(keyFunction: (item: T) => any): { [key: string]: Array<T> } & Object;\n        \n        copy(): Array<T>;\n        \n        arrayByRepeating(numberOfRepetitions: number): Array<T>;\n        \n        arrayByTrimmingToLengthIfLonger(maxLength: number): Array<T>;\n        \n        anyMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n        \n        noneMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n        \n        allMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n        \n        firstElement: T;\n        lastElement: T;\n        readonly summedValue: T;\n        \n        everyElement: UIEveryElementItem<T>;\n        \n        max(): number;\n        \n        min(): number;\n        \n        isEqualToArray(array: Array<T>, keyPath?: string): boolean;\n        \n    }\n    \n    \n    \n    interface String {\n        \n        contains(string): boolean;\n        \n        readonly numericalValue: number;\n        isAString: boolean;\n        \n    }\n    \n    \n    \n    interface Number {\n        \n        isANumber: boolean;\n        \n        readonly integerValue: number;\n        \n    }\n    \n    \n    \n    interface Date {\n        \n        readonly dateString: string;\n        \n    }\n    \n    \n    interface Object {\n        \n        forEach(callbackFunction: (value: any, key: string) => void): void;\n        \n        readonly allValues: Array<any>;\n        \n        readonly allKeys: string[];\n        \n    }\n    \n    \n}\n\nexport {}\n\nconst YES = true\nconst NO = false\n\nif (\"removeElementAtIndex\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).removeElementAtIndex = function (this: Array<any>, index: number) {\n        \n        // @ts-ignore\n        if (index >= 0 && index < this.length) {\n            \n            this.splice(index, 1)\n            \n        }\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     removeElementAtIndex(index: number);\n//\n// }\n\n\nif (\"removeElement\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).removeElement = function (this: Array<any>, element) {\n        \n        this.removeElementAtIndex(this.indexOf(element))\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     removeElement(element: T);\n//\n// }\n\n\nif (\"insertElementAtIndex\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).insertElementAtIndex = function (this: Array<any>, index: number, element: any) {\n        \n        if (index >= 0 && index <= this.length) {\n            \n            this.splice(index, 0, element)\n            \n        }\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     insertElementAtIndex(index: number, element: T);\n//\n// }\n\n\nif (\"replaceElementAtIndex\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).replaceElementAtIndex = function (this: Array<any>, index: number, element: any) {\n        \n        this.removeElementAtIndex(index)\n        this.insertElementAtIndex(index, element)\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     replaceElementAtIndex(index: number, element: T);\n//\n// }\n\n\nif (\"contains\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).contains = function (this: Array<any>, element) {\n        \n        const result = (this.indexOf(element) != -1)\n        return result\n        \n    }\n    \n}\n\nif (\"containsAny\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).containsAny = function (this: Array<any>, elements: any[]) {\n        \n        const result = this.anyMatch(function (element, index, array) {\n            return elements.contains(element)\n        })\n        \n        return result\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     contains(element: T): boolean;\n//\n//     containsAny(element: T[]): boolean;\n//\n// }\n\n\nif (\"anyMatch\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).anyMatch = function (\n        this: Array<any>,\n        functionToCall: (value: any, index: number, array: any[]) => boolean\n    ) {\n        \n        // @ts-ignore\n        const result = (this.findIndex(functionToCall) > -1)\n        \n        return result\n        \n    }\n    \n}\n\nif (\"noneMatch\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).noneMatch = function (\n        this: Array<any>,\n        functionToCall: (value: any, index: number, array: any[]) => boolean\n    ) {\n        \n        // @ts-ignore\n        const result = (this.findIndex(functionToCall) == -1)\n        \n        return result\n        \n    }\n    \n}\n\nif (\"allMatch\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).allMatch = function (\n        this: Array<any>,\n        functionToCall: (value: any, index: number, array: any[]) => boolean\n    ) {\n        \n        function reversedFunction(value: any, index: number, array: any[]) {\n            return !functionToCall(value, index, array)\n        }\n        \n        // @ts-ignore\n        const result = (this.findIndex(reversedFunction) == -1)\n        \n        return result\n        \n    }\n    \n}\n\nif (\"findAsyncSequential\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).findAsyncSequential = function (\n        this: Array<any>,\n        functionToCall: (value: any) => Promise<boolean>\n    ) {\n        \n        // https://stackoverflow.com/questions/55601062/using-an-async-function-in-array-find\n        async function findAsyncSequential<T>(\n            array: T[],\n            predicate: (t: T) => Promise<boolean>\n        ): Promise<T | undefined> {\n            for (const t of array) {\n                if (await predicate(t)) {\n                    return t\n                }\n            }\n            return undefined\n        }\n        \n        const result = findAsyncSequential(this, functionToCall)\n        \n        return result\n        \n    }\n    \n}\n\n\n\n// interface Array<T> {\n//\n//     anyMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n//\n//     noneMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n//\n//     allMatch(predicate: (value: T, index: number, obj: T[]) => boolean): boolean\n//\n// }\n\n\nif (\"groupedBy\" in Array.prototype == NO) {\n    \n    Array.prototype.groupedBy = function (this: Array<any>, funcProp) {\n        return this.reduce(function (acc, val) {\n            (acc[funcProp(val)] = acc[funcProp(val)] || []).push(val)\n            return acc\n        }, {})\n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     groupedBy(keyFunction: (item: T) => any): { [key: string]: Array<T> };\n//\n// }\n\n\nif (\"firstElement\" in Array.prototype == NO) {\n    Object.defineProperty(Array.prototype, \"firstElement\", {\n        get: function firstElement(this: Array<any>) {\n            const result = this[0]\n            return result\n        },\n        set: function (this: Array<any>, element: any) {\n            if (this.length == 0) {\n                this.push(element)\n                return\n            }\n            this[0] = element\n        }\n    })\n}\n\nif (\"lastElement\" in Array.prototype == NO) {\n    Object.defineProperty(Array.prototype, \"lastElement\", {\n        get: function lastElement(this: Array<any>) {\n            const result = this[this.length - 1]\n            return result\n        },\n        set: function (this: Array<any>, element: any) {\n            if (this.length == 0) {\n                this.push(element)\n                return\n            }\n            this[this.length - 1] = element\n        }\n    })\n}\n\nif (\"everyElement\" in Array.prototype == NO) {\n    \n    Object.defineProperty(Array.prototype, \"everyElement\", {\n        \n        get: function everyElement(this: Array<any>) {\n            \n            const valueKeys = []\n            \n            const targetFunction = (objects) => {\n                \n                const result = this.map((element, index, array) => {\n                    \n                    const thisObject = UIObject.valueForKeyPath(\n                        valueKeys.arrayByTrimmingToLengthIfLonger(valueKeys.length - 1).join(\".\"),\n                        element\n                    ) || element\n                    \n                    const elementFunction = (UIObject.valueForKeyPath(valueKeys.join(\".\"), element) as Function).bind(\n                        thisObject,\n                        objects\n                    )\n                    \n                    return elementFunction()\n                    \n                })\n                \n                return result\n                \n            }\n            \n            const result = new Proxy(\n                targetFunction,\n                {\n                    \n                    get: (target, key, receiver) => {\n                        \n                        if (key == \"UI_elementValues\") {\n                            \n                            return this.map((element, index, array) => UIObject.valueForKeyPath(\n                                valueKeys.join(\".\"),\n                                element\n                            ))\n                            \n                        }\n                        \n                        valueKeys.push(key)\n                        \n                        return result\n                        \n                    },\n                    set: (target, key, value, receiver) => {\n                        \n                        valueKeys.push(key)\n                        \n                        this.forEach((element, index, array) => {\n                            \n                            UIObject.setValueForKeyPath(valueKeys.join(\".\"), value, element, YES)\n                            \n                        })\n                        \n                        return true\n                        \n                    }\n                    \n                }\n            )\n            \n            return result\n            \n        },\n        set: function (this: Array<any>, element: any) {\n            \n            for (var i = 0; i < this.length; ++i) {\n                \n                this[i] = element\n                \n            }\n            \n        }\n        \n    })\n    \n}\n\n\nexport type UIEveryElementItem<T> = {\n    \n    [P in keyof T]: UIEveryElementItem<T[P]>\n    \n} & {\n    \n    UI_elementValues?: T[];\n    \n} & T\n\n// interface Array<T> {\n//\n//     firstElement: T;\n//     lastElement: T;\n//\n//     everyElement: UIEveryElementItem<T>;\n//\n// }\n\n\nif (\"copy\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).copy = function (this: Array<any>) {\n        \n        const result = this.slice(0)\n        return result\n        \n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     copy(): Array<T>;\n//\n// }\n\n\nif (\"arrayByRepeating\" in Array.prototype == NO) {\n    \n    (Array.prototype as any).arrayByRepeating = function (this: Array<any>, numberOfRepetitions: number) {\n        const result = []\n        for (var i = 0; i < numberOfRepetitions; i++) {\n            this.forEach(function (element, index, array) {\n                result.push(element)\n            })\n        }\n        return result\n    }\n    \n}\n\n\n// interface Array<T> {\n//\n//     arrayByRepeating(numberOfRepetitions: number): Array<T>;\n//\n// }\n\n\nif (\"arrayByTrimmingToLengthIfLonger\" in Array.prototype == NO) {\n    (Array.prototype as any).arrayByTrimmingToLengthIfLonger = function (this: Array<any>, maxLength: number) {\n        const result = []\n        for (var i = 0; i < maxLength && i < this.length; i++) {\n            result.push(this[i])\n        }\n        return result\n    }\n}\n\n\n// interface Array<T> {\n//\n//     arrayByTrimmingToLengthIfLonger(maxLength: number): Array<T>;\n//\n// }\n\n\nif (\"summedValue\" in Array.prototype == NO) {\n    \n    Object.defineProperty(Array.prototype, \"summedValue\", {\n        get: function summedValue(this: Array<any>) {\n            const result = this.reduce(function (a, b) {\n                return a + b\n            }, 0)\n            return result\n        }\n    })\n    \n}\n\n\n// interface Array<T> {\n//\n//     readonly summedValue: T;\n//\n//     max(): number;\n//     min(): number;\n//\n//\n// }\n\nArray.prototype.max = function () {\n    return Math.max.apply(null, this)\n}\n\nArray.prototype.min = function () {\n    return Math.min.apply(null, this)\n}\n\n\n// interface Array<T> {\n//\n//     isEqualToArray(array: Array<T>, keyPath?: string): boolean;\n//\n// }\n\n\nif (\"isEqualToArray\" in Array.prototype == NO) {\n    \n    // attach the .equals method to Array's prototype to call it on any array\n    Array.prototype.isEqualToArray = function (array: any[], keyPath?: string) {\n        \n        // if the other array is a falsy value, return\n        if (!array) {\n            return false\n        }\n        \n        // compare lengths - can save a lot of time\n        if (this.length != array.length) {\n            return false\n        }\n        \n        var i = 0\n        const l = this.length\n        for (; i < l; i++) {\n            \n            // Check if we have nested arrays\n            if (this[i] instanceof Array && array[i] instanceof Array && !keyPath) {\n                \n                // recurse into the nested arrays\n                if (!this[i].isEqualToArray(array[i])) {\n                    return false\n                }\n                \n            }\n            else if (keyPath && UIObject.valueForKeyPath(keyPath, this[i]) != UIObject.valueForKeyPath(\n                keyPath,\n                array[i]\n            )) {\n                \n                return false\n                \n            }\n            else if (this[i] != array[i]) {\n                \n                // Warning - two different object instances will never be equal: {x:20} != {x:20}\n                return false\n                \n            }\n            \n        }\n        \n        return true\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Array.prototype, \"isEqualToArray\", { enumerable: false })\n    \n}\n\n\n\n\n\nif (\"forEach\" in Object.prototype == NO) {\n    \n    (Object.prototype as any).forEach = function (this: Object, callbackFunction: (value: any, key: string) => void) {\n        const keys = Object.keys(this)\n        keys.forEach(function (key, index, array) {\n            callbackFunction(this[key], key)\n        }.bind(this))\n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"forEach\", { enumerable: false })\n    \n}\n\n\n// interface Object {\n//\n//     forEach(callbackFunction: (value: any, key: string) => void): void;\n//\n// }\n\n\nif (\"allValues\" in Object.prototype == NO) {\n    Object.defineProperty(Object.prototype, \"allValues\", {\n        get: function (this: Object) {\n            const values = []\n            this.forEach(function (value: any) {\n                values.push(value)\n            })\n            return values\n        }\n    })\n}\n\n\n// interface Object {\n//\n//     readonly allValues: Array<any>;\n//\n// }\n\n\nif (\"allKeys\" in Object.prototype == NO) {\n    Object.defineProperty(Object.prototype, \"allKeys\", {\n        get: function (this: Object) {\n            const values = Object.keys(this)\n            return values\n        }\n    })\n}\n\n\n// interface Object {\n//\n//     readonly allKeys: string[];\n//\n// }\n\n\nif (\"objectByCopyingValuesRecursivelyFromObject\" in Object.prototype == NO) {\n    \n    (Object.prototype as any).objectByCopyingValuesRecursivelyFromObject = function (this: Object, object: any) {\n        \n        \n        function isAnObject(item: any) {\n            return (item && typeof item === \"object\" && !Array.isArray(item))\n        }\n        \n        function mergeRecursively(target: any, source: any) {\n            \n            const output = Object.assign({}, target)\n            \n            if (isAnObject(target) && isAnObject(source)) {\n                \n                Object.keys(source).forEach(function (key) {\n                    \n                    if (isAnObject(source[key])) {\n                        \n                        // if (!(key in target)) {\n                        \n                        //     Object.assign(output, { [key]: source[key] });\n                        \n                        // }\n                        // else {\n                        \n                        output[key] = mergeRecursively(target[key], source[key])\n                        \n                        //}\n                        \n                    }\n                    else {\n                        \n                        Object.assign(output, { [key]: source[key] })\n                        \n                    }\n                    \n                })\n                \n            }\n            \n            return output\n            \n        }\n        \n        const result = mergeRecursively(this, object)\n        \n        return result\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"objectByCopyingValuesRecursivelyFromObject\", { enumerable: false })\n    \n}\n\n\nif (\"asValueObject\" in Object.prototype == NO) {\n    \n    (Object.prototype as any).asValueObject = function () {\n        \n        const result = new UICoreExtensionValueObject(this)\n        \n        return result\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"asValueObject\", { enumerable: false })\n    \n}\n\n\n// interface Object {\n//\n//     objectByCopyingValuesRecursivelyFromObject<T>(object: T): this & T;\n//\n//     asValueObject(): this;\n//\n// }\n\nexport type Unpacked<T> =\n    T extends (infer U)[]\n        ? U\n        : T extends (...args: any[]) => infer U\n            ? U\n            : T extends Promise<infer U>\n                ? U\n                : T\n\nexport type UnpackedObject<T> = {\n    [P in keyof T]: Unpacked<T[P]>\n}\n\nexport function promisedProperties<ObjectType extends object>(object: ObjectType): UnpackedObject<ObjectType> {\n    \n    let promisedProperties = []\n    const objectKeys = Object.keys(object)\n    \n    objectKeys.forEach((key) => promisedProperties.push(object[key]))\n    \n    // @ts-ignore\n    return Promise.all(promisedProperties)\n        .then((resolvedValues) => {\n            return resolvedValues.reduce((resolvedObject, property, index) => {\n                resolvedObject[objectKeys[index]] = property\n                return resolvedObject\n            }, object)\n        })\n    \n}\n\n// if (\"promisedProperties\" in Object.prototype == NO) {\n//\n//     (Object.prototype as any).promisedProperties = function () {\n//\n//         const result = promisedProperties(this);\n//\n//         return result\n//\n//     }\n//\n//     // Hide method from for-in loops\n//     Object.defineProperty(Object.prototype, \"promisedProperties\", { enumerable: false });\n//\n// }\n//\n//\n// interface Object {\n//\n//     readonly promisedProperties: UnpackedObject<this>;\n//\n// }\n\n\nif (\"contains\" in String.prototype == NO) {\n    \n    (String.prototype as any).contains = function (this: String, string) {\n        \n        const result = (this.indexOf(string) != -1)\n        return result\n        \n    }\n    \n    // Hide method from for-in loops\n    Object.defineProperty(Object.prototype, \"contains\", { enumerable: false })\n    \n}\n\n\n// interface String {\n//\n//     contains(string): boolean;\n//\n// }\n\n\nif (\"capitalizedString\" in String.prototype == NO) {\n    Object.defineProperty(Object.prototype, \"capitalizedString\", {\n        get: function (this: String) {\n            const result = this.charAt(0).toUpperCase() + this.slice(1).toLowerCase()\n            return result\n        }\n    })\n}\n\n\n// interface String {\n//\n//     readonly capitalizedString: string;\n//\n// }\n\n\nif (\"numericalValue\" in String.prototype == NO) {\n    Object.defineProperty(String.prototype, \"numericalValue\", {\n        get: function numericalValue(this: string) {\n            const result = Number(this)\n            return result\n        }\n    })\n}\n\n\n// interface String {\n//\n//     readonly numericalValue: number;\n//\n// }\n\n\nif (\"isAString\" in String.prototype == NO) {\n    \n    (String.prototype as any).isAString = YES\n    \n}\n\n\n// interface String {\n//\n//     isAString: boolean;\n//\n// }\n\n\nif (\"isANumber\" in Number.prototype == NO) {\n    \n    (Number.prototype as any).isANumber = YES\n    \n}\n\n\n// interface Number {\n//\n//     isANumber: boolean;\n//\n// }\n\n\n\n\n\nif (\"integerValue\" in Number.prototype == NO) {\n    Object.defineProperty(Number.prototype, \"integerValue\", {\n        get: function (this: number) {\n            const result = parseInt(\"\" + (Math.round(this) + 0.5))\n            return result\n        }\n    })\n}\n\n\n// interface Number {\n//\n//     readonly integerValue: number;\n//\n// }\n\n\n\nexport class PrimitiveNumber {\n    \n    // @ts-ignore\n    static [Symbol.hasInstance](x) {\n        return\n    }\n    \n}\n\n\nif (\"integerValue\" in Boolean.prototype == NO) {\n    \n    Object.defineProperty(Boolean.prototype, \"integerValue\", {\n        get: function (this: boolean) {\n            \n            if (this == true) {\n                \n                return 1\n                \n            }\n            \n            return 0\n            \n        }\n    })\n    \n}\n\n\n// interface Boolean {\n//\n//     readonly integerValue: number;\n//\n// }\n\n\nif (\"dateString\" in Date.prototype == NO) {\n    \n    Object.defineProperty(Date.prototype, \"dateString\", {\n        get: function dateString(this: Date) {\n            \n            const result = (\"0\" + this.getDate()).slice(-2) + \"-\" + (\"0\" + (this.getMonth() + 1)).slice(-2) + \"-\" +\n                this.getFullYear() + \" \" + (\"0\" + this.getHours()).slice(-2) + \":\" +\n                (\"0\" + this.getMinutes()).slice(-2)\n            \n            return result\n            \n        }\n    })\n    \n    \n    \n}\n\n\n// interface Date {\n//\n//     readonly dateString: string;\n//\n// }\n\n\n\n\n\n\n\n\n", "import { IS_NIL, IS_NOT, nil, NO } from \"./UIObject\"\nimport { UIViewController } from \"./UIViewController\"\n\n\nexport type ValueOf<T> = T[keyof T];\nexport type PropType<TObj, TProp extends keyof TObj> = TObj[TProp];\n\nexport type UIRouteParameters<T = any> = {\n    \n    [key: string]: string;\n    \n} | T;\n\n\nexport interface UIRouteComponent<T = any> {\n    \n    name: string;\n    parameters: UIRouteParameters<T>;\n    \n}\n\n\n// @ts-ignore\nexport class UIRoute extends Array<UIRouteComponent> {\n    \n    constructor(hash?: string) {\n        \n        super()\n        \n        if (!hash || !hash.startsWith) {\n            \n            return\n            \n        }\n        \n        if (hash.startsWith(\"#\")) {\n            hash = hash.slice(1)\n        }\n        \n        hash = decodeURIComponent(hash)\n        \n        const components = hash.split(\"]\")\n        components.forEach(function (this: UIRoute, component: string, index: number, array: string[]) {\n            \n            const componentName = component.split(\"[\")[0]\n            const parameters = {}\n            \n            if (!componentName) {\n                \n                return\n                \n            }\n            \n            const parametersString = component.split(\"[\")[1] || \"\"\n            const parameterPairStrings = parametersString.split(\",\") || []\n            \n            parameterPairStrings.forEach(function (pairString, index, array) {\n                \n                const keyAndValueArray = pairString.split(\":\")\n                const key = decodeURIComponent(keyAndValueArray[0])\n                const value = decodeURIComponent(keyAndValueArray[1])\n                \n                if (key) {\n                    \n                    parameters[key] = value\n                    \n                }\n                \n                \n                \n            })\n            \n            \n            \n            this.push({\n                name: componentName,\n                parameters: parameters\n            })\n            \n            \n            \n            \n            \n        }, this)\n        \n        \n    }\n    \n    \n    \n    static get currentRoute() {\n        \n        return new UIRoute(window.location.hash)\n        \n    }\n    \n    \n    \n    \n    \n    apply() {\n        \n        window.location.hash = this.stringRepresentation\n        \n    }\n    \n    \n    applyByReplacingCurrentRouteInHistory() {\n        \n        window.location.replace(this.linkRepresentation)\n        \n    }\n    \n    \n    \n    copy() {\n        var result = new UIRoute()\n        result = Object.assign(result, this)\n        return result\n    }\n    \n    \n    routeByRemovingComponentsOtherThanOnesNamed(componentNames: string[]) {\n        const result = this.copy()\n        const indexesToRemove: number[] = []\n        result.forEach(function (component, index, array) {\n            if (!componentNames.contains(component.name)) {\n                indexesToRemove.push(index)\n            }\n        })\n        indexesToRemove.forEach(function (indexToRemove, index, array) {\n            result.removeElementAtIndex(indexToRemove)\n        })\n        return result\n    }\n    \n    \n    routeByRemovingComponentNamed(componentName: string) {\n        const result = this.copy()\n        const componentIndex = result.findIndex(function (component, index) {\n            return (component.name == componentName)\n        })\n        if (componentIndex != -1) {\n            result.splice(componentIndex, 1)\n        }\n        return result\n    }\n    \n    \n    routeByRemovingParameterInComponent(componentName: string, parameterName: string, removeComponentIfEmpty = NO) {\n        var result = this.copy()\n        var parameters = result.componentWithName(componentName).parameters\n        if (IS_NOT(parameters)) {\n            parameters = {}\n        }\n        delete parameters[parameterName]\n        result = result.routeWithComponent(componentName, parameters)\n        if (removeComponentIfEmpty && Object.keys(parameters).length == 0) {\n            result = result.routeByRemovingComponentNamed(componentName)\n        }\n        return result\n    }\n    \n    routeBySettingParameterInComponent(componentName: string, parameterName: string, valueToSet: string) {\n        var result = this.copy()\n        if (IS_NIL(valueToSet) || IS_NIL(parameterName)) {\n            return result\n        }\n        var parameters = result.componentWithName(componentName).parameters\n        if (IS_NOT(parameters)) {\n            parameters = {}\n        }\n        parameters[parameterName] = valueToSet\n        result = result.routeWithComponent(componentName, parameters)\n        return result\n    }\n    \n    \n    routeWithViewControllerComponent<T extends typeof UIViewController>(\n        viewController: T,\n        parameters: UIRouteParameters<{ [P in keyof T[\"ParameterIdentifierName\"]]: string }>,\n        extendParameters: boolean = NO\n    ) {\n        \n        return this.routeWithComponent(viewController.routeComponentName, parameters, extendParameters)\n        \n    }\n    \n    routeWithComponent(name: string, parameters: UIRouteParameters, extendParameters: boolean = NO) {\n        \n        const result = this.copy()\n        var component = result.componentWithName(name)\n        if (IS_NOT(component)) {\n            component = {\n                name: name,\n                parameters: {}\n            }\n            result.push(component)\n        }\n        \n        if (IS_NOT(parameters)) {\n            \n            parameters = {}\n            \n        }\n        \n        if (extendParameters) {\n            component.parameters = Object.assign(component.parameters, parameters)\n        }\n        else {\n            component.parameters = parameters\n        }\n        \n        return result\n        \n    }\n    \n    navigateBySettingComponent(name: string, parameters: UIRouteParameters, extendParameters: boolean = NO) {\n        \n        this.routeWithComponent(name, parameters, extendParameters).apply()\n        \n    }\n    \n    \n    componentWithViewController<T extends typeof UIViewController>(viewController: T): UIRouteComponent<{ [P in keyof T[\"ParameterIdentifierName\"]]: string }> {\n        \n        return this.componentWithName(viewController.routeComponentName)\n        \n    }\n    \n    componentWithName(name: string): UIRouteComponent {\n        var result = nil\n        this.forEach(function (component, index, self) {\n            if (component.name == name) {\n                result = component\n            }\n        })\n        return result\n    }\n    \n    \n    get linkRepresentation() {\n        return \"#\" + this.stringRepresentation\n    }\n    \n    \n    get stringRepresentation() {\n    \n        var result = \"\"\n        this.forEach(function (component, index, self) {\n            result = result + component.name\n            const parameters = component.parameters\n            result = result + \"[\"\n            Object.keys(parameters).forEach(function (key, index, keys) {\n                if (index) {\n                    result = result + \",\"\n                }\n                result = result + encodeURIComponent(key) + \":\" + encodeURIComponent(parameters[key])\n            })\n            result = result + \"]\"\n        })\n    \n        return result\n    \n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIDialogView } from \"./UIDialogView\"\nimport { FIRST_OR_NIL, IS, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UIViewController extends UIObject {\n    \n    \n    \n    parentViewController: UIViewController = nil\n    childViewControllers: UIViewController[] = []\n    static readonly routeComponentName: string\n    static readonly ParameterIdentifierName: any\n    \n    constructor(public view: UIView) {\n        \n        super()\n        \n        this.view.viewController = this\n        \n    }\n    \n    \n    handleRouteRecursively(route: UIRoute) {\n        \n        this.handleRoute(route)\n    \n        this.childViewControllers.forEach(controller => {\n        \n            controller.handleRouteRecursively(route)\n        \n        })\n        \n    }\n    \n    async handleRoute(route: UIRoute) {\n    \n    \n    \n    }\n    \n    \n    async viewWillAppear() {\n    \n    \n    \n    }\n    \n    \n    async viewDidAppear() {\n    \n    \n    \n    }\n    \n    \n    async viewWillDisappear() {\n    \n    \n    \n    }\n    \n    async viewDidDisappear() {\n    \n    \n    \n    }\n    \n    \n    updateViewConstraints() {\n    \n    \n    \n    \n    \n    }\n    \n    updateViewStyles() {\n    \n    \n    \n    }\n    \n    layoutViewSubviews() {\n        \n        \n        \n    }\n    \n    _triggerLayoutViewSubviews() {\n        \n        this.view.layoutSubviews()\n        \n        this.viewDidLayoutSubviews()\n        \n    }\n    \n    viewWillLayoutSubviews() {\n        \n        this.updateViewConstraints()\n        this.updateViewStyles()\n        \n    }\n    \n    viewDidLayoutSubviews() {\n        \n        // this.childViewControllers.forEach(function (controller, index, controllers) {\n        \n        //     controller._layoutViewSubviews();\n        \n        // })\n        \n        \n        \n    }\n    \n    \n    \n    viewDidReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        \n        \n    }\n    \n    \n    \n    get core() {\n        return this.view.core\n    }\n    \n    hasChildViewController(viewController: UIViewController) {\n        \n        // This is for performance reasons\n        if (!IS(viewController)) {\n            return NO\n        }\n        \n        for (let i = 0; i < this.childViewControllers.length; i++) {\n            \n            const childViewController = this.childViewControllers[i]\n            \n            if (childViewController == viewController) {\n                return YES\n            }\n            \n        }\n        \n        return NO\n        \n    }\n    \n    addChildViewController(viewController: UIViewController) {\n        if (!this.hasChildViewController(viewController)) {\n            viewController.willMoveToParentViewController(this)\n            this.childViewControllers.push(viewController)\n            //this.view.addSubview(viewController.view);\n            //viewController.didMoveToParentViewController(this);\n        }\n    }\n    \n    \n    removeFromParentViewController() {\n        const index = this.parentViewController.childViewControllers.indexOf(this)\n        if (index > -1) {\n            this.parentViewController.childViewControllers.splice(index, 1)\n            //this.view.removeFromSuperview();\n            this.parentViewController = nil\n        }\n    }\n    \n    willMoveToParentViewController(parentViewController) {\n    \n    }\n    \n    \n    didMoveToParentViewController(parentViewController: UIViewController) {\n        \n        this.parentViewController = parentViewController\n        \n    }\n    \n    removeChildViewController(controller: UIViewController) {\n    \n        controller = FIRST_OR_NIL(controller)\n        controller.viewWillDisappear()\n        if (IS(controller.parentViewController)) {\n            controller.removeFromParentViewController()\n        }\n        if (IS(controller.view)) {\n            controller.view.removeFromSuperview()\n        }\n        controller.viewDidDisappear()\n        \n    }\n    \n    \n    addChildViewControllerInContainer(controller: UIViewController, containerView: UIView) {\n    \n        controller = FIRST_OR_NIL(controller)\n        containerView = FIRST_OR_NIL(containerView)\n        controller.viewWillAppear()\n        this.addChildViewController(controller)\n        containerView.addSubview(controller.view)\n        controller.didMoveToParentViewController(this)\n        controller.viewDidAppear()\n    \n        controller.handleRouteRecursively(UIRoute.currentRoute)\n    \n    }\n    \n    addChildViewControllerInDialogView(controller: UIViewController, dialogView: UIDialogView) {\n    \n        controller = FIRST_OR_NIL(controller)\n        dialogView = FIRST_OR_NIL(dialogView)\n        controller.viewWillAppear()\n        this.addChildViewController(controller)\n        dialogView.view = controller.view\n    \n        const originalDismissFunction = dialogView.dismiss.bind(dialogView)\n    \n        dialogView.dismiss = animated => {\n        \n            originalDismissFunction(animated)\n            \n            this.removeChildViewController(controller)\n            \n        }\n        \n        controller.didMoveToParentViewController(this)\n        controller.viewDidAppear()\n    \n        controller.handleRouteRecursively(UIRoute.currentRoute)\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import \"./UICoreExtensions\"\nimport { UILanguageService } from \"./UIInterfaces\"\nimport { nil, NO, UIObject } from \"./UIObject\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView } from \"./UIView\"\nimport { UIViewController } from \"./UIViewController\"\n\n\n\nexport class UICore extends UIObject {\n    \n    rootViewController: UIViewController = nil\n    \n    paddingLength = 20\n    \n    static RootViewControllerClass: typeof UIViewController = nil\n    static main: UICore\n    \n    static languageService: UILanguageService = nil\n    \n    static readonly broadcastEventName = {\n        \n        \"RouteDidChange\": \"RouteDidChange\",\n        \"WindowDidResize\": \"WindowDidResize\"\n        \n    }\n    \n    constructor(rootDivElementID: string, rootViewControllerClass: typeof UIViewController) {\n        \n        super()\n    \n        UICore.RootViewControllerClass = rootViewControllerClass\n        UICore.main = UICore.main || this\n        \n        const rootViewElement = document.getElementById(rootDivElementID)\n        const rootView = new UIView(rootDivElementID, rootViewElement)\n        rootView.pausesPointerEvents = NO //YES;\n        rootView.core = this\n        \n        if (UICore.RootViewControllerClass) {\n            \n            if (!(UICore.RootViewControllerClass.prototype instanceof UIViewController) ||\n                (UICore.RootViewControllerClass as any) === UIViewController) {\n                \n                console.log(\n                    \"Error, UICore.RootViewControllerClass must be UIViewController or a subclass of UIViewController, \" +\n                    \"falling back to UIViewController.\"\n                )\n                \n                UICore.RootViewControllerClass = UIViewController\n                \n            }\n            \n            this.rootViewController = new UICore.RootViewControllerClass(rootView)\n            \n        }\n        else {\n            \n            this.rootViewController = new UIViewController(rootView)\n            \n        }\n        \n        this.rootViewController.viewWillAppear()\n        this.rootViewController.viewDidAppear()\n        \n        \n        this.rootViewController.view.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (sender, event) {\n                \n                (document.activeElement as HTMLElement).blur()\n                \n            }\n        )\n        \n        \n        \n        const windowDidResize = function (this: UICore) {\n            \n            // Doing layout two times to prevent page scrollbars from confusing the layout\n            this.rootViewController._triggerLayoutViewSubviews()\n            UIView.layoutViewsIfNeeded()\n            \n            this.rootViewController._triggerLayoutViewSubviews()\n            //UIView.layoutViewsIfNeeded()\n            \n            this.rootViewController.view.broadcastEventInSubtree({\n                \n                name: UICore.broadcastEventName.WindowDidResize,\n                parameters: nil\n                \n            })\n            \n        }\n        \n        window.addEventListener(\"resize\", windowDidResize.bind(this))\n        \n        const didScroll = function (this: UICore) {\n            \n            //code\n            \n            this.rootViewController.view.broadcastEventInSubtree({\n                \n                name: UIView.broadcastEventName.PageDidScroll,\n                parameters: nil\n                \n            })\n            \n            \n            \n        }.bind(this)\n        \n        window.addEventListener(\"scroll\", didScroll, false)\n        \n        const hashDidChange = function (this: UICore) {\n            \n            //code\n            \n            this.rootViewController.handleRouteRecursively(UIRoute.currentRoute)\n            \n            this.rootViewController.view.broadcastEventInSubtree({\n                \n                name: UICore.broadcastEventName.RouteDidChange,\n                parameters: nil\n                \n            })\n            \n            \n        }.bind(this)\n    \n        window.addEventListener(\"hashchange\", hashDidChange.bind(this), false)\n    \n        hashDidChange()\n    \n    \n    \n    }\n    \n    \n}\n\n\n\n\n\nArray.prototype.indexOf || (Array.prototype.indexOf = function (d, e) {\n    var a\n    if (null == this) {\n        throw new TypeError(\"\\\"this\\\" is null or not defined\")\n    }\n    const c = Object(this),\n        b = c.length >>> 0\n    if (0 === b) {\n        return -1\n    }\n    a = +e || 0\n    Infinity === Math.abs(a) && (a = 0)\n    if (a >= b) {\n        return -1\n    }\n    for (a = Math.max(0 <= a ? a : b - Math.abs(a), 0); a < b;) {\n        if (a in c && c[a] === d) {\n            return a\n        }\n        a++\n    }\n    return -1\n})\n\n\n\n\n\n\n\n\n\n\n", "import { UIObject } from \"./UIObject\"\n\n\n\n\n\nexport class UIPoint extends UIObject {\n    \n    constructor(public x: number, public y: number) {\n        \n        super()\n        \n    }\n    \n    \n    \n    \n    \n    copy() {\n        return new UIPoint(this.x, this.y)\n    }\n    \n    \n    isEqualTo(point: UIPoint) {\n    \n        const result = (this.x == point.x && this.y == point.y)\n    \n        return result\n        \n    }\n    \n    scale(zoom: number) {\n        const x = this.x\n        const y = this.y\n        this.x = x * zoom\n        this.y = y * zoom\n        return this\n    }\n    \n    \n    \n    add(v: UIPoint) {\n        this.x = this.x + v.x\n        this.y = this.y + v.y\n        return this\n    }\n    \n    subtract(v: UIPoint) {\n        this.x = this.x - v.x\n        this.y = this.y - v.y\n        return this\n    }\n    \n    to(b: UIPoint) {\n        const a = this\n        const ab = b.copy().add(a.copy().scale(-1))\n        return ab\n    }\n    \n    pointWithX(x: number) {\n        const result = this.copy()\n        result.x = x\n        return result\n    }\n    \n    pointWithY(y: number) {\n        const result = this.copy()\n        result.y = y\n        return result\n    }\n    \n    pointByAddingX(x: number) {\n        return this.pointWithX(this.x + x)\n    }\n    \n    pointByAddingY(y: number) {\n        return this.pointWithY(this.y + y)\n    }\n    \n    \n    get length() {\n        var result = this.x * this.x + this.y * this.y\n        result = Math.sqrt(result)\n        return result\n    }\n    \n    \n    didChange(b) {\n        \n        // Callback to be set by delegate\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { FIRST_OR_NIL, IS, IS_NIL, IS_NOT_NIL, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UIRectangle extends UIObject {\n    \n    _isBeingUpdated: boolean\n    rectanglePointDidChange: (b: any) => void\n    max: UIPoint\n    min: UIPoint\n    \n    \n    constructor(x: number = 0, y: number = 0, height: number = 0, width: number = 0) {\n        \n        super()\n        \n        this.min = new UIPoint(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\n        this.max = new UIPoint(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY)\n        \n        this.min.didChange = this.rectanglePointDidChange\n        this.max.didChange = this.rectanglePointDidChange\n        \n        this._isBeingUpdated = NO\n        \n        this.min = new UIPoint(x, y)\n        this.max = new UIPoint(x + width, y + height)\n        \n        if (IS_NIL(height)) {\n            this.max.y = height\n        }\n        \n        if (IS_NIL(width)) {\n            this.max.x = width\n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    copy() {\n        const result = new UIRectangle(this.x, this.y, this.height, this.width)\n        return result\n    }\n    \n    isEqualTo(rectangle: UIRectangle) {\n    \n    \n        const result = (IS(rectangle) && this.min.isEqualTo(rectangle.min) && this.max.isEqualTo(rectangle.max))\n    \n        return result\n        \n    }\n    \n    static zero() {\n    \n        const result = new UIRectangle(0, 0, 0, 0)\n    \n        return result\n        \n    }\n    \n    containsPoint(point: UIPoint) {\n        return this.min.x <= point.x && this.min.y <= point.y &&\n            point.x <= this.max.x && point.y <= this.max.y\n    }\n    \n    updateByAddingPoint(point: UIPoint) {\n        \n        if (!point) {\n            point = new UIPoint(0, 0)\n        }\n        \n        this.beginUpdates()\n    \n        const min = this.min.copy()\n        if (min.x === nil) {\n            min.x = this.max.x\n        }\n        if (min.y === nil) {\n            min.y = this.max.y\n        }\n    \n        const max = this.max.copy()\n        if (max.x === nil) {\n            max.x = this.min.x\n        }\n        if (max.y === nil) {\n            max.y = this.min.y\n        }\n        \n        this.min.x = Math.min(min.x, point.x)\n        this.min.y = Math.min(min.y, point.y)\n        this.max.x = Math.max(max.x, point.x)\n        this.max.y = Math.max(max.y, point.y)\n        \n        this.finishUpdates()\n        \n    }\n    \n    get height() {\n        if (this.max.y === nil) {\n            return nil\n        }\n        return this.max.y - this.min.y\n    }\n    \n    set height(height: number) {\n        this.max.y = this.min.y + height\n    }\n    \n    \n    \n    get width() {\n        if (this.max.x === nil) {\n            return nil\n        }\n        return this.max.x - this.min.x\n    }\n    \n    set width(width: number) {\n        this.max.x = this.min.x + width\n    }\n    \n    \n    \n    get x() {\n        return this.min.x\n    }\n    \n    set x(x: number) {\n        \n        this.beginUpdates()\n    \n        const width = this.width\n        this.min.x = x\n        this.max.x = this.min.x + width\n        \n        this.finishUpdates()\n        \n    }\n    \n    \n    get y() {\n        return this.min.y\n    }\n    \n    \n    set y(y: number) {\n        \n        this.beginUpdates()\n    \n        const height = this.height\n        this.min.y = y\n        this.max.y = this.min.y + height\n        \n        this.finishUpdates()\n        \n    }\n    \n    \n    \n    \n    get topLeft() {\n        \n        return this.min.copy()\n        \n    }\n    \n    get topRight() {\n        return new UIPoint(this.max.x, this.y)\n    }\n    \n    get bottomLeft() {\n        return new UIPoint(this.x, this.max.y)\n    }\n    \n    get bottomRight() {\n        \n        return this.max.copy()\n        \n    }\n    \n    \n    get center() {\n    \n        const result = this.min.copy().add(this.min.to(this.max).scale(0.5))\n    \n        return result\n        \n    }\n    \n    set center(center: UIPoint) {\n    \n        const offset = this.center.to(center)\n        this.offsetByPoint(offset)\n        \n    }\n    \n    offsetByPoint(offset: UIPoint) {\n        \n        this.min.add(offset)\n        this.max.add(offset)\n        \n        return this\n        \n    }\n    \n    \n    \n    concatenateWithRectangle(rectangle: UIRectangle) {\n        \n        this.updateByAddingPoint(rectangle.bottomRight)\n        this.updateByAddingPoint(rectangle.topLeft)\n        \n        return this\n        \n    }\n    \n    \n    \n    \n    \n    intersectionRectangleWithRectangle(rectangle: UIRectangle): UIRectangle {\n    \n    \n        const result = this.copy()\n    \n        result.beginUpdates()\n    \n        const min = result.min\n        if (min.x === nil) {\n            min.x = rectangle.max.x - Math.min(result.width, rectangle.width)\n        }\n        if (min.y === nil) {\n            min.y = rectangle.max.y - Math.min(result.height, rectangle.height)\n        }\n    \n        const max = result.max\n        if (max.x === nil) {\n            max.x = rectangle.min.x + Math.min(result.width, rectangle.width)\n        }\n        if (max.y === nil) {\n            max.y = rectangle.min.y + Math.min(result.height, rectangle.height)\n        }\n        \n        result.min.x = Math.max(result.min.x, rectangle.min.x)\n        result.min.y = Math.max(result.min.y, rectangle.min.y)\n        result.max.x = Math.min(result.max.x, rectangle.max.x)\n        result.max.y = Math.min(result.max.y, rectangle.max.y)\n        \n        \n        if (result.height < 0) {\n    \n            const averageY = (this.center.y + rectangle.center.y) * 0.5\n            result.min.y = averageY\n            result.max.y = averageY\n            \n        }\n        \n        if (result.width < 0) {\n    \n            const averageX = (this.center.x + rectangle.center.x) * 0.5\n            result.min.x = averageX\n            result.max.x = averageX\n            \n        }\n        \n        result.finishUpdates()\n        \n        return result\n        \n    }\n    \n    \n    \n    get area() {\n        const result = this.height * this.width\n        return result\n    }\n    \n    \n    intersectsWithRectangle(rectangle: UIRectangle) {\n        \n        return (this.intersectionRectangleWithRectangle(rectangle).area != 0)\n        \n    }\n    \n    \n    \n    \n    \n    // add some space around the rectangle\n    rectangleWithInsets(left: number, right: number, bottom: number, top: number) {\n        const result = this.copy()\n        result.min.x = this.min.x + left\n        result.max.x = this.max.x - right\n        result.min.y = this.min.y + top\n        result.max.y = this.max.y - bottom\n        return result\n    }\n    \n    rectangleWithInset(inset: number) {\n        const result = this.rectangleWithInsets(inset, inset, inset, inset)\n        return result\n    }\n    \n    rectangleWithHeight(height: number, centeredOnPosition: number = nil) {\n        \n        if (isNaN(centeredOnPosition)) {\n            centeredOnPosition = nil\n        }\n    \n        const result = this.copy()\n        result.height = height\n        \n        if (centeredOnPosition != nil) {\n            const change = height - this.height\n            result.offsetByPoint(new UIPoint(0, change * centeredOnPosition).scale(-1))\n        }\n        \n        return result\n        \n    }\n    \n    rectangleWithWidth(width: number, centeredOnPosition: number = nil) {\n        \n        if (isNaN(centeredOnPosition)) {\n            centeredOnPosition = nil\n        }\n    \n        const result = this.copy()\n        result.width = width\n        \n        if (centeredOnPosition != nil) {\n            const change = width - this.width\n            result.offsetByPoint(new UIPoint(change * centeredOnPosition, 0).scale(-1))\n        }\n        \n        return result\n        \n    }\n    \n    rectangleWithHeightRelativeToWidth(heightRatio: number = 1, centeredOnPosition: number = nil) {\n    \n        const result = this.rectangleWithHeight(this.width * heightRatio, centeredOnPosition)\n    \n        return result\n        \n    }\n    \n    rectangleWithWidthRelativeToHeight(widthRatio: number = 1, centeredOnPosition: number = nil) {\n    \n        const result = this.rectangleWithWidth(this.height * widthRatio, centeredOnPosition)\n    \n        return result\n        \n    }\n    \n    rectangleWithX(x: number, centeredOnPosition: number = 0) {\n    \n        const result = this.copy()\n        result.x = x - result.width * centeredOnPosition\n        \n        return result\n        \n    }\n    \n    rectangleWithY(y: number, centeredOnPosition: number = 0) {\n    \n        const result = this.copy()\n        result.y = y - result.height * centeredOnPosition\n        \n        return result\n        \n    }\n    \n    \n    \n    rectangleByAddingX(x: number) {\n    \n        const result = this.copy()\n        result.x = this.x + x\n        \n        return result\n        \n    }\n    \n    rectangleByAddingY(y: number) {\n    \n        const result = this.copy()\n        result.y = this.y + y\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    rectanglesBySplittingWidth(\n        weights: number[],\n        paddings: number | number[] = 0,\n        absoluteWidths: number | number[] = nil\n    ) {\n        \n        if (IS_NIL(paddings)) {\n            \n            paddings = 1\n            \n        }\n        \n        if (!(paddings instanceof Array)) {\n            \n            paddings = [paddings].arrayByRepeating(weights.length - 1)\n            \n        }\n        \n        paddings = paddings.arrayByTrimmingToLengthIfLonger(weights.length - 1)\n        \n        if (!(absoluteWidths instanceof Array) && IS_NOT_NIL(absoluteWidths)) {\n            absoluteWidths = [absoluteWidths].arrayByRepeating(weights.length)\n        }\n    \n        const result: UIRectangle[] = []\n        const sumOfWeights = weights.reduce(function (a, b, index) {\n            if (IS_NOT_NIL(absoluteWidths[index])) {\n                b = 0\n            }\n            return a + b\n        }, 0)\n        const sumOfPaddings = paddings.summedValue\n        const sumOfAbsoluteWidths = (absoluteWidths as number[]).summedValue\n        const totalRelativeWidth = this.width - sumOfPaddings - sumOfAbsoluteWidths\n        var previousCellMaxX = this.x\n    \n        for (var i = 0; i < weights.length; i++) {\n    \n            var resultWidth: number\n            if (IS_NOT_NIL(absoluteWidths[i])) {\n                \n                resultWidth = absoluteWidths[i] || 0\n                \n            }\n            else {\n                \n                resultWidth = totalRelativeWidth * (weights[i] / sumOfWeights)\n                \n            }\n    \n            const rectangle = this.rectangleWithWidth(resultWidth)\n    \n            var padding = 0\n            if (paddings.length > i && paddings[i]) {\n                padding = paddings[i]\n            }\n            \n            rectangle.x = previousCellMaxX\n            previousCellMaxX = rectangle.max.x + padding\n            //rectangle = rectangle.rectangleWithInsets(0, padding, 0, 0);\n            result.push(rectangle)\n            \n        }\n        \n        return result\n        \n    }\n    \n    rectanglesBySplittingHeight(\n        weights: number[],\n        paddings: number | number[] = 0,\n        absoluteHeights: number | number[] = nil\n    ) {\n        \n        if (IS_NIL(paddings)) {\n            \n            paddings = 1\n            \n        }\n        \n        if (!(paddings instanceof Array)) {\n            \n            paddings = [paddings].arrayByRepeating(weights.length - 1)\n            \n        }\n        \n        paddings = paddings.arrayByTrimmingToLengthIfLonger(weights.length - 1)\n        \n        if (!(absoluteHeights instanceof Array) && IS_NOT_NIL(absoluteHeights)) {\n            absoluteHeights = [absoluteHeights].arrayByRepeating(weights.length)\n        }\n    \n        const result: UIRectangle[] = []\n        const sumOfWeights = weights.reduce(function (a, b, index) {\n            if (IS_NOT_NIL(absoluteHeights[index])) {\n                b = 0\n            }\n            return a + b\n        }, 0)\n        const sumOfPaddings = paddings.summedValue\n        const sumOfAbsoluteHeights = (absoluteHeights as number[]).summedValue\n        const totalRelativeHeight = this.height - sumOfPaddings - sumOfAbsoluteHeights\n        var previousCellMaxY = this.y\n    \n        for (var i = 0; i < weights.length; i++) {\n            var resultHeight: number\n            if (IS_NOT_NIL(absoluteHeights[i])) {\n                \n                resultHeight = absoluteHeights[i] || 0\n                \n            }\n            else {\n                \n                resultHeight = totalRelativeHeight * (weights[i] / sumOfWeights)\n                \n            }\n    \n            const rectangle = this.rectangleWithHeight(resultHeight)\n    \n            var padding = 0\n            if (paddings.length > i && paddings[i]) {\n                padding = paddings[i]\n            }\n            \n            rectangle.y = previousCellMaxY\n            previousCellMaxY = rectangle.max.y + padding\n            //rectangle = rectangle.rectangleWithInsets(0, 0, padding, 0);\n            result.push(rectangle)\n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    rectanglesByEquallySplittingWidth(numberOfFrames: number, padding: number = 0) {\n        const result: UIRectangle[] = []\n        const totalPadding = padding * (numberOfFrames - 1)\n        const resultWidth = (this.width - totalPadding) / numberOfFrames\n        for (var i = 0; i < numberOfFrames; i++) {\n            const rectangle = this.rectangleWithWidth(resultWidth, i / (numberOfFrames - 1))\n            result.push(rectangle)\n        }\n        return result\n    }\n    \n    rectanglesByEquallySplittingHeight(numberOfFrames: number, padding: number = 0) {\n        const result: UIRectangle[] = []\n        const totalPadding = padding * (numberOfFrames - 1)\n        const resultHeight = (this.height - totalPadding) / numberOfFrames\n        for (var i = 0; i < numberOfFrames; i++) {\n            const rectangle = this.rectangleWithHeight(resultHeight, i / (numberOfFrames - 1))\n            result.push(rectangle)\n        }\n        return result\n    }\n    \n    \n    \n    distributeViewsAlongWidth(\n        views: UIView[],\n        weights: number | number[] = 1,\n        paddings?: number | number[],\n        absoluteWidths?: number | number[]\n    ) {\n        \n        if (!(weights instanceof Array)) {\n            weights = [weights].arrayByRepeating(views.length)\n        }\n    \n        const frames = this.rectanglesBySplittingWidth(weights, paddings, absoluteWidths)\n    \n        frames.forEach((frame, index, array) => FIRST_OR_NIL(views[index]).frame = frame)\n        \n        return this\n        \n    }\n    \n    distributeViewsAlongHeight(\n        views: UIView[],\n        weights: number | number[] = 1,\n        paddings?: number | number[],\n        absoluteHeights?: number | number[]\n    ) {\n        \n        if (!(weights instanceof Array)) {\n            weights = [weights].arrayByRepeating(views.length)\n        }\n    \n        const frames = this.rectanglesBySplittingHeight(weights, paddings, absoluteHeights)\n    \n        frames.forEach((frame, index, array) => FIRST_OR_NIL(views[index]).frame = frame)\n        \n        return this\n        \n    }\n    \n    \n    distributeViewsEquallyAlongWidth(views: UIView[], padding: number) {\n    \n        const frames = this.rectanglesByEquallySplittingWidth(views.length, padding)\n    \n        frames.forEach(function (frame, index, array) {\n            views[index].frame = frame\n        })\n        \n        return this\n        \n    }\n    \n    distributeViewsEquallyAlongHeight(views: UIView[], padding: number) {\n    \n        const frames = this.rectanglesByEquallySplittingHeight(views.length, padding)\n    \n        frames.forEach(function (frame, index, array) {\n            views[index].frame = frame\n        })\n        \n        return this\n        \n    }\n    \n    \n    \n    rectangleForNextRow(padding: number = 0, height = this.height) {\n        const result = this.rectangleWithY(this.max.y + padding)\n        if (height != this.height) {\n            result.height = height\n        }\n        return result\n    }\n    \n    rectangleForNextColumn(padding: number = 0, width = this.width) {\n        const result = this.rectangleWithX(this.max.x + padding)\n        if (width != this.width) {\n            result.width = width\n        }\n        return result\n    }\n    \n    rectangleForPreviousRow(padding: number = 0) {\n        const result = this.rectangleWithY(this.min.y - this.height - padding)\n        return result\n    }\n    \n    rectangleForPreviousColumn(padding: number = 0) {\n        const result = this.rectangleWithX(this.min.x - this.width - padding)\n        return result\n    }\n    \n    \n    \n    // Bounding box\n    static boundingBoxForPoints(points) {\n        const result = new UIRectangle()\n        for (var i = 0; i < points.length; i++) {\n            result.updateByAddingPoint(points[i])\n        }\n        return result\n    }\n    \n    \n    beginUpdates() {\n        this._isBeingUpdated = YES\n    }\n    \n    finishUpdates() {\n        this._isBeingUpdated = NO\n        this.didChange()\n    }\n    \n    \n    didChange() {\n        \n        // Callback to be set by delegate\n        \n    }\n    \n    _rectanglePointDidChange() {\n        \n        if (!this._isBeingUpdated) {\n            \n            this.didChange()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS_FIREFOX, IS_SAFARI } from \"./ClientCheckers\"\nimport { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport \"./UICoreExtensions\"\nimport { UILocalizedTextObject } from \"./UIInterfaces\"\nimport { FIRST, IS, IS_DEFINED, IS_NIL, IS_NOT, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIViewController } from \"./UIViewController\"\n\n\ndeclare module AutoLayout {\n    \n    \n    class Constraint {\n        \n        [key: string]: any\n        \n    }\n    \n    \n    class View {\n        \n        [key: string]: any\n        \n    }\n    \n    \n    class VisualFormat {\n        \n        static parse(arg0: any, arg1: any): any;\n        \n        [key: string]: any\n        \n    }\n    \n    \n    enum Attribute {\n        \n        LEFT, RIGHT, BOTTOM, TOP, CENTERX, CENTERY, WIDTH, HEIGHT, ZINDEX, VARIABLE, NOTANATTRIBUTE\n        \n    }\n    \n    \n    enum Relation {\n        \n        EQU, LEQ, GEQ\n        \n    }\n    \n    \n}\n\n// @ts-ignore\nif (!window.AutoLayout) {\n    \n    // @ts-ignore\n    window.AutoLayout = nil\n    \n}\n\n\n\ninterface LooseObject {\n    [key: string]: any\n}\n\n\nexport interface ControlEventTargetsObject {\n    \n    [key: string]: Function[];\n    \n}\n\n\nexport interface UIViewBroadcastEvent {\n    \n    name: string;\n    parameters: {\n        [key: string]: string | string[];\n    }\n    \n}\n\n\n\nexport type UIViewAddControlEventTargetObject<T extends typeof UIView.controlEvent> = {\n    \n    [K in keyof T]: ((sender: UIView, event: Event) => void) & Partial<UIViewAddControlEventTargetObject<T>>\n    \n}\n\n\n\n\n\nexport class UIView extends UIObject {\n    \n    _nativeSelectionEnabled: boolean = YES\n    _shouldLayout: boolean\n    _UITableViewRowIndex: number\n    _UITableViewReusabilityIdentifier: any\n    _UIViewIntrinsicTemporaryWidth: string\n    _UIViewIntrinsicTemporaryHeight: string\n    _enabled: boolean = YES\n    _frame: any\n    _backgroundColor: UIColor = UIColor.transparentColor\n    \n    _viewHTMLElement: HTMLElement & LooseObject\n    \n    _innerHTMLKey: string\n    _defaultInnerHTML: string\n    _parameters: { [x: string]: (string | UILocalizedTextObject) }\n    \n    _localizedTextObject: UILocalizedTextObject = nil\n    \n    _controlEventTargets: ControlEventTargetsObject = {} //{ \"PointerDown\": Function[]; \"PointerMove\": Function[]; \"PointerLeave\": Function[]; \"PointerEnter\": Function[]; \"PointerUpInside\": Function[]; \"PointerUp\": Function[]; \"PointerHover\": Function[]; };\n    _frameTransform: string\n    viewController: UIViewController = nil\n    _updateLayoutFunction: any = nil\n    // @ts-ignore\n    _constraints: any[] //AutoLayout.Constraint[];\n    superview: UIView\n    subviews: UIView[]\n    _styleClasses: any[]\n    _isHidden: boolean = NO\n    \n    pausesPointerEvents: boolean = NO\n    stopsPointerEventPropagation: boolean = YES\n    _isPointerInside: boolean\n    _isPointerValid: boolean\n    _initialPointerPosition: UIPoint\n    _hasPointerDragged: boolean\n    _pointerDragThreshold = 2\n    \n    ignoresTouches: boolean = NO\n    ignoresMouse: boolean = NO\n    \n    core: UICore = UICore.main\n    \n    static _UIViewIndex: number = -1\n    _UIViewIndex: number\n    \n    static _viewsToLayout: UIView[] = []\n    \n    forceIntrinsicSizeZero: boolean = NO\n    _touchEventTime: number\n    \n    static _pageScale = 1\n    \n    constructor(\n        elementID: string = (\"UIView\" +\n            UIView.nextIndex),\n        viewHTMLElement: HTMLElement & LooseObject = null,\n        elementType: string = null,\n        initViewData?: any\n    ) {\n        \n        super()\n        \n        // Instance variables\n        \n        UIView._UIViewIndex = UIView.nextIndex\n        this._UIViewIndex = UIView._UIViewIndex\n        \n        this._styleClasses = []\n        // Object.defineProperty(this, \"styleClasses\", { get: this.styleClasses, set: this.setStyleClasses });\n        // Object.defineProperty(this, \"styleClassName\", { get: this.styleClassName });\n        \n        this._initViewHTMLElement(elementID, viewHTMLElement, elementType)\n        \n        this.subviews = []\n        this.superview = nil\n        \n        // Object.defineProperty(this, \"elementID\", { get: this.elementID });\n        \n        // Object.defineProperty(this, \"constraints\", { get: this.constraints, set: this.setConstraints });\n        this._constraints = []\n        \n        this._updateLayoutFunction = nil\n        \n        //Object.defineProperty(this, \"backgroundColor\", { get: this.backgroundColor, set: this.setBackgroundColor });\n        //this.backgroundColor = \"transparent\";\n        \n        // Object.defineProperty(this, \"alpha\", { get: this.alpha, set: this.setAlpha });\n        \n        // Object.defineProperty(this, \"frame\", { get: this.frame, set: this.setFrame });\n        // Object.defineProperty(this, \"bounds\", { get: this.bounds, set: this.setBounds });\n        \n        // Object.defineProperty(this, \"userInteractionEnabled\", { get: this.userInteractionEnabled, set: this.setUserInteractionEnabled });\n        \n        // this._controlEventTargets = {\n        //     \"PointerDown\": [],\n        //     \"PointerMove\": [],\n        //     \"PointerLeave\": [],\n        //     \"PointerEnter\": [],\n        //     \"PointerUpInside\": [],\n        //     \"PointerUp\": [],\n        //     \"PointerHover\": []\n        // }\n        \n        \n        this._frameTransform = \"\"\n        \n        this.initView(this.viewHTMLElement.id, this.viewHTMLElement, initViewData)\n        \n        this._initViewCSSSelectorsIfNeeded()\n        \n        this._loadUIEvents()\n        \n        \n        this.setNeedsLayout()\n        \n        \n    }\n    \n    \n    static get nextIndex() {\n        \n        return UIView._UIViewIndex + 1\n        \n    }\n    \n    static get pageHeight() {\n        \n        const body = document.body\n        const html = document.documentElement\n        \n        const height = Math.max(\n            body.scrollHeight,\n            body.offsetHeight,\n            html.clientHeight,\n            html.scrollHeight,\n            html.offsetHeight\n        )\n        \n        return height\n        \n    }\n    \n    static get pageWidth() {\n        \n        const body = document.body\n        const html = document.documentElement\n        \n        const width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth)\n        \n        return width\n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData?: any) {\n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    centerInContainer() {\n        this.style.left = \"50%\"\n        this.style.top = \"50%\"\n        this.style.transform = \"translateX(-50%) translateY(-50%)\"\n    }\n    \n    centerXInContainer() {\n        this.style.left = \"50%\"\n        this.style.transform = \"translateX(-50%)\"\n    }\n    \n    centerYInContainer() {\n        this.style.top = \"50%\"\n        this.style.transform = \"translateY(-50%)\"\n    }\n    \n    \n    \n    _initViewHTMLElement(elementID, viewHTMLElement, elementType = \"div\") {\n        \n        \n        if (!IS(elementType)) {\n            \n            elementType = \"div\"\n            \n        }\n        \n        if (!IS(viewHTMLElement)) {\n            \n            this._viewHTMLElement = this.createElement(elementID, elementType)\n            \n            this.style.position = \"absolute\"\n            this.style.margin = \"0\"\n            \n        }\n        else {\n            \n            this._viewHTMLElement = viewHTMLElement\n            \n        }\n        \n        if (IS(elementID)) {\n            \n            \n            this.viewHTMLElement.id = elementID\n            \n            \n        }\n        \n        \n        this.viewHTMLElement.obeyAutolayout = YES\n        \n        this.viewHTMLElement.UIView = this\n        \n        this.addStyleClass(this.styleClassName)\n        \n    }\n    \n    \n    \n    set nativeSelectionEnabled(selectable: boolean) {\n        this._nativeSelectionEnabled = selectable\n        if (!selectable) {\n            this.style.cssText = this.style.cssText +\n                \" -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\"\n        }\n        else {\n            this.style.cssText = this.style.cssText +\n                \" -webkit-touch-callout: text; -webkit-user-select: text; -khtml-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text;\"\n        }\n    }\n    \n    \n    get nativeSelectionEnabled() {\n        return this._nativeSelectionEnabled\n    }\n    \n    \n    \n    get styleClassName() {\n        \n        const result = \"UICore_UIView_\" + this.class.name\n        \n        return result\n        \n    }\n    \n    _initViewCSSSelectorsIfNeeded() {\n        \n        if (!this.class._areViewCSSSelectorsInitialized) {\n            \n            this.initViewStyleSelectors()\n            \n            this.class._areViewCSSSelectorsInitialized = YES\n            \n        }\n        \n    }\n    \n    initViewStyleSelectors() {\n        \n        // Override this in a subclass\n        \n    }\n    \n    initStyleSelector(selector, style) {\n        \n        const styleRules = UIView.getStyleRules(selector)\n        \n        if (!styleRules) {\n            \n            UIView.createStyleSelector(selector, style)\n            \n        }\n        \n    }\n    \n    \n    createElement(elementID, elementType) {\n        let result = document.getElementById(elementID)\n        if (!result) {\n            result = document.createElement(elementType)\n        }\n        return result\n    }\n    \n    public get viewHTMLElement() {\n        return this._viewHTMLElement\n    }\n    \n    public get elementID() {\n        \n        return this.viewHTMLElement.id\n        \n    }\n    \n    \n    setInnerHTML(key: string, defaultString: string, parameters?: { [x: string]: string | UILocalizedTextObject }) {\n        \n        this._innerHTMLKey = key\n        this._defaultInnerHTML = defaultString\n        this._parameters = parameters\n        \n        const languageName = UICore.languageService.currentLanguageKey\n        const result = UICore.languageService.stringForKey(key, languageName, defaultString, parameters)\n        \n        this.innerHTML = result\n        \n    }\n    \n    \n    _setInnerHTMLFromKeyIfPossible() {\n        \n        if (this._innerHTMLKey && this._defaultInnerHTML) {\n            \n            this.setInnerHTML(this._innerHTMLKey, this._defaultInnerHTML, this._parameters)\n            \n        }\n        \n    }\n    \n    _setInnerHTMLFromLocalizedTextObjectIfPossible() {\n        \n        if (IS(this._localizedTextObject)) {\n            \n            this.innerHTML = UICore.languageService.stringForCurrentLanguage(this._localizedTextObject)\n            \n        }\n        \n    }\n    \n    \n    get localizedTextObject() {\n        \n        return this._localizedTextObject\n        \n    }\n    \n    set localizedTextObject(localizedTextObject: UILocalizedTextObject) {\n        \n        this._localizedTextObject = localizedTextObject\n        \n        this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n        \n    }\n    \n    \n    get innerHTML() {\n        return this.viewHTMLElement.innerHTML\n    }\n    \n    \n    set innerHTML(innerHTML) {\n        \n        if (this.innerHTML != innerHTML) {\n            \n            this.viewHTMLElement.innerHTML = FIRST(innerHTML, \"\")\n            \n        }\n        \n    }\n    \n    \n    \n    set hoverText(hoverText: string) {\n        this.viewHTMLElement.setAttribute(\"title\", hoverText)\n    }\n    \n    get hoverText() {\n        return this.viewHTMLElement.getAttribute(\"title\")\n    }\n    \n    \n    get scrollSize() {\n        \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.scrollHeight, this.viewHTMLElement.scrollWidth)\n        \n        return result\n        \n    }\n    \n    \n    \n    get dialogView(): UIDialogView {\n        if (!IS(this.superview)) {\n            return nil\n        }\n        if (!(this[\"_isAUIDialogView\"])) {\n            return this.superview.dialogView\n        }\n        return this as any as UIDialogView\n    }\n    \n    \n    get rootView(): UIView {\n        if (IS(this.superview)) {\n            return this.superview.rootView\n        }\n        return this\n    }\n    \n    \n    public set enabled(enabled: boolean) {\n        this._enabled = enabled\n        this.updateContentForCurrentEnabledState()\n    }\n    \n    public get enabled(): boolean {\n        return this._enabled\n    }\n    \n    updateContentForCurrentEnabledState() {\n        this.hidden = !this.enabled\n        this.userInteractionEnabled = this.enabled\n    }\n    \n    \n    \n    \n    public get tabIndex(): number {\n        \n        return Number(this.viewHTMLElement.getAttribute(\"tabindex\"))\n        \n    }\n    \n    \n    public set tabIndex(index: number) {\n        \n        this.viewHTMLElement.setAttribute(\"tabindex\", \"\" + index)\n        \n    }\n    \n    \n    \n    \n    \n    get styleClasses() {\n        \n        return this._styleClasses\n        \n    }\n    \n    set styleClasses(styleClasses) {\n        \n        this._styleClasses = styleClasses\n        \n    }\n    \n    hasStyleClass(styleClass) {\n        \n        // This is for performance reasons\n        if (!IS(styleClass)) {\n            return NO\n        }\n        \n        const index = this.styleClasses.indexOf(styleClass)\n        if (index > -1) {\n            return YES\n        }\n        return NO\n        \n    }\n    \n    \n    \n    addStyleClass(styleClass: string) {\n        \n        if (!IS(styleClass)) {\n            return\n        }\n        \n        if (!this.hasStyleClass(styleClass)) {\n            this._styleClasses.push(styleClass)\n        }\n        \n    }\n    \n    removeStyleClass(styleClass: string) {\n        \n        // This is for performance reasons\n        if (!IS(styleClass)) {\n            return\n        }\n        \n        const index = this.styleClasses.indexOf(styleClass)\n        if (index > -1) {\n            \n            this.styleClasses.splice(index, 1)\n            \n        }\n        \n        \n    }\n    \n    \n    \n    static findViewWithElementID(elementID: string): UIView {\n        const viewHTMLElement = document.getElementById(elementID)\n        if (IS_NOT(viewHTMLElement)) {\n            return nil\n        }\n        // @ts-ignore\n        const result = viewHTMLElement.UIView\n        return result\n    }\n    \n    \n    \n    \n    static createStyleSelector(selector, style) {\n        \n        return\n        \n        // @ts-ignore\n        if (!document.styleSheets) {\n            return\n        }\n        if (document.getElementsByTagName(\"head\").length == 0) {\n            return\n        }\n        \n        var styleSheet\n        var mediaType\n        \n        if (document.styleSheets.length > 0) {\n            for (var i = 0, l: any = document.styleSheets.length; i < l; i++) {\n                if (document.styleSheets[i].disabled) {\n                    continue\n                }\n                const media = document.styleSheets[i].media\n                mediaType = typeof media\n                \n                if (mediaType === \"string\") {\n                    if (media as any === \"\" || ((media as any).indexOf(\"screen\") !== -1)) {\n                        styleSheet = document.styleSheets[i]\n                    }\n                }\n                else if (mediaType == \"object\") {\n                    if (media.mediaText === \"\" || (media.mediaText.indexOf(\"screen\") !== -1)) {\n                        styleSheet = document.styleSheets[i]\n                    }\n                }\n                \n                if (typeof styleSheet !== \"undefined\") {\n                    break\n                }\n            }\n        }\n        \n        if (typeof styleSheet === \"undefined\") {\n            const styleSheetElement = document.createElement(\"style\")\n            styleSheetElement.type = \"text/css\"\n            document.getElementsByTagName(\"head\")[0].appendChild(styleSheetElement)\n            \n            for (i = 0; i < document.styleSheets.length; i++) {\n                if (document.styleSheets[i].disabled) {\n                    continue\n                }\n                styleSheet = document.styleSheets[i]\n            }\n            \n            mediaType = typeof styleSheet.media\n        }\n        \n        if (mediaType === \"string\") {\n            for (var i = 0, l = styleSheet.rules.length; i < l; i++) {\n                if (styleSheet.rules[i].selectorText && styleSheet.rules[i].selectorText.toLowerCase() ==\n                    selector.toLowerCase()) {\n                    styleSheet.rules[i].style.cssText = style\n                    return\n                }\n            }\n            styleSheet.addRule(selector, style)\n        }\n        else if (mediaType === \"object\") {\n            \n            var styleSheetLength = 0\n            \n            try {\n                \n                styleSheetLength = (styleSheet.cssRules) ? styleSheet.cssRules.length : 0\n                \n            } catch (error) {\n                \n            }\n            \n            \n            for (var i = 0; i < styleSheetLength; i++) {\n                if (styleSheet.cssRules[i].selectorText && styleSheet.cssRules[i].selectorText.toLowerCase() ==\n                    selector.toLowerCase()) {\n                    styleSheet.cssRules[i].style.cssText = style\n                    return\n                }\n            }\n            styleSheet.insertRule(selector + \"{\" + style + \"}\", styleSheetLength)\n        }\n    }\n    \n    static getStyleRules(selector) {\n        var selector = selector.toLowerCase()\n        for (var i = 0; i < document.styleSheets.length; i++) {\n            const styleSheet = document.styleSheets[i] as any\n            var styleRules\n            \n            try {\n                \n                styleRules = styleSheet.cssRules ? styleSheet.cssRules : styleSheet.rules\n                \n            } catch (error) {\n                \n            }\n            \n            return styleRules\n        }\n    }\n    \n    \n    \n    get style() {\n        return this.viewHTMLElement.style\n    }\n    \n    get computedStyle() {\n        return getComputedStyle(this.viewHTMLElement)\n    }\n    \n    public get hidden(): boolean {\n        return this._isHidden\n    }\n    \n    \n    public set hidden(v: boolean) {\n        \n        this._isHidden = v\n        \n        if (this._isHidden) {\n            this.style.visibility = \"hidden\"\n        }\n        else {\n            this.style.visibility = \"visible\"\n        }\n        \n        \n    }\n    \n    static set pageScale(scale: number) {\n        \n        UIView._pageScale = scale\n        \n        const zoom = scale\n        const width = 100 / zoom\n        const viewHTMLElement = UICore.main.rootViewController.view.viewHTMLElement\n        viewHTMLElement.style.transformOrigin = \"left top\"\n        viewHTMLElement.style.transform = \"scale(\" + zoom + \")\"\n        viewHTMLElement.style.width = width + \"%\"\n        \n    }\n    \n    static get pageScale() {\n        \n        return UIView._pageScale\n        \n    }\n    \n    \n    \n    \n    \n    calculateAndSetViewFrame() {\n        \n        // Use this method to calculate the frame for the view itself\n        \n        // This can be used when adding subviews to existing views like buttons\n        \n    }\n    \n    \n    \n    \n    \n    public get frame(): UIRectangle {\n        \n        // var result = new UIRectangle(1 * this.viewHTMLElement.offsetLeft, 1 * this.viewHTMLElement.offsetTop, 1 * this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth);\n        \n        // result.zIndex = 1 * this.style.zIndex;\n        \n        var result = this._frame\n        \n        if (!result) {\n            \n            result = new UIRectangle(1 * this.viewHTMLElement.offsetLeft, 1 * this.viewHTMLElement.offsetTop, 1 *\n                this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth)\n            result.zIndex = 0\n            \n        }\n        \n        return result.copy()\n        \n    }\n    \n    public set frame(rectangle: UIRectangle) {\n        \n        if (IS(rectangle)) {\n            this.setFrame(rectangle)\n        }\n        \n    }\n    \n    setFrame(rectangle, zIndex = 0, performUncheckedLayout = NO) {\n        \n        \n        const frame = this._frame || new UIRectangle(nil, nil, nil, nil)\n        \n        if (zIndex != undefined) {\n            rectangle.zIndex = zIndex\n        }\n        this._frame = rectangle\n        \n        // This is useless because frames are copied\n        // frame.didChange = function () {\n        //     // Do nothing\n        // }\n        // rectangle.didChange = function () {\n        //     this.frame = rectangle;\n        // }.bind(this);\n        \n        if (frame && frame.isEqualTo(rectangle) && !performUncheckedLayout) {\n            return\n        }\n        \n        \n        UIView._setAbsoluteSizeAndPosition(\n            this.viewHTMLElement,\n            rectangle.topLeft.x,\n            rectangle.topLeft.y,\n            rectangle.width,\n            rectangle.height,\n            rectangle.zIndex\n        )\n        \n        \n        if (frame.height != rectangle.height || frame.width != rectangle.width || performUncheckedLayout) {\n            \n            this.setNeedsLayout()\n            \n            this.boundsDidChange()\n            \n            //this.layoutSubviews();\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    get bounds() {\n        \n        var result: UIRectangle\n        \n        // if (IS_NOT(this._frame) && this.style.height == \"\" && this.style.width  == \"\" && this.style.left == \"\" && this.style.right == \"\" && this.style.bottom == \"\" && this.style.top == \"\") {\n        \n        //     result = new UIRectangle(0, 0, 0, 0)\n        \n        // }\n        // else\n        if (IS_NOT(this._frame)) {\n            \n            result = new UIRectangle(0, 0, 1 * this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth)\n            \n        }\n        else {\n            \n            result = this.frame.copy()\n            \n            result.x = 0\n            result.y = 0\n            \n        }\n        \n        return result\n        \n    }\n    \n    set bounds(rectangle) {\n        \n        const frame = this.frame\n        \n        this.frame = new UIRectangle(frame.topLeft.x, frame.topLeft.y, rectangle.height, rectangle.width)\n        \n    }\n    \n    \n    boundsDidChange() {\n        \n        \n        \n    }\n    \n    \n    setPosition(\n        left: number | string = nil,\n        right: number | string = nil,\n        bottom: number | string = nil,\n        top: number | string = nil,\n        height: number | string = nil,\n        width: number | string = nil\n    ) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"left\", left)\n        this.setStyleProperty(\"right\", right)\n        this.setStyleProperty(\"bottom\", bottom)\n        this.setStyleProperty(\"top\", top)\n        this.setStyleProperty(\"height\", height)\n        this.setStyleProperty(\"width\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"height\", height)\n        this.setStyleProperty(\"width\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMinSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"minHeight\", height)\n        this.setStyleProperty(\"minWidth\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMaxSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"maxHeight\", height)\n        this.setStyleProperty(\"maxWidth\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMargin(margin?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"margin\", margin)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMargins(left?: number | string, right?: number | string, bottom?: number | string, top?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"marginLeft\", left)\n        this.setStyleProperty(\"marginRight\", right)\n        this.setStyleProperty(\"marginBottom\", bottom)\n        this.setStyleProperty(\"marginTop\", top)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setPadding(padding?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"padding\", padding)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setPaddings(left?: number | string, right?: number | string, bottom?: number | string, top?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"paddingLeft\", left)\n        this.setStyleProperty(\"paddingRight\", right)\n        this.setStyleProperty(\"paddingBottom\", bottom)\n        this.setStyleProperty(\"paddingTop\", top)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    \n    \n    \n    \n    setBorder(\n        radius: number | string = nil,\n        width: number | string = 1,\n        color: UIColor = UIColor.blackColor,\n        style: string = \"solid\"\n    ) {\n        \n        this.setStyleProperty(\"borderStyle\", style)\n        \n        this.setStyleProperty(\"borderRadius\", radius)\n        \n        this.setStyleProperty(\"borderColor\", color.stringValue)\n        \n        this.setStyleProperty(\"borderWidth\", width)\n        \n    }\n    \n    \n    \n    \n    \n    setStyleProperty(propertyName: string, value?: number | string) {\n        \n        \n        try {\n            \n            if (IS_NIL(value)) {\n                return\n            }\n            if (IS_DEFINED(value) && (value as Number).isANumber) {\n                value = \"\" + (value as number).integerValue + \"px\"\n            }\n            this.style[propertyName] = value\n            \n        } catch (exception) {\n            \n            console.log(exception)\n            \n        }\n        \n        \n    }\n    \n    \n    \n    get userInteractionEnabled() {\n        \n        const result = (this.style.pointerEvents != \"none\")\n        \n        return result\n        \n    }\n    \n    set userInteractionEnabled(userInteractionEnabled) {\n        \n        if (userInteractionEnabled) {\n            \n            this.style.pointerEvents = \"\"\n            \n        }\n        else {\n            \n            this.style.pointerEvents = \"none\"\n            \n        }\n        \n    }\n    \n    \n    \n    get backgroundColor() {\n        return this._backgroundColor\n    }\n    \n    set backgroundColor(backgroundColor: UIColor) {\n        \n        this._backgroundColor = backgroundColor\n        \n        this.style.backgroundColor = backgroundColor.stringValue\n        \n    }\n    \n    \n    \n    get alpha() {\n        return 1 * (this.style.opacity as any)\n    }\n    \n    set alpha(alpha) {\n        this.style.opacity = \"\" + alpha\n    }\n    \n    \n    \n    \n    \n    static animateViewOrViewsWithDurationDelayAndFunction(\n        viewOrViews: UIView | HTMLElement | UIView[] | HTMLElement[],\n        duration: number,\n        delay: number,\n        timingStyle = \"cubic-bezier(0.25,0.1,0.25,1)\",\n        transformFunction: Function,\n        transitioncompletionFunction: Function\n    ) {\n        \n        \n        function callTransitioncompletionFunction() {\n            \n            (transitioncompletionFunction || nil)();\n            \n            (viewOrViews as UIView[]).forEach(function (view, index, array) {\n                \n                view.animationDidFinish()\n                \n            })\n            \n        }\n        \n        \n        if (IS_FIREFOX) {\n            \n            // Firefox does not fire the transition completion event properly\n            new UIObject().performFunctionWithDelay(delay + duration, callTransitioncompletionFunction)\n            \n            \n            \n        }\n        \n        \n        if (!(viewOrViews instanceof Array)) {\n            viewOrViews = [viewOrViews] as any\n        }\n        \n        const transitionStyles = []\n        const transitionDurations = []\n        const transitionDelays = []\n        const transitionTimings = []\n        \n        for (var i = 0; i < (viewOrViews as any).length; i++) {\n            \n            var view = viewOrViews[i]\n            \n            if (view.viewHTMLElement) {\n                \n                view = view.viewHTMLElement\n                \n            }\n            \n            view.addEventListener(\"transitionend\", transitionDidFinish, true)\n            \n            transitionStyles.push(view.style.transition)\n            transitionDurations.push(view.style.transitionDuration)\n            transitionDelays.push(view.style.transitionDelay)\n            transitionTimings.push(view.style.transitionTimingFunction)\n            \n            view.style.transition = \"all\"\n            view.style.transitionDuration = \"\" + duration + \"s\"\n            view.style.transitionDelay = \"\" + delay + \"s\"\n            view.style.transitionTimingFunction = timingStyle\n            \n        }\n        \n        \n        \n        transformFunction()\n        \n        \n        const transitionObject = {\n            \n            \"finishImmediately\": finishTransitionImmediately,\n            \"didFinish\": transitionDidFinishManually,\n            \"views\": viewOrViews,\n            \"registrationTime\": Date.now()\n            \n        }\n        \n        function finishTransitionImmediately() {\n            for (var i = 0; i < (viewOrViews as any).length; i++) {\n                var view = viewOrViews[i]\n                if (view.viewHTMLElement) {\n                    view = view.viewHTMLElement\n                }\n                view.style.transition = \"all\"\n                view.style.transitionDuration = \"\" + duration + \"s\"\n                view.style.transitionDelay = \"\" + delay + \"s\"\n                view.style.transition = transitionStyles[i]\n                view.style.transitionDuration = transitionDurations[i]\n                view.style.transitionDelay = transitionDelays[i]\n                view.style.transitionTimingFunction = transitionTimings[i]\n            }\n        }\n        \n        function transitionDidFinish(event) {\n            var view = event.srcElement\n            if (!view) {\n                return\n            }\n            if (view.viewHTMLElement) {\n                view = view.viewHTMLElement\n            }\n            view.style.transition = transitionStyles[i]\n            view.style.transitionDuration = transitionDurations[i]\n            view.style.transitionDelay = transitionDelays[i]\n            view.style.transitionTimingFunction = transitionTimings[i]\n            \n            callTransitioncompletionFunction()\n            \n            view.removeEventListener(\"transitionend\", transitionDidFinish, true)\n            \n        }\n        \n        function transitionDidFinishManually() {\n            for (var i = 0; i < (viewOrViews as any).length; i++) {\n                \n                var view = viewOrViews[i]\n                \n                if (view.viewHTMLElement) {\n                    view = view.viewHTMLElement\n                }\n                \n                view.style.transition = transitionStyles[i]\n                view.style.transitionDuration = transitionDurations[i]\n                view.style.transitionDelay = transitionDelays[i]\n                view.style.transitionTimingFunction = transitionTimings[i]\n                \n                view.removeEventListener(\"transitionend\", transitionDidFinish, true)\n                \n            }\n            \n            \n            \n        }\n        \n        return transitionObject\n        \n    }\n    \n    \n    \n    \n    \n    animationDidFinish() {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    static _transformAttribute = ((\"transform\" in document.documentElement.style) ? \"transform\" : undefined) ||\n        ((\"-webkit-transform\" in document.documentElement.style) ? \"-webkit-transform\" : \"undefined\") ||\n        ((\"-moz-transform\" in document.documentElement.style) ? \"-moz-transform\" : \"undefined\") ||\n        ((\"-ms-transform\" in document.documentElement.style) ? \"-ms-transform\" : \"undefined\") ||\n        ((\"-o-transform\" in document.documentElement.style) ? \"-o-transform\" : \"undefined\")\n    \n    static _setAbsoluteSizeAndPosition(element, left, top, width, height, zIndex = 0) {\n        \n        // if (!UIView._transformAttribute) {\n        \n        //     UIView._transformAttribute = (('transform' in document.documentElement.style) ? 'transform' : undefined);\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-webkit-transform' in document.documentElement.style) ? '-webkit-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-moz-transform' in document.documentElement.style) ? '-moz-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-ms-transform' in document.documentElement.style) ? '-ms-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-o-transform' in document.documentElement.style) ? '-o-transform' : 'undefined');\n        \n        // }\n        \n        if (!IS(element) || !element.obeyAutolayout && !element.getAttribute(\"obeyAutolayout\")) {\n            return\n        }\n        \n        if (element.id == \"mainView\") {\n            \n            \n            var asd = 1\n            \n        }\n        \n        if (IS(height)) {\n            height = height.integerValue + \"px\"\n        }\n        \n        if (IS(width)) {\n            width = width.integerValue + \"px\"\n        }\n        \n        var str = element.style.cssText\n        \n        const frameTransform = UIView._transformAttribute + \": translate3d(\" + (1 * left).integerValue + \"px, \" +\n            (1 * top).integerValue + \"px, \" + zIndex.integerValue + \"px)\"\n        \n        if (element.UIView) {\n            str = str + frameTransform + \";\"\n        }\n        else {\n            element.UIView._frameTransform = frameTransform\n        }\n        \n        if (height == nil) {\n            str = str + \" height: unset;\"\n        }\n        else {\n            str = str + \" height:\" + height + \";\"\n        }\n        \n        if (width == nil) {\n            str = str + \" width: unset;\"\n        }\n        else {\n            str = str + \" width:\" + width + \";\"\n        }\n        \n        if (element.id == \"mainView\") {\n            \n            \n            var asd = 1\n            \n        }\n        \n        element.style.cssText = element.style.cssText + str\n        \n    }\n    \n    \n    \n    static performAutoLayout(parentElement, visualFormatArray, constraintsArray) {\n        \n        \n        const view = new AutoLayout.View()\n        \n        if (IS(visualFormatArray) && IS(visualFormatArray.length)) {\n            view.addConstraints(AutoLayout.VisualFormat.parse(visualFormatArray, { extended: true }))\n        }\n        \n        if (IS(constraintsArray) && IS(constraintsArray.length)) {\n            view.addConstraints(constraintsArray)\n        }\n        \n        const elements = {}\n        for (var key in view.subViews) {\n            \n            if (!view.subViews.hasOwnProperty(key)) {\n                continue\n            }\n            \n            var element = nil\n            \n            try {\n                \n                element = parentElement.querySelector(\"#\" + key)\n                \n            } catch (error) {\n                \n                //console.log(\"Error occurred \" + error);\n                \n            }\n            \n            if (element && !element.obeyAutolayout && !element.getAttribute(\"obeyAutolayout\")) {\n            \n            \n            \n            }\n            else if (element) {\n                \n                element.className += element.className ? \" abs\" : \"abs\"\n                elements[key] = element\n                \n            }\n            \n        }\n        \n        var parentUIView = nil\n        \n        if (parentElement.UIView) {\n            \n            parentUIView = parentElement.UIView\n            \n        }\n        \n        const updateLayout = function () {\n            view.setSize(\n                parentElement ? parentElement.clientWidth : window.innerWidth,\n                parentElement ? parentElement.clientHeight : window.innerHeight\n            )\n            for (key in view.subViews) {\n                \n                if (!view.subViews.hasOwnProperty(key)) {\n                    continue\n                }\n                \n                const subView = view.subViews[key]\n                \n                if (elements[key]) {\n                    UIView._setAbsoluteSizeAndPosition(\n                        elements[key],\n                        subView.left,\n                        subView.top,\n                        subView.width,\n                        subView.height\n                    )\n                }\n            }\n            \n            parentUIView.didLayoutSubviews()\n            \n        }\n        \n        updateLayout()\n        return updateLayout\n        \n    }\n    \n    \n    static runFunctionBeforeNextFrame(step: () => void) {\n        \n        if (IS_SAFARI) {\n            \n            // This creates a microtask\n            Promise.resolve().then(step)\n            \n        }\n        else {\n            \n            window.requestAnimationFrame(step)\n            \n        }\n        \n    }\n    \n    \n    static scheduleLayoutViewsIfNeeded() {\n        \n        UIView.runFunctionBeforeNextFrame(UIView.layoutViewsIfNeeded)\n        \n    }\n    \n    \n    static layoutViewsIfNeeded() {\n        for (var i = 0; i < UIView._viewsToLayout.length; i++) {\n            const view = UIView._viewsToLayout[i]\n            view.layoutIfNeeded()\n        }\n        UIView._viewsToLayout = []\n    }\n    \n    \n    setNeedsLayout() {\n        \n        if (this._shouldLayout) {\n            return\n        }\n        \n        this._shouldLayout = YES\n        \n        // Register view for layout before next frame\n        UIView._viewsToLayout.push(this)\n        \n        if (UIView._viewsToLayout.length == 1) {\n            UIView.scheduleLayoutViewsIfNeeded()\n        }\n        \n    }\n    \n    \n    get needsLayout() {\n        \n        return this._shouldLayout\n        \n    }\n    \n    \n    layoutIfNeeded() {\n        \n        if (!this._shouldLayout) {\n            return\n        }\n        \n        this._shouldLayout = NO\n        \n        try {\n            \n            this.layoutSubviews()\n            \n        } catch (exception) {\n            \n            console.log(exception)\n            \n        }\n        \n    }\n    \n    \n    layoutSubviews() {\n    \n        this.willLayoutSubviews()\n        \n        this._shouldLayout = NO\n        \n        // Autolayout\n        if (this.constraints.length) {\n            this._updateLayoutFunction = UIView.performAutoLayout(this.viewHTMLElement, null, this.constraints)\n        }\n        this._updateLayoutFunction()\n    \n        this.viewController.layoutViewSubviews()\n        \n        this.applyClassesAndStyles()\n    \n        for (let i = 0; i < this.subviews.length; i++) {\n        \n            const subview = this.subviews[i]\n            subview.calculateAndSetViewFrame()\n        \n        }\n        \n        this.didLayoutSubviews()\n        \n    }\n    \n    \n    \n    applyClassesAndStyles() {\n        \n        \n        \n        //var classesString = \"\";\n        \n        for (var i = 0; i < this.styleClasses.length; i++) {\n            \n            const styleClass = this.styleClasses[i]\n            \n            if (styleClass) {\n                \n                this.viewHTMLElement.classList.add(styleClass)\n                \n            }\n            \n            \n            \n            //classesString = classesString + \" \" + styleClass;\n    \n        }\n    \n    \n        //this.viewHTMLElement.className = classesString;\n    \n    \n    \n    }\n    \n    willLayoutSubviews() {\n        \n        this.viewController.viewWillLayoutSubviews()\n        \n    }\n    \n    didLayoutSubviews() {\n        \n        this.viewController.viewDidLayoutSubviews()\n        \n    }\n    \n    get constraints() {\n        return this._constraints\n    }\n    \n    set constraints(constraints) {\n        this._constraints = constraints\n    }\n    \n    addConstraint(constraint) {\n        \n        this.constraints.push(constraint)\n        \n    }\n    \n    \n    \n    addConstraintsWithVisualFormat(visualFormatArray) {\n        \n        this.constraints = this.constraints.concat(AutoLayout.VisualFormat.parse(\n            visualFormatArray,\n            { extended: true }\n        ))\n        \n    }\n    \n    static constraintWithView(view, attribute, relation, toView, toAttribute, multiplier, constant, priority) {\n        \n        var UIViewObject = nil\n        var viewID = null\n        if (view) {\n            if (view.isKindOfClass && view.isKindOfClass(UIView)) {\n                UIViewObject = view\n                view = view.viewHTMLElement\n            }\n            viewID = view.id\n        }\n        \n        var toUIViewObject = nil\n        var toViewID = null\n        if (toView) {\n            if (toView.isKindOfClass && view.isKindOfClass(UIView)) {\n                toUIViewObject = toView\n                toView = toView.viewHTMLElement\n            }\n            toViewID = toView.id\n        }\n        \n        const constraint = {\n            \n            view1: viewID,\n            attr1: attribute,\n            relation: relation,\n            view2: toViewID,\n            attr2: toAttribute,\n            multiplier: multiplier,\n            constant: constant,\n            priority: priority\n            \n        }\n        \n        return constraint\n        \n    }\n    \n    static constraintAttribute = {\n        \n        \"left\": AutoLayout.Attribute.LEFT,\n        \"right\": AutoLayout.Attribute.RIGHT,\n        \"bottom\": AutoLayout.Attribute.BOTTOM,\n        \"top\": AutoLayout.Attribute.TOP,\n        \"centerX\": AutoLayout.Attribute.CENTERX,\n        \"centerY\": AutoLayout.Attribute.CENTERY,\n        \"height\": AutoLayout.Attribute.HEIGHT,\n        \"width\": AutoLayout.Attribute.WIDTH,\n        \"zIndex\": AutoLayout.Attribute.ZINDEX,\n        // Not sure what these are for\n        \"constant\": AutoLayout.Attribute.NOTANATTRIBUTE,\n        \"variable\": AutoLayout.Attribute.VARIABLE\n        \n    }\n    \n    static constraintRelation = {\n        \n        \"equal\": AutoLayout.Relation.EQU,\n        \"lessThanOrEqual\": AutoLayout.Relation.LEQ,\n        \"greaterThanOrEqual\": AutoLayout.Relation.GEQ\n        \n    }\n    \n    \n    \n    subviewWithID(viewID) {\n        \n        \n        var resultHTMLElement = nil\n        \n        try {\n            \n            resultHTMLElement = this.viewHTMLElement.querySelector(\"#\" + viewID)\n            \n        } catch (error) {\n        \n        }\n        \n        if (resultHTMLElement && resultHTMLElement.UIView) {\n            return resultHTMLElement.UIView\n        }\n        return nil\n    }\n    \n    \n    \n    rectangleContainingSubviews() {\n        \n        const center = this.bounds.center\n        \n        var result = new UIRectangle(center.x, center.y, 0, 0)\n        \n        for (var i = 0; i < this.subviews.length; i++) {\n            \n            const subview = this.subviews[i]\n            \n            var frame = subview.frame\n            \n            const rectangleContainingSubviews = subview.rectangleContainingSubviews()\n            \n            frame = frame.concatenateWithRectangle(rectangleContainingSubviews)\n            \n            result = result.concatenateWithRectangle(frame)\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    hasSubview(view: UIView) {\n        \n        // This is for performance reasons\n        if (!IS(view)) {\n            return NO\n        }\n        \n        for (var i = 0; i < this.subviews.length; i++) {\n            const subview = this.subviews[i]\n            if (subview == view) {\n                return YES\n            }\n        }\n        return NO\n    }\n    \n    get viewBelowThisView() {\n        const result: UIView = (this.viewHTMLElement.previousElementSibling as any || {}).UIView\n        return result\n    }\n    \n    get viewAboveThisView() {\n        const result: UIView = (this.viewHTMLElement.nextElementSibling as any || {}).UIView\n        return result\n    }\n    \n    addSubview(view: UIView, aboveView?: UIView) {\n        \n        if (!this.hasSubview(view) && IS(view)) {\n    \n            view.willMoveToSuperview(this)\n    \n            if (IS(aboveView)) {\n                this.viewHTMLElement.insertBefore(view.viewHTMLElement, aboveView.viewHTMLElement.nextSibling)\n                this.subviews.insertElementAtIndex(this.subviews.indexOf(aboveView), view)\n            }\n            else {\n                this.viewHTMLElement.appendChild(view.viewHTMLElement)\n                this.subviews.push(view)\n            }\n    \n            view.core = this.core\n            view.didMoveToSuperview(this)\n    \n            if (this.superview && this.isMemberOfViewTree) {\n        \n                view.broadcastEventInSubtree({\n            \n                    name: UIView.broadcastEventName.AddedToViewTree,\n                    parameters: nil\n            \n                })\n                \n            }\n            \n            this.setNeedsLayout()\n            \n        }\n        \n    }\n    \n    addSubviews(views: UIView[]) {\n        views.forEach(function (this: UIView, view: UIView, index, array) {\n            this.addSubview(view)\n        }, this)\n    }\n    \n    \n    moveToBottomOfSuperview() {\n        \n        if (IS(this.superview)) {\n            \n            const bottomView = this.superview.subviews.firstElement\n            \n            if (bottomView == this) {\n                \n                return\n                \n            }\n            \n            this.superview.subviews.removeElement(this)\n            \n            this.superview.subviews.insertElementAtIndex(0, this)\n            \n            this.superview.viewHTMLElement.insertBefore(this.viewHTMLElement, bottomView.viewHTMLElement)\n            \n            \n        }\n        \n        \n        \n    }\n    \n    moveToTopOfSuperview() {\n        \n        if (IS(this.superview)) {\n            \n            const topView = this.superview.subviews.lastElement\n            \n            if (topView == this) {\n                \n                return\n                \n            }\n            \n            this.superview.subviews.removeElement(this)\n            \n            this.superview.subviews.push(this)\n            \n            this.superview.viewHTMLElement.appendChild(this.viewHTMLElement)\n            \n            \n        }\n        \n        \n        \n    }\n    \n    \n    removeFromSuperview() {\n        if (IS(this.superview)) {\n            \n            this.forEachViewInSubtree(function (view) {\n                \n                view.blur()\n                \n            })\n            \n            const index = this.superview.subviews.indexOf(this)\n            if (index > -1) {\n                this.superview.subviews.splice(index, 1)\n                this.superview.viewHTMLElement.removeChild(this.viewHTMLElement)\n                this.superview = nil\n                \n                this.broadcastEventInSubtree({\n                    \n                    name: UIView.broadcastEventName.RemovedFromViewTree,\n                    parameters: nil\n                    \n                })\n                \n            }\n        }\n    }\n    \n    \n    willAppear() {\n        \n        \n        \n    }\n    \n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        this._setInnerHTMLFromKeyIfPossible()\n        \n        this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n        \n    }\n    \n    didMoveToSuperview(superview: UIView) {\n        \n        this.superview = superview\n        \n    }\n    \n    wasAddedToViewTree() {\n        \n    }\n    \n    wasRemovedFromViewTree() {\n        \n    }\n    \n    get isMemberOfViewTree() {\n        var element = this.viewHTMLElement\n        for (var i = 0; element; i = i) {\n            if (element.parentElement && element.parentElement == document.body) {\n                return YES\n            }\n            element = element.parentElement\n        }\n        return NO\n    }\n    \n    \n    get allSuperviews() {\n        const result = []\n        var view: UIView = this\n        for (var i = 0; IS(view); i = i) {\n            result.push(view)\n            view = view.superview\n        }\n        return result\n    }\n    \n    \n    setNeedsLayoutOnAllSuperviews() {\n        \n        this.allSuperviews.reverse().forEach(function (view: UIView, index, array) {\n            \n            view.setNeedsLayout()\n            \n        })\n        \n    }\n    \n    \n    setNeedsLayoutUpToRootView() {\n        \n        this.setNeedsLayoutOnAllSuperviews()\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    focus() {\n        \n        this.viewHTMLElement.focus()\n        \n    }\n    \n    \n    blur() {\n        \n        this.viewHTMLElement.blur()\n        \n    }\n    \n    \n    \n    \n    \n    _loadUIEvents() {\n        \n        //this.viewHTMLElement = nil;\n        \n        \n        const isTouchEventClassDefined: boolean = NO || (window as any).TouchEvent\n        \n        const pauseEvent = (event: Event, forced = NO) => {\n            \n            if (this.pausesPointerEvents || forced) {\n                \n                if (event.stopPropagation) {\n                    event.stopPropagation()\n                }\n                if (event.preventDefault) {\n                    event.preventDefault()\n                }\n                event.cancelBubble = true\n                event.returnValue = false\n                return false\n                \n            }\n            \n            if (event.stopPropagation && this.stopsPointerEventPropagation) {\n                event.stopPropagation()\n            }\n            \n        }\n        \n        const onMouseDown = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                ((this.ignoresMouse || (IS(this._touchEventTime) && (Date.now() - this._touchEventTime) > 500)) &&\n                    event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerDown, event)\n            \n            this._isPointerInside = YES\n            this._isPointerValid = YES\n            this._initialPointerPosition = new UIPoint(event.clientX, event.clientY)\n            if (isTouchEventClassDefined && event instanceof TouchEvent) {\n                \n                this._touchEventTime = Date.now()\n                \n                this._initialPointerPosition = new UIPoint(event.touches[0].clientX, event.touches[0].clientY)\n                \n                if (event.touches.length > 1) {\n                    \n                    onTouchCancel(event)\n                    \n                    return\n                    \n                }\n                \n                \n            }\n            else {\n                \n                this._touchEventTime = nil\n                \n                pauseEvent(event)\n                \n            }\n            \n            \n            this._hasPointerDragged = NO\n            \n        }\n        \n        const onTouchStart = onMouseDown as any\n        \n        const onmouseup = (event) => {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (this._isPointerInside) {\n                \n                onPointerUpInside(event)\n                \n                if (!this._hasPointerDragged) {\n                    \n                    this.sendControlEventForKey(UIView.controlEvent.PointerTap, event)\n                    \n                }\n                \n                \n            }\n            \n            // This has to be sent after the more specific event so that UIButton can ignore it when not highlighted\n            this.sendControlEventForKey(UIView.controlEvent.PointerUp, event)\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchEnd = onmouseup\n        \n        // function onMouseEnter(event) {\n        \n        //     this.sendControlEventForKey(UIView.controlEvent.PointerEnter, event);\n        \n        //     this._isPointerInside = YES;\n        \n        //     pauseEvent(event);\n        \n        // }\n        \n        const onmouseout = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerLeave, event)\n            \n            this._isPointerInside = NO\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchLeave = onmouseout\n        \n        var onTouchCancel = function (event) {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this._isPointerValid = NO\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerCancel, event)\n            \n        }.bind(this)\n        \n        const onmouseover = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerHover, event)\n            \n            this._isPointerInside = YES\n            \n            this._isPointerValid = YES\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onMouseMove = (event) => {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (IS_NOT(this._initialPointerPosition)) {\n                \n                this._initialPointerPosition = new UIPoint(event.clientX, event.clientY)\n                \n            }\n            \n            if (new UIPoint(event.clientX, event.clientY).to(this._initialPointerPosition).length >\n                this._pointerDragThreshold) {\n                \n                this._hasPointerDragged = YES\n                \n            }\n            \n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerMove, event)\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchMove = function (event: TouchEvent) {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (event.touches.length > 1) {\n                \n                onTouchZoom(event)\n                \n                return\n                \n            }\n            \n            const touch = event.touches[0]\n            \n            if (new UIPoint(touch.clientX, touch.clientY).to(this._initialPointerPosition).length >\n                this._pointerDragThreshold) {\n                \n                this._hasPointerDragged = YES\n                \n            }\n            \n            \n            if (this._isPointerInside && this.viewHTMLElement !=\n                document.elementFromPoint(touch.clientX, touch.clientY)) {\n                \n                this._isPointerInside = NO\n                \n                this.sendControlEventForKey(UIView.controlEvent.PointerLeave, event)\n                \n            }\n            \n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerMove, event)\n            \n            //pauseEvent(event);\n            \n            \n        }\n        \n        var onTouchZoom = function onTouchZoom(event: TouchEvent) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.MultipleTouches, event)\n            \n        }.bind(this)\n        \n        \n        var onPointerUpInside = (event) => {\n            pauseEvent(event)\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerUpInside, event)\n        }\n        \n        function eventKeyIsEnter(event) {\n            if (event.keyCode !== 13) {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsTab(event) {\n            if (event.keyCode !== 9) {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsEsc(event) {\n            var result = false\n            if (\"key\" in event) {\n                result = (event.key == \"Escape\" || event.key == \"Esc\")\n            }\n            else {\n                result = (event.keyCode == 27)\n            }\n            return result\n        }\n        \n        function eventKeyIsLeft(event) {\n            if (event.keyCode != \"37\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsRight(event) {\n            if (event.keyCode != \"39\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsDown(event) {\n            if (event.keyCode != \"40\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsUp(event) {\n            if (event.keyCode != \"38\") {\n                return NO\n            }\n            return YES\n        }\n        \n        const onKeyDown = function (event) {\n            \n            if (eventKeyIsEnter(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EnterDown, event)\n                \n            }\n            \n            if (eventKeyIsEsc(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EscDown, event)\n                \n            }\n            \n            if (eventKeyIsTab(event) && this._controlEventTargets.TabDown && this._controlEventTargets.TabDown.length) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.TabDown, event)\n                \n                pauseEvent(event, YES)\n                \n            }\n            \n            if (eventKeyIsLeft(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.LeftArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsRight(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.RightArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsDown(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.DownArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsUp(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.UpArrowDown, event)\n                \n            }\n            \n        }.bind(this)\n        \n        const onKeyUp = function (event) {\n            \n            if (eventKeyIsEnter(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EnterUp, event)\n                \n            }\n            \n        }.bind(this)\n        \n        \n        const onfocus = function (event: Event) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.Focus, event)\n            \n        }.bind(this)\n        \n        const onblur = function (event: Event) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.Blur, event)\n            \n        }.bind(this)\n        \n        \n        // Mouse and touch start events\n        this._viewHTMLElement.onmousedown = onMouseDown.bind(this)\n        this._viewHTMLElement.ontouchstart = onTouchStart.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mousedown\", onMouseDown.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchstart', onTouchStart.bind(this), false)\n        // //this.viewHTMLElement.addEventListener(\"mouseenter\", onMouseEnter.bind(this), false);\n        \n        // Mouse and touch move events\n        this._viewHTMLElement.onmousemove = onMouseMove.bind(this)\n        this._viewHTMLElement.ontouchmove = onTouchMove.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mousemove\", onMouseMove.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchmove', onTouchMove.bind(this), false)\n        \n        //this.viewHTMLElement.addEventListener(\"mousewheel\", onmousewheel.bind(this), false)\n        \n        this._viewHTMLElement.onmouseover = onmouseover.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseover\", onmouseover.bind(this), false)\n        \n        // Mouse and touch end events\n        this._viewHTMLElement.onmouseup = onmouseup.bind(this)\n        this._viewHTMLElement.ontouchend = onTouchEnd.bind(this)\n        this._viewHTMLElement.ontouchcancel = onTouchCancel.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseup\", onmouseup.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchend', onTouchEnd.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchcancel', onTouchCancel.bind(this), false)\n        \n        this._viewHTMLElement.onmouseout = onmouseout.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseout\", onmouseout.bind(this), false)\n        this._viewHTMLElement.addEventListener(\"touchleave\", onTouchLeave.bind(this), false)\n        \n        // this.viewHTMLElement.onkeydown = onkeydown\n        // this.viewHTMLElement.onkeyup = onkeyup\n        this._viewHTMLElement.addEventListener(\"keydown\", onKeyDown, false)\n        this._viewHTMLElement.addEventListener(\"keyup\", onKeyUp, false)\n        \n        // Focus events\n        this._viewHTMLElement.onfocus = onfocus\n        this._viewHTMLElement.onblur = onblur\n        // this.viewHTMLElement.addEventListener(\"focus\", onfocus, true)\n        // this.viewHTMLElement.addEventListener(\"blur\", onblur, true)\n        \n        \n    }\n    \n    \n    \n    \n    \n    public static controlEvent = {\n        \n        \"PointerDown\": \"PointerDown\",\n        \"PointerMove\": \"PointerMove\",\n        \"PointerLeave\": \"PointerLeave\",\n        \"PointerEnter\": \"PointerEnter\",\n        \"PointerUpInside\": \"PointerUpInside\",\n        \"PointerTap\": \"PointerTap\",\n        \"PointerUp\": \"PointerUp\",\n        \"MultipleTouches\": \"PointerZoom\",\n        \"PointerCancel\": \"PointerCancel\",\n        \"PointerHover\": \"PointerHover\",\n        \"EnterDown\": \"EnterDown\",\n        \"EnterUp\": \"EnterUp\",\n        \"EscDown\": \"EscDown\",\n        \"TabDown\": \"TabDown\",\n        \"LeftArrowDown\": \"LeftArrowDown\",\n        \"RightArrowDown\": \"RightArrowDown\",\n        \"DownArrowDown\": \"DownArrowDown\",\n        \"UpArrowDown\": \"UpArrowDown\",\n        \"Focus\": \"Focus\",\n        \"Blur\": \"Blur\"\n        \n    }\n    \n    controlEvent = UIView.controlEvent\n    \n    \n    \n    public get addControlEventTarget() {\n        \n        const eventKeys = []\n        \n        \n        const result: UIViewAddControlEventTargetObject<typeof UIView.controlEvent> = new Proxy(\n            (this.constructor as any).controlEvent,\n            {\n                \n                get: (target, key, receiver) => {\n                    \n                    eventKeys.push(key)\n                    \n                    return result\n                    \n                },\n                set: (target, key, value, receiver) => {\n                    \n                    eventKeys.push(key)\n                    \n                    this.addTargetForControlEvents(eventKeys, value)\n                    \n                    return true\n                    \n                }\n                \n            }\n        )\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    addTargetForControlEvents(eventKeys: string[], targetFunction: (sender: UIView, event: Event) => void) {\n        \n        eventKeys.forEach(function (this: UIView, key: string, index: number, array: string[]) {\n            \n            this.addTargetForControlEvent(key, targetFunction)\n            \n        }, this)\n        \n    }\n    \n    \n    \n    addTargetForControlEvent(eventKey: string, targetFunction: (sender: UIView, event: Event) => void) {\n        \n        var targets = this._controlEventTargets[eventKey]\n        \n        if (!targets) {\n            // @ts-ignore\n            targets = []\n            this._controlEventTargets[eventKey] = targets\n        }\n        \n        if (targets.indexOf(targetFunction) == -1) {\n            targets.push(targetFunction)\n        }\n        \n    }\n    \n    removeTargetForControlEvent(eventKey: string, targetFunction: (sender: UIView, event: Event) => void) {\n        const targets = this._controlEventTargets[eventKey]\n        if (!targets) {\n            return\n        }\n        const index = targets.indexOf(targetFunction)\n        if (index != -1) {\n            targets.splice(index, 1)\n        }\n    }\n    \n    removeTargetForControlEvents(eventKeys: string[], targetFunction: (sender: UIView, event: Event) => void) {\n        \n        eventKeys.forEach(function (key, index, array) {\n            \n            this.removeTargetForControlEvent(key, targetFunction)\n            \n        }, this)\n        \n    }\n    \n    sendControlEventForKey(eventKey: string, nativeEvent: Event) {\n        var targets = this._controlEventTargets[eventKey]\n        if (!targets) {\n            return\n        }\n        targets = targets.copy()\n        for (var i = 0; i < targets.length; i++) {\n            const target = targets[i]\n            target(this, nativeEvent)\n        }\n    }\n    \n    \n    \n    \n    \n    static broadcastEventName = {\n        \n        \"LanguageChanged\": \"LanguageChanged\",\n        \"RemovedFromViewTree\": \"RemovedFromViewTree\",\n        \"AddedToViewTree\": \"AddedToViewTree\",\n        \"PageDidScroll\": \"PageDidScroll\"\n        \n    }\n    \n    \n    broadcastEventInSubtree(event: UIViewBroadcastEvent) {\n        \n        this.forEachViewInSubtree(function (view) {\n            \n            view.didReceiveBroadcastEvent(event)\n    \n            if (IS(view.viewController)) {\n        \n                view.viewController.viewDidReceiveBroadcastEvent(event)\n        \n            }\n            \n        })\n        \n        \n    }\n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        if (event.name == UIView.broadcastEventName.PageDidScroll) {\n            \n            this._isPointerValid = NO\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.AddedToViewTree) {\n            \n            this.wasAddedToViewTree()\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.RemovedFromViewTree) {\n            \n            this.wasRemovedFromViewTree()\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setInnerHTMLFromKeyIfPossible()\n            \n            this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    forEachViewInSubtree(functionToCall: (view: UIView) => void) {\n        \n        functionToCall(this)\n        \n        this.subviews.forEach(function (subview, index, array) {\n            \n            subview.forEachViewInSubtree(functionToCall)\n            \n        })\n        \n    }\n    \n    \n    \n    \n    \n    rectangleInView(rectangle: UIRectangle, view: UIView) {\n        if (!view.isMemberOfViewTree || !this.isMemberOfViewTree) {\n            return nil\n        }\n        \n        const viewClientRectangle = view.viewHTMLElement.getBoundingClientRect()\n        const viewLocation = new UIPoint(viewClientRectangle.left, viewClientRectangle.top)\n        \n        const selfClientRectangle = this.viewHTMLElement.getBoundingClientRect()\n        const selfLocation = new UIPoint(selfClientRectangle.left, selfClientRectangle.top)\n        \n        const offsetPoint = selfLocation.subtract(viewLocation)\n        \n        return rectangle.copy().offsetByPoint(offsetPoint)\n    }\n    \n    rectangleFromView(rectangle: UIRectangle, view: UIView) {\n        return view.rectangleInView(rectangle, this)\n    }\n    \n    \n    \n    \n    \n    intrinsicContentSizeWithConstraints(constrainingHeight: number = 0, constrainingWidth: number = 0) {\n        \n        // This works but is slow\n        \n        const result = new UIRectangle(0, 0, 0, 0)\n        if (this.rootView.forceIntrinsicSizeZero) {\n            return result\n        }\n        \n        var temporarilyInViewTree = NO\n        var nodeAboveThisView: Node\n        if (!this.isMemberOfViewTree) {\n            document.body.appendChild(this.viewHTMLElement)\n            temporarilyInViewTree = YES\n            nodeAboveThisView = this.viewHTMLElement.nextSibling\n        }\n        \n        const height = this.style.height\n        const width = this.style.width\n        \n        this.style.height = \"\" + constrainingHeight\n        this.style.width = \"\" + constrainingWidth\n        \n        \n        const left = this.style.left\n        const right = this.style.right\n        const bottom = this.style.bottom\n        const top = this.style.top\n        \n        this.style.left = \"\"\n        this.style.right = \"\"\n        this.style.bottom = \"\"\n        this.style.top = \"\"\n        \n        \n        const resultHeight = this.viewHTMLElement.scrollHeight\n        \n        \n        const whiteSpace = this.style.whiteSpace\n        this.style.whiteSpace = \"nowrap\"\n        \n        const resultWidth = this.viewHTMLElement.scrollWidth\n        \n        this.style.whiteSpace = whiteSpace\n        \n        \n        \n        this.style.height = height\n        this.style.width = width\n        \n        this.style.left = left\n        this.style.right = right\n        this.style.bottom = bottom\n        this.style.top = top\n        \n        if (temporarilyInViewTree) {\n            document.body.removeChild(this.viewHTMLElement)\n            if (this.superview) {\n                if (nodeAboveThisView) {\n                    this.superview.viewHTMLElement.insertBefore(this.viewHTMLElement, nodeAboveThisView)\n                }\n                else {\n                    this.superview.viewHTMLElement.appendChild(this.viewHTMLElement)\n                }\n            }\n        }\n        \n        result.height = resultHeight\n        result.width = resultWidth\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    intrinsicContentWidth(constrainingHeight: number = 0): number {\n        \n        const result = this.intrinsicContentSizeWithConstraints(constrainingHeight).width\n        \n        return result\n        \n    }\n    \n    intrinsicContentHeight(constrainingWidth: number = 0): number {\n        \n        const result = this.intrinsicContentSizeWithConstraints(undefined, constrainingWidth).height\n        \n        return result\n        \n        \n    }\n    \n    intrinsicContentSize(): UIRectangle {\n        \n        return nil\n    \n    }\n    \n    \n    \n    \n    \n}\n\n\n// This is here because modules fail with circular imports but they are needed here\ndeclare class UIDialogView<ViewType extends UIView = UIView> extends UIView {\n    _view: ViewType\n    _appearedAnimated: boolean\n    animationDuration: number\n    _zIndex: number\n    isVisible: boolean\n    dismissesOnTapOutside: boolean\n    \n    constructor(elementID?: string, viewHTMLElement?: HTMLElement);\n    \n    didDetectTapOutside(sender: UIView, event: Event): void;\n    \n    set zIndex(zIndex: number);\n    get zIndex(): number;\n    \n    set view(view: ViewType);\n    get view(): ViewType;\n    \n    willAppear(animated?: boolean): void;\n    \n    animateAppearing(): void;\n    \n    animateDisappearing(): void;\n    \n    showInView(containerView: UIView, animated: boolean): void;\n    \n    showInRootView(animated: boolean): void;\n    \n    dismiss(animated?: boolean): void;\n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent): void;\n    \n    layoutSubviews(): void;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"./UIColor\"\nimport { UILocalizedTextObject } from \"./UIInterfaces\"\nimport { FIRST, IS_LIKE_NULL, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UITextView extends UIView {\n    \n    \n    _textColor: UIColor = UITextView.defaultTextColor\n    _textAlignment: string\n    \n    _isSingleLine = YES\n    \n    textPrefix = \"\"\n    textSuffix = \"\"\n    \n    _notificationAmount = 0\n    \n    _minFontSize: number = nil\n    _maxFontSize: number = nil\n    \n    _automaticFontSizeSelection = NO\n    \n    changesOften = NO\n    \n    static defaultTextColor = UIColor.blackColor\n    static notificationTextColor = UIColor.redColor\n    \n    static _intrinsicHeightCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    static _intrinsicWidthCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    \n    _intrinsicHeightCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    _intrinsicWidthCache: { [x: string]: { [x: string]: number; }; } & UIObject = new UIObject() as any\n    \n    \n    static _ptToPx: number\n    static _pxToPt: number\n    _text: string\n    \n    \n    constructor(elementID?: string, textViewType = UITextView.type.paragraph, viewHTMLElement = null) {\n        \n        super(elementID, viewHTMLElement, textViewType)\n        \n        this.text = \"\"\n        \n        this.style.overflow = \"hidden\"\n        this.style.textOverflow = \"ellipsis\"\n        this.isSingleLine = YES\n        \n        this.textColor = this.textColor\n        \n        this.userInteractionEnabled = YES\n        \n        \n        if (textViewType == UITextView.type.textArea) {\n    \n            this.pausesPointerEvents = YES\n    \n            this.addTargetForControlEvent(\n                UIView.controlEvent.PointerUpInside,\n                (sender, event) => sender.focus()\n            )\n    \n    \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    static _determinePXAndPTRatios() {\n        \n        const o = document.createElement(\"div\")\n        o.style.width = \"1000pt\"\n        document.body.appendChild(o)\n        UITextView._ptToPx = o.clientWidth / 1000\n        document.body.removeChild(o)\n        UITextView._pxToPt = 1 / UITextView._ptToPx\n        \n    }\n    \n    \n    \n    \n    \n    static type = {\n        \n        \"paragraph\": \"p\",\n        \"header1\": \"h1\",\n        \"header2\": \"h2\",\n        \"header3\": \"h3\",\n        \"header4\": \"h4\",\n        \"header5\": \"h5\",\n        \"header6\": \"h6\",\n        \"textArea\": \"textarea\",\n        \"textField\": \"input\",\n        \"span\": \"span\",\n        \"label\": \"label\"\n        \n    }\n    \n    \n    \n    static textAlignment = {\n        \n        \"left\": \"left\",\n        \"center\": \"center\",\n        \"right\": \"right\",\n        \"justify\": \"justify\"\n        \n    }\n    \n    get textAlignment() {\n        const result = this.style.textAlign\n        return result\n    }\n    \n    set textAlignment(textAlignment: string) {\n        this._textAlignment = textAlignment\n        this.style.textAlign = textAlignment\n    }\n    \n    \n    \n    get textColor() {\n        const result = this._textColor\n        return result\n    }\n    \n    set textColor(color: UIColor) {\n        \n        this._textColor = color || UITextView.defaultTextColor\n        this.style.color = this._textColor.stringValue\n        \n    }\n    \n    \n    get isSingleLine() {\n        \n        return this._isSingleLine\n        \n    }\n    \n    set isSingleLine(isSingleLine: boolean) {\n        \n        this._isSingleLine = isSingleLine\n        \n        this._intrinsicHeightCache = new UIObject() as any\n        this._intrinsicWidthCache = new UIObject() as any\n        \n        if (isSingleLine) {\n            \n            this.style.whiteSpace = \"pre\"\n            \n            return\n            \n        }\n        \n        this.style.whiteSpace = \"pre-wrap\"\n        \n    }\n    \n    \n    get notificationAmount() {\n        \n        return this._notificationAmount\n        \n    }\n    \n    set notificationAmount(notificationAmount: number) {\n        \n        if (this._notificationAmount == notificationAmount) {\n            \n            return\n            \n        }\n        \n        this._notificationAmount = notificationAmount\n        \n        this.text = this.text\n        \n        this.setNeedsLayoutUpToRootView()\n        \n        this.notificationAmountDidChange(notificationAmount)\n        \n    }\n    \n    notificationAmountDidChange(notificationAmount: number) {\n    \n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    get text() {\n        \n        return (this._text || this.viewHTMLElement.innerHTML)\n        \n    }\n    \n    set text(text) {\n        \n        this._text = text\n        \n        var notificationText = \"\"\n        \n        if (this.notificationAmount) {\n            \n            notificationText = \"<span style=\\\"color: \" + UITextView.notificationTextColor.stringValue + \";\\\">\" +\n                (\" (\" + this.notificationAmount + \")\").bold() + \"</span>\"\n            \n        }\n        \n        if (this.viewHTMLElement.innerHTML != this.textPrefix + text + this.textSuffix + notificationText) {\n            \n            this.viewHTMLElement.innerHTML = this.textPrefix + FIRST(text, \"\") + this.textSuffix + notificationText\n            \n        }\n        \n        this._intrinsicHeightCache = new UIObject() as any\n        this._intrinsicWidthCache = new UIObject() as any\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    set innerHTML(innerHTML: string) {\n        \n        this.text = innerHTML\n        \n    }\n    \n    get innerHTML() {\n        \n        return this.viewHTMLElement.innerHTML\n        \n    }\n    \n    \n    \n    setText(key: string, defaultString: string, parameters?: { [x: string]: string | UILocalizedTextObject }) {\n        \n        this.setInnerHTML(key, defaultString, parameters)\n        \n    }\n    \n    \n    get fontSize() {\n        \n        const style = window.getComputedStyle(this.viewHTMLElement, null).fontSize\n        \n        const result = (parseFloat(style) * UITextView._pxToPt)\n        \n        return result\n        \n    }\n    \n    set fontSize(fontSize: number) {\n        \n        \n        this.style.fontSize = \"\" + fontSize + \"pt\"\n        \n        this._intrinsicHeightCache = new UIObject() as any\n        this._intrinsicWidthCache = new UIObject() as any // MEETOD LUUA!!!!\n        \n        \n    }\n    \n    \n    \n    \n    \n    useAutomaticFontSize(minFontSize: number = nil, maxFontSize: number = nil) {\n        \n        \n        this._automaticFontSizeSelection = YES\n        \n        \n        this._minFontSize = minFontSize\n        \n        this._maxFontSize = maxFontSize\n        \n        this.setNeedsLayout()\n        \n        \n    }\n    \n    \n    \n    \n    \n    static automaticallyCalculatedFontSize(\n        bounds: UIRectangle,\n        currentSize: UIRectangle,\n        currentFontSize: number,\n        minFontSize?: number,\n        maxFontSize?: number\n    ) {\n        \n        minFontSize = FIRST(minFontSize, 1)\n        \n        maxFontSize = FIRST(maxFontSize, 100000000000)\n        \n        \n        const heightMultiplier = bounds.height / (currentSize.height + 1)\n        \n        const widthMultiplier = bounds.width / (currentSize.width + 1)\n        \n        \n        \n        \n        var multiplier = heightMultiplier\n        \n        if (heightMultiplier > widthMultiplier) {\n            \n            multiplier = widthMultiplier\n            \n            \n            \n        }\n        \n        \n        \n        \n        const maxFittingFontSize = currentFontSize * multiplier\n        \n        \n        if (maxFittingFontSize > maxFontSize) {\n            \n            return maxFontSize\n            \n        }\n        \n        if (minFontSize > maxFittingFontSize) {\n            \n            return minFontSize\n            \n        }\n        \n        \n        return maxFittingFontSize\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n    }\n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        super.willMoveToSuperview(superview)\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        \n        if (this._automaticFontSizeSelection) {\n            \n            this.fontSize = UITextView.automaticallyCalculatedFontSize(\n                new UIRectangle(0, 0, 1 *\n                    this.viewHTMLElement.offsetHeight, 1 *\n                    this.viewHTMLElement.offsetWidth),\n                this.intrinsicContentSize(),\n                this.fontSize,\n                this._minFontSize,\n                this._maxFontSize\n            )\n            \n            \n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    intrinsicContentHeight(constrainingWidth = 0) {\n        \n        const keyPath = (this.viewHTMLElement.innerHTML + \"_csf_\" + this.computedStyle.font).replace(new RegExp(\n                \"\\\\.\",\n                \"g\"\n            ), \"_\") + \".\" +\n            (\"\" + constrainingWidth).replace(new RegExp(\"\\\\.\", \"g\"), \"_\")\n        \n        let cacheObject = UITextView._intrinsicHeightCache\n        \n        if (this.changesOften) {\n            \n            cacheObject = this._intrinsicHeightCache\n            \n            \n        }\n        \n        \n        var result = cacheObject.valueForKeyPath(keyPath)\n        \n        \n        if (IS_LIKE_NULL(result)) {\n            \n            result = super.intrinsicContentHeight(constrainingWidth)\n            \n            cacheObject.setValueForKeyPath(keyPath, result)\n            \n            \n        }\n        \n        \n        return result\n        \n    }\n    \n    intrinsicContentWidth(constrainingHeight = 0) {\n        \n        const keyPath = (this.viewHTMLElement.innerHTML + \"_csf_\" + this.computedStyle.font).replace(new RegExp(\n                \"\\\\.\",\n                \"g\"\n            ), \"_\") + \".\" +\n            (\"\" + constrainingHeight).replace(new RegExp(\"\\\\.\", \"g\"), \"_\")\n        \n        let cacheObject = UITextView._intrinsicWidthCache\n        \n        if (this.changesOften) {\n            \n            cacheObject = this._intrinsicWidthCache\n            \n            \n        }\n        \n        \n        var result = cacheObject.valueForKeyPath(keyPath)\n        \n        \n        if (IS_LIKE_NULL(result)) {\n            \n            result = super.intrinsicContentWidth(constrainingHeight)\n            \n            cacheObject.setValueForKeyPath(keyPath, result)\n            \n            \n        }\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    \n    intrinsicContentSize() {\n        \n        // This works but is slow\n        const result = this.intrinsicContentSizeWithConstraints(nil, nil)\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\nUITextView._determinePXAndPTRatios()\n\n\n\n\n\n// /**\n//  * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n//  * \n//  * @param {String} text The text to be rendered.\n//  * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n//  * \n//  * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n//  */\n// function getTextMetrics(text, font) {\n//     // re-use canvas object for better performance\n//     var canvas = getTextMetrics.canvas || (getTextMetrics.canvas = document.createElement(\"canvas\"));\n//     var context = canvas.getContext(\"2d\");\n//     context.font = font;\n//     var metrics = context.measureText(text);\n//     return metrics;\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { nil, NO, YES } from \"./UIObject\"\nimport { UITextView } from \"./UITextView\"\nimport { UIView, UIViewAddControlEventTargetObject, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UITextField extends UITextView {\n    \n    \n    _placeholderTextKey: string\n    _defaultPlaceholderText: string\n    \n    _viewHTMLElement: HTMLInputElement\n    \n    constructor(elementID?: string, viewHTMLElement = null, type = UITextView.type.textField) {\n    \n        super(elementID, type, viewHTMLElement)\n    \n        this.viewHTMLElement.setAttribute(\"type\", \"text\")\n    \n        this.backgroundColor = UIColor.whiteColor\n    \n        this.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            (sender, event) => sender.focus()\n        )\n    \n        this.viewHTMLElement.oninput = (event) => {\n            this.sendControlEventForKey(UITextField.controlEvent.TextChange, event)\n        }\n    \n    \n        this.style.webkitUserSelect = \"text\"\n    \n        this.nativeSelectionEnabled = YES\n        \n        this.pausesPointerEvents = NO\n        \n        \n    }\n    \n    \n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \n        \"TextChange\": \"TextChange\"\n        \n        \n    })\n    \n    \n    \n    \n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UITextField.controlEvent> {\n        \n        // @ts-ignore\n        return super.addControlEventTarget as any;\n        \n    }\n    \n    public get viewHTMLElement() {\n        return this._viewHTMLElement\n    }\n    \n    \n    \n    public set text(text: string) {\n        \n        this.viewHTMLElement.value = text\n        \n    }\n    \n    \n    public get text(): string {\n        \n        return this.viewHTMLElement.value\n        \n    }\n    \n    \n    public set placeholderText(text: string) {\n        \n        this.viewHTMLElement.placeholder = text\n        \n    }\n    \n    \n    public get placeholderText(): string {\n        \n        return this.viewHTMLElement.placeholder\n        \n    }\n    \n    \n    setPlaceholderText(key: string, defaultString: string) {\n        \n        this._placeholderTextKey = key\n        this._defaultPlaceholderText = defaultString\n        \n        const languageName = UICore.languageService.currentLanguageKey\n        this.placeholderText = UICore.languageService.stringForKey(key, languageName, defaultString, nil)\n        \n    }\n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setPlaceholderFromKeyIfPossible()\n            \n        }\n        \n    }\n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        super.willMoveToSuperview(superview)\n        \n        this._setPlaceholderFromKeyIfPossible()\n        \n    }\n    \n    _setPlaceholderFromKeyIfPossible() {\n        \n        if (this._placeholderTextKey && this._defaultPlaceholderText) {\n            \n            this.setPlaceholderText(this._placeholderTextKey, this._defaultPlaceholderText)\n            \n        }\n        \n    }\n    \n    \n    public get isSecure(): boolean {\n        \n        const result = (this.viewHTMLElement.type == \"password\")\n        \n        return result\n        \n    }\n    \n    \n    \n    public set isSecure(secure: boolean) {\n        \n        var type = \"text\"\n        \n        if (secure) {\n            \n            type = \"password\"\n            \n        }\n        \n        this.viewHTMLElement.type = type\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { NO } from \"./UIObject\"\nimport { UITextField } from \"./UITextField\"\nimport { UITextView } from \"./UITextView\"\nimport { UIViewAddControlEventTargetObject } from \"./UIView\"\n\n\n\n\n\nexport class UITextArea extends UITextField {\n    \n    \n    \n    \n    \n    constructor(elementID, viewHTMLElement = null) {\n        \n        super(elementID, viewHTMLElement, UITextView.type.textArea)\n        \n        this.viewHTMLElement.removeAttribute(\"type\")\n        \n        this.style.overflow = \"auto\"\n        this.style.webkitUserSelect = \"text\"\n        \n        this.pausesPointerEvents = NO\n    \n    }\n    \n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UITextArea.controlEvent> {\n        \n        return super.addControlEventTarget as any\n        \n    }\n    \n    \n    get viewHTMLElement(): HTMLTextAreaElement & HTMLInputElement {\n        \n        // @ts-ignore\n        return super.viewHTMLElement\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"./UIColor\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UIBaseButton extends UIView {\n    \n    _selected: boolean = NO\n    _highlighted: boolean = NO\n    \n    _isPointerInside: boolean\n    \n    \n    _isToggleable: boolean = NO\n    _hovered: boolean\n    _focused: boolean\n    \n    \n    \n    \n    \n    constructor(elementID: string, elementType?: string, initViewData?: any) {\n        \n        super(elementID, nil, elementType, initViewData)\n        \n        this.initViewStateControl()\n        \n    }\n    \n    \n    \n    \n    \n    initViewStateControl() {\n        \n        this.class.superclass = UIView\n        \n        // Instance variables\n        \n        \n        this._isPointerInside = NO\n    \n    \n        const setHovered = function () {\n            this.hovered = YES\n        }.bind(this)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerHover, setHovered)\n    \n        const setNotHovered = function () {\n        \n            this.hovered = NO\n        \n        }.bind(this)\n    \n        this.addTargetForControlEvents([\n            UIView.controlEvent.PointerLeave, UIView.controlEvent.PointerCancel, UIView.controlEvent.MultipleTouches\n        ], setNotHovered)\n    \n    \n        var highlightingTime\n        const setHighlighted = function () {\n            this.highlighted = YES\n            highlightingTime = Date.now()\n        }.bind(this)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerDown, setHighlighted)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerEnter, setHighlighted)\n    \n        const setNotHighlighted = function () {\n            this.highlighted = NO\n        }.bind(this)\n        const setNotHighlightedWithMinimumDuration = function () {\n            const minimumDurationInMilliseconds = 50\n            const elapsedTime = Date.now() - highlightingTime\n            if (minimumDurationInMilliseconds < elapsedTime) {\n                this.highlighted = NO\n            }\n            else {\n                setTimeout(function () {\n                    this.highlighted = NO\n                }.bind(this), minimumDurationInMilliseconds - elapsedTime)\n            }\n        }.bind(this)\n        this.addTargetForControlEvents([\n            UIView.controlEvent.PointerLeave, UIView.controlEvent.PointerCancel, UIView.controlEvent.MultipleTouches\n        ], setNotHighlighted)\n        this.addTargetForControlEvent(UIView.controlEvent.PointerUp, setNotHighlightedWithMinimumDuration)\n        \n        // Handle enter key press\n        this.addTargetForControlEvent(UIView.controlEvent.EnterDown, function () {\n            \n            setHighlighted()\n            setNotHighlightedWithMinimumDuration()\n            \n        })\n        \n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.Focus,\n            function (this: UIBaseButton, sender: UIView, event: Event) {\n                \n                this.focused = YES\n                \n            }.bind(this)\n        )\n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.Blur,\n            function (this: UIBaseButton, sender: UIView, event: Event) {\n                \n                this.focused = NO\n                \n            }.bind(this)\n        )\n        \n        \n        this.updateContentForCurrentState()\n        \n        this.pausesPointerEvents = YES\n        this.tabIndex = 1\n        \n        this.style.cursor = \"pointer\"\n        \n        //this.style.outline = \"none\";\n        \n        \n        this.nativeSelectionEnabled = NO\n        \n        \n        this.addTargetForControlEvents([\n            UIView.controlEvent.EnterDown, UIView.controlEvent.PointerUpInside\n        ], function (this: UIBaseButton, sender, event) {\n            \n            if (this.isToggleable) {\n                \n                this.toggleSelectedState()\n                \n            }\n            \n        }.bind(this))\n        \n        \n    }\n    \n    \n    \n    \n    \n    public set hovered(hovered: boolean) {\n        this._hovered = hovered\n        this.updateContentForCurrentState()\n    }\n    \n    public get hovered(): boolean {\n        return this._hovered\n    }\n    \n    public set highlighted(highlighted: boolean) {\n        this._highlighted = highlighted\n        this.updateContentForCurrentState()\n    }\n    \n    public get highlighted(): boolean {\n        return this._highlighted\n    }\n    \n    public set focused(focused: boolean) {\n        this._focused = focused\n        if (focused) {\n            this.focus()\n        }\n        else {\n            this.blur()\n        }\n        this.updateContentForCurrentState()\n    }\n    \n    public get focused(): boolean {\n        return this._focused\n    }\n    \n    public set selected(selected: boolean) {\n        this._selected = selected\n        this.updateContentForCurrentState()\n    }\n    \n    public get selected(): boolean {\n        return this._selected\n    }\n    \n    \n    \n    \n    \n    updateContentForCurrentState() {\n    \n        var updateFunction: Function = this.updateContentForNormalState\n        if (this.selected && this.highlighted) {\n            updateFunction = this.updateContentForSelectedAndHighlightedState\n        }\n        else if (this.selected) {\n            updateFunction = this.updateContentForSelectedState\n        }\n        else if (this.focused) {\n            updateFunction = this.updateContentForFocusedState\n        }\n        else if (this.highlighted) {\n            updateFunction = this.updateContentForHighlightedState\n        }\n        else if (this.hovered) {\n            updateFunction = this.updateContentForHoveredState\n        }\n        \n        if (!IS(updateFunction)) {\n            this.backgroundColor = UIColor.nilColor\n        }\n        else {\n            updateFunction.call(this)\n        }\n        \n    }\n    \n    updateContentForNormalState() {\n        \n        \n        \n    }\n    \n    updateContentForHoveredState() {\n        \n        this.updateContentForNormalState()\n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        this.updateContentForHoveredState()\n        \n    }\n    \n    updateContentForHighlightedState() {\n        \n        \n        \n    }\n    \n    updateContentForSelectedState() {\n        \n        \n        \n    }\n    \n    updateContentForSelectedAndHighlightedState() {\n        \n        this.updateContentForSelectedState()\n        \n    }\n    \n    \n    set enabled(enabled: boolean) {\n        \n        super.enabled = enabled\n        \n        this.updateContentForCurrentEnabledState()\n        \n    }\n    \n    get enabled() {\n        \n        return super.enabled\n        \n    }\n    \n    updateContentForCurrentEnabledState() {\n        \n        if (this.enabled) {\n            this.alpha = 1\n        }\n        else {\n            this.alpha = 0.5\n        }\n        \n        this.userInteractionEnabled = this.enabled\n        \n    }\n    \n    \n    \n    addStyleClass(styleClassName: string) {\n        \n        super.addStyleClass(styleClassName)\n        \n        if (this.styleClassName != styleClassName) {\n            \n            this.updateContentForCurrentState.call(this)\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.PageDidScroll || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this.hovered = NO\n            \n            this.highlighted = NO\n            \n            \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    toggleSelectedState() {\n        \n        \n        this.selected = !this.selected\n        \n        \n    }\n    \n    set isToggleable(isToggleable: boolean) {\n        \n        this._isToggleable = isToggleable\n        \n    }\n    \n    get isToggleable() {\n        \n        return this._isToggleable\n        \n    }\n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    sendControlEventForKey(eventKey: string, nativeEvent: Event) {\n        \n        if (eventKey == UIView.controlEvent.PointerUpInside && !this.highlighted) {\n            \n            // Do not send the event in this case\n            //super.sendControlEventForKey(eventKey, nativeEvent);\n    \n            const asd = 1\n    \n        }\n        else {\n            \n            super.sendControlEventForKey(eventKey, nativeEvent)\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    static getEventCoordinatesInDocument(touchOrMouseEvent) {\n        // http://www.quirksmode.org/js/events_properties.html\n        var posx = 0\n        var posy = 0\n        var e = touchOrMouseEvent\n        if (!e) {\n            e = window.event\n        }\n        if (e.pageX || e.pageY) {\n            posx = e.pageX\n            posy = e.pageY\n        }\n        else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft\n                + document.documentElement.scrollLeft\n            posy = e.clientY + document.body.scrollTop\n                + document.documentElement.scrollTop\n        }\n        // posx and posy contain the mouse position relative to the document\n    \n        const coordinates = { \"x\": posx, \"y\": posy }\n    \n        return coordinates\n        \n    }\n    \n    \n    \n    static getElementPositionInDocument(el) {\n        //https://www.kirupa.com/html5/getting_mouse_click_position.htm\n        var xPosition = 0\n        var yPosition = 0\n    \n        while (el) {\n            if (el.tagName == \"BODY\") {\n                \n                // Coordinates in document are coordinates in body, therefore subtracting the scroll position of the body is not needed\n                \n                //      // deal with browser quirks with body/window/document and page scroll\n                //      var xScrollPos = el.scrollLeft || document.documentElement.scrollLeft;\n                //      var yScrollPos = el.scrollTop || document.documentElement.scrollTop;\n                //\n                //      xPosition += (el.offsetLeft - xScrollPos + el.clientLeft);\n                //      yPosition += (el.offsetTop - yScrollPos + el.clientTop);\n            }\n            else {\n                xPosition += (el.offsetLeft - el.scrollLeft + el.clientLeft)\n                yPosition += (el.offsetTop - el.scrollTop + el.clientTop)\n            }\n            \n            el = el.offsetParent\n        }\n        return {\n            x: xPosition,\n            y: yPosition\n        }\n    }\n    \n    static convertCoordinatesFromDocumentToElement(x, y, element) {\n        const elementPositionInDocument = this.getElementPositionInDocument(element)\n        const coordinatesInElement = { \"x\": x - elementPositionInDocument.x, \"y\": y - elementPositionInDocument.y }\n        return coordinatesInElement\n    }\n    \n    static getEventCoordinatesInElement(touchOrMouseEvent, element) {\n        const coordinatesInDocument = this.getEventCoordinatesInDocument(touchOrMouseEvent)\n        const coordinatesInElement = this.convertCoordinatesFromDocumentToElement(\n            coordinatesInDocument.x,\n            coordinatesInDocument.y,\n            element\n        )\n        return coordinatesInElement\n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UICore } from \"./UICore\"\nimport { IS_NOT, nil, NO, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UIImageView extends UIView {\n    \n    \n    //actionIndicator: UIActionIndicator;\n    _sourceKey: string\n    _defaultSource: string\n    \n    _fillMode: any\n    \n    _hiddenWhenEmpty = NO\n    \n    \n    constructor(elementID?, viewHTMLElement = null) {\n        \n        super(elementID, viewHTMLElement, \"img\")\n        \n        \n        //this.actionIndicator = new UIActionIndicator(elementID + \"ActionIndicator\");\n        \n        \n    }\n    \n    \n    \n    \n    static fillMode = {\n        \n        \"stretchToFill\": \"fill\",\n        \"aspectFit\": \"contain\",\n        \"aspectFill\": \"cover\",\n        \"center\": \"none\",\n        \"aspectFitIfLarger\": \"scale-down\"\n        \n    }\n    \n    \n    \n    \n    \n    get viewHTMLElement() {\n        \n        return super.viewHTMLElement as HTMLImageElement\n        \n    }\n    \n    \n    \n    \n    \n    static objectURLFromDataURL(dataURL: string) {\n        \n        // if (IS_NOT(dataURL)) {\n        \n        //     return nil;\n        \n        // }\n    \n        // @ts-ignore\n        const blob = dataURLtoBlob(dataURL)\n    \n        const objectURL = URL.createObjectURL(blob)\n    \n        return objectURL\n        \n    }\n    \n    \n    \n    \n    static dataURL(url, callback) {\n        const xhr = new XMLHttpRequest()\n        xhr.open(\"get\", url)\n        xhr.responseType = \"blob\"\n        xhr.onload = function () {\n            const fr = new FileReader()\n    \n            fr.onload = function () {\n                callback(this.result)\n            }\n            \n            fr.readAsDataURL(xhr.response) // async call\n        }\n        \n        xhr.send()\n    }\n    \n    \n    \n    static dataURLWithMaxSize(URLString: string, maxSize: number, completion: (resultURLString: string) => void) {\n    \n        const imageView = new UIImageView()\n        imageView.imageSource = URLString\n        \n        imageView.viewHTMLElement.onload = function () {\n    \n            const originalSize = imageView.intrinsicContentSize()\n    \n    \n            var multiplier = maxSize / Math.max(originalSize.height, originalSize.width)\n    \n            multiplier = Math.min(1, multiplier)\n    \n    \n            const result = imageView.getDataURL((originalSize.height * multiplier).integerValue, (originalSize.width *\n                multiplier).integerValue)\n    \n            completion(result)\n            \n        }\n        \n    }\n    \n    \n    static dataURLWithSizes(\n        URLString: string,\n        height: number,\n        width: number,\n        completion: (resultURLString: string) => void\n    ) {\n    \n        const imageView = new UIImageView()\n        imageView.imageSource = URLString\n        \n        imageView.viewHTMLElement.onload = function () {\n    \n            const result = imageView.getDataURL(height, width)\n            completion(result)\n            \n        }\n        \n    }\n    \n    \n    getDataURL(height?: number, width?: number) {\n    \n        const img = this.viewHTMLElement\n    \n        // Create an empty canvas element\n        const canvas = document.createElement(\"canvas\")\n        canvas.width = width\n        canvas.height = height\n        \n        // Copy the image contents to the canvas\n        const ctx = canvas.getContext(\"2d\")\n        ctx.drawImage(img, 0, 0, width, height)\n        \n        // Get the data-URL formatted image\n        // Firefox supports PNG and JPEG. You could check img.src to\n        // guess the original format, but be aware the using \"image/jpg\"\n        // will re-encode the image.\n        const dataURL = canvas.toDataURL(\"image/png\")\n    \n        return dataURL\n        \n        //return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n        \n    }\n    \n    \n    \n    \n    get imageSource() {\n        \n        return this.viewHTMLElement.src\n        \n    }\n    \n    set imageSource(sourceString: string) {\n        \n        if (IS_NOT(sourceString)) {\n            sourceString = \"\"\n        }\n        \n        this.viewHTMLElement.src = sourceString\n        \n        if (this.hiddenWhenEmpty) {\n            this.hidden = IS_NOT(this.imageSource)\n        }\n        \n        if (!sourceString || !sourceString.length) {\n            \n            //this.actionIndicator.stop();\n            this.hidden = YES\n            \n            return\n            \n        }\n        else {\n            \n            this.hidden = NO\n            \n        }\n        \n        // this.superview.addSubview(this.actionIndicator);\n        // this.actionIndicator.frame = this.frame;\n        // this.actionIndicator.start();\n        // this.actionIndicator.backgroundColor = UIColor.redColor\n        \n        // @ts-ignore\n        this.viewHTMLElement.onload = function (this: UIImageView, event: Event) {\n            \n            this.superview.setNeedsLayout()\n            \n            //this.actionIndicator.removeFromSuperview();\n            \n        }.bind(this)\n        \n    }\n    \n    \n    \n    setImageSource(key: string, defaultString: string) {\n    \n        const languageName = UICore.languageService.currentLanguageKey\n        this.imageSource = UICore.languageService.stringForKey(key, languageName, defaultString, nil)\n        \n    }\n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setImageSourceFromKeyIfPossible()\n            \n        }\n        \n    }\n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        super.willMoveToSuperview(superview)\n        \n        this._setImageSourceFromKeyIfPossible()\n        \n    }\n    \n    _setImageSourceFromKeyIfPossible() {\n        \n        if (this._sourceKey && this._defaultSource) {\n            \n            this.setImageSource(this._sourceKey, this._defaultSource)\n            \n        }\n        \n    }\n    \n    \n    \n    get fillMode() {\n        \n        \n        return this._fillMode\n        \n    }\n    \n    set fillMode(fillMode) {\n        \n        this._fillMode = fillMode;\n        \n        (this.style as any).objectFit = fillMode\n        \n    }\n    \n    \n    get hiddenWhenEmpty() {\n        return this._hiddenWhenEmpty\n    }\n    \n    set hiddenWhenEmpty(hiddenWhenEmpty: boolean) {\n        this._hiddenWhenEmpty = hiddenWhenEmpty\n        if (hiddenWhenEmpty) {\n            this.hidden = IS_NOT(this.imageSource)\n        }\n    }\n    \n    \n    \n    \n    \n    didMoveToSuperview(superview: UIView) {\n        \n        super.didMoveToSuperview(superview)\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        \n        \n    }\n    \n    \n    \n    \n    intrinsicContentSize() {\n    \n    \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.naturalHeight, this.viewHTMLElement.naturalWidth)\n    \n        return result\n        \n        \n    }\n    \n    intrinsicContentSizeWithConstraints(constrainingHeight = 0, constrainingWidth = 0) {\n    \n        const heightRatio = constrainingHeight / this.viewHTMLElement.naturalHeight\n    \n        const widthRatio = constrainingWidth / this.viewHTMLElement.naturalWidth\n    \n        const multiplier = Math.max(heightRatio, widthRatio)\n    \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.naturalHeight *\n            multiplier, this.viewHTMLElement.naturalWidth * multiplier)\n    \n        return result\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport { UIBaseButton } from \"./UIBaseButton\"\nimport { UIColor } from \"./UIColor\"\nimport { UIImageView } from \"./UIImageView\"\nimport { IS, IS_NOT, IS_NOT_NIL, nil, NO, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UITextView } from \"./UITextView\"\n\n\nexport interface UIButtonColorSpecifier {\n    \n    titleLabel: UIButtonElementColorSpecifier;\n    background: UIButtonElementColorSpecifier;\n    \n}\n\n\nexport interface UIButtonElementColorSpecifier {\n    \n    normal: UIColor;\n    hovered?: UIColor;\n    highlighted: UIColor;\n    focused?: UIColor;\n    selected: UIColor;\n    selectedAndHighlighted?: UIColor;\n    \n}\n\n\n\nexport class UIButton extends UIBaseButton {\n    \n    _contentPadding: any\n    _titleLabel: UITextView\n    _imageView: UIImageView\n    \n    usesAutomaticTitleFontSize = NO\n    minAutomaticFontSize: number = nil\n    maxAutomaticFontSize: number = 25\n    \n    colors: UIButtonColorSpecifier\n    \n    \n    constructor(elementID: string, elementType?: string, titleType = UITextView.type.span) {\n        \n        super(elementID, elementType, { \"titleType\": titleType })\n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID, viewHTMLElement, initViewData: { titleType: string }) {\n        \n        this.class.superclass = UIBaseButton\n        \n        // Instance variables\n        \n        this.colors = {\n            \n            titleLabel: {\n                \n                normal: UIColor.whiteColor,\n                highlighted: UIColor.whiteColor,\n                selected: UIColor.whiteColor\n                \n            },\n            \n            background: {\n                \n                normal: UIColor.blueColor,\n                highlighted: UIColor.greenColor,\n                selected: UIColor.redColor\n                \n            }\n            \n        }\n        \n        \n        this._imageView = new UIImageView(elementID + \"ImageView\")\n        this._imageView.hidden = YES\n        this.addSubview(this.imageView)\n        \n        this.imageView.fillMode = UIImageView.fillMode.aspectFitIfLarger\n        \n        \n        if (IS_NOT_NIL(initViewData.titleType)) {\n            \n            this._titleLabel = new UITextView(elementID + \"TitleLabel\", initViewData.titleType)\n            this.titleLabel.style.whiteSpace = \"nowrap\"\n            this.addSubview(this.titleLabel)\n            \n            this.titleLabel.userInteractionEnabled = NO\n            \n        }\n        \n        this.contentPadding = 10\n        \n        this.imageView.userInteractionEnabled = NO\n        this.titleLabel.textAlignment = UITextView.textAlignment.center\n        this.titleLabel.nativeSelectionEnabled = NO\n        \n    }\n    \n    \n    \n    get contentPadding() {\n        \n        return this._contentPadding.integerValue\n        \n    }\n    \n    set contentPadding(contentPadding) {\n        \n        this._contentPadding = contentPadding\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    \n    public set hovered(hovered: boolean) {\n        this._hovered = hovered\n        this.updateContentForCurrentState()\n    }\n    \n    public get hovered(): boolean {\n        return this._hovered\n    }\n    \n    public set highlighted(highlighted: boolean) {\n        this._highlighted = highlighted\n        this.updateContentForCurrentState()\n    }\n    \n    public get highlighted(): boolean {\n        return this._highlighted\n    }\n    \n    public set focused(focused: boolean) {\n        this._focused = focused\n        if (focused) {\n            this.focus()\n        }\n        else {\n            this.blur()\n        }\n        this.updateContentForCurrentState()\n    }\n    \n    public get focused(): boolean {\n        return this._focused\n    }\n    \n    public set selected(selected: boolean) {\n        this._selected = selected\n        this.updateContentForCurrentState()\n    }\n    \n    public get selected(): boolean {\n        return this._selected\n    }\n    \n    \n    \n    \n    \n    updateContentForCurrentState() {\n    \n        var updateFunction: Function = this.updateContentForNormalState\n        if (this.selected && this.highlighted) {\n            updateFunction = this.updateContentForSelectedAndHighlightedState\n        }\n        else if (this.selected) {\n            updateFunction = this.updateContentForSelectedState\n        }\n        else if (this.focused) {\n            updateFunction = this.updateContentForFocusedState\n        }\n        else if (this.highlighted) {\n            updateFunction = this.updateContentForHighlightedState\n        }\n        else if (this.hovered) {\n            updateFunction = this.updateContentForHoveredState\n        }\n        \n        if (!IS(updateFunction)) {\n            this.titleLabel.textColor = UIColor.nilColor\n            this.backgroundColor = UIColor.nilColor\n        }\n        else {\n            updateFunction.call(this)\n        }\n        \n        this.updateContentForCurrentEnabledState();\n        \n    }\n    \n    updateContentForNormalState() {\n        \n        this.backgroundColor = this.colors.background.normal\n        this.titleLabel.textColor = this.colors.titleLabel.normal\n        \n    }\n    \n    updateContentForHoveredState() {\n        \n        this.updateContentForNormalState()\n        \n        if (this.colors.background.hovered) {\n            this.backgroundColor = this.colors.background.hovered\n        }\n        \n        if (this.colors.titleLabel.hovered) {\n            this.titleLabel.textColor = this.colors.titleLabel.hovered\n        }\n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        this.updateContentForHoveredState()\n        \n        if (this.colors.background.focused) {\n            this.backgroundColor = this.colors.background.focused\n        }\n        \n        if (this.colors.titleLabel.focused) {\n            this.titleLabel.textColor = this.colors.titleLabel.focused\n        }\n        \n    }\n    \n    updateContentForHighlightedState() {\n        \n        this.backgroundColor = this.colors.background.highlighted\n        this.titleLabel.textColor = this.colors.titleLabel.highlighted\n        \n    }\n    \n    updateContentForSelectedState() {\n        \n        this.backgroundColor = this.colors.background.selected\n        this.titleLabel.textColor = this.colors.titleLabel.selected\n        \n    }\n    \n    updateContentForSelectedAndHighlightedState() {\n        \n        this.updateContentForSelectedState()\n        \n        if (this.colors.background.selectedAndHighlighted) {\n            this.backgroundColor = this.colors.background.selectedAndHighlighted\n        }\n        \n        if (this.colors.titleLabel.selectedAndHighlighted) {\n            this.titleLabel.textColor = this.colors.titleLabel.selectedAndHighlighted\n        }\n        \n    }\n    \n    \n    set enabled(enabled: boolean) {\n        \n        // @ts-ignore\n        super.enabled = enabled\n        \n        this.updateContentForCurrentState()\n        \n    }\n    \n    get enabled() {\n        \n        // @ts-ignore\n        return super.enabled\n        \n    }\n    \n    updateContentForCurrentEnabledState() {\n        \n        if (this.enabled) {\n            this.alpha = 1\n        }\n        else {\n            this.alpha = 0.5\n        }\n        \n        this.userInteractionEnabled = this.enabled\n        \n    }\n    \n    \n    \n    addStyleClass(styleClassName: string) {\n        \n        super.addStyleClass(styleClassName)\n        \n        if (this.styleClassName != styleClassName) {\n            \n            this.updateContentForCurrentState.call(this)\n            \n        }\n        \n    }\n    \n    \n    get titleLabel() {\n        \n        return this._titleLabel\n        \n    }\n    \n    get imageView() {\n        \n        return this._imageView\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        var bounds = this.bounds\n    \n        this.hoverText = this.titleLabel.text\n        \n        // Image only if text is not present\n        if (IS_NOT(this.imageView.hidden) && !IS(this.titleLabel.text)) {\n            \n            \n            this.imageView.frame = bounds\n            \n            \n        }\n        \n        // Text only if image is not present\n        if (IS(this.imageView.hidden) && IS(this.titleLabel.text)) {\n            \n            var titleElement = this.titleLabel.viewHTMLElement\n            \n            \n            this.titleLabel.style.left = this.contentPadding\n            this.titleLabel.style.right = this.contentPadding\n            // this.titleLabel.style.marginLeft = \"\"\n            // this.titleLabel.style.right = this.contentPadding\n            this.titleLabel.style.top = \"50%\"\n            this.titleLabel.style.transform = \"translateY(-50%)\"\n            this.titleLabel.frame = new UIRectangle(nil, nil, nil, nil)\n            \n            if (this.usesAutomaticTitleFontSize) {\n                \n                var hidden = this.titleLabel.hidden\n                \n                this.titleLabel.hidden = YES\n                \n                this.titleLabel.fontSize = 15\n                \n                this.titleLabel.fontSize = UITextView.automaticallyCalculatedFontSize(\n                    new UIRectangle(\n                        0,\n                        0,\n                        this.bounds.height,\n                        1 *\n                        this.titleLabel.viewHTMLElement.offsetWidth\n                    ),\n                    this.titleLabel.intrinsicContentSize(),\n                    this.titleLabel.fontSize,\n                    this.minAutomaticFontSize,\n                    this.maxAutomaticFontSize\n                )\n                \n                this.titleLabel.hidden = hidden\n                \n            }\n            \n            \n        }\n        \n        // Image and text both present\n        if (IS_NOT(this.imageView.hidden) && IS(this.titleLabel.text)) {\n    \n            const imageShareOfWidth = 0.25\n    \n            bounds = bounds.rectangleWithInset(this.contentPadding)\n    \n            const imageFrame = bounds.copy()\n            imageFrame.width = bounds.height - this.contentPadding * 0.5\n            this.imageView.frame = imageFrame\n            \n            var titleElement = this.titleLabel.viewHTMLElement\n            \n            this.titleLabel.style.left = imageFrame.max.x + this.contentPadding\n            this.titleLabel.style.right = this.contentPadding\n            this.titleLabel.style.top = \"50%\"\n            this.titleLabel.style.transform = \"translateY(-50%)\"\n            \n            if (this.usesAutomaticTitleFontSize) {\n                \n                var hidden = this.titleLabel.hidden\n                \n                this.titleLabel.hidden = YES\n                \n                this.titleLabel.fontSize = 15\n                \n                this.titleLabel.fontSize = UITextView.automaticallyCalculatedFontSize(\n                    new UIRectangle(\n                        0,\n                        0,\n                        this.bounds.height,\n                        1 *\n                        this.titleLabel.viewHTMLElement.offsetWidth\n                    ),\n                    this.titleLabel.intrinsicContentSize(),\n                    this.titleLabel.fontSize,\n                    this.minAutomaticFontSize,\n                    this.maxAutomaticFontSize\n                )\n                \n                this.titleLabel.hidden = hidden\n                \n            }\n            \n        }\n        \n        this.applyClassesAndStyles()\n        \n    }\n    \n    initViewStyleSelectors() {\n        \n        this.initStyleSelector(\".\" + this.styleClassName, \"background-color: lightblue;\")\n        \n        // var selectorWithoutImage = \".\" + this.styleClassName + \" .\" + this.imageView.styleClassName + \" + .\" + this.titleLabel.styleClassName;\n        \n        // this.initStyleSelector(\n        //     selectorWithoutImage,\n        //     \"left: \" + this.contentPadding + \";\" +\n        //     \"right: \" + this.contentPadding + \";\" +\n        //     \"top: 50%;\" +\n        //     \"transform: translateY(-50%);\");\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UINativeScrollView extends UIView {\n    \n    \n    animationDuration = 0\n    \n    constructor(elementID, viewHTMLElement?) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this.style.cssText = this.style.cssText + \"-webkit-overflow-scrolling: touch;\"\n        \n        this.style.overflow = \"auto\"\n        \n        // this.scrollsX = YES;\n        // this.scrollsY = YES;\n        \n        this.viewHTMLElement.addEventListener(\"scroll\", function (this: UINativeScrollView, event: UIEvent) {\n            \n            \n            this.didScrollToPosition(new UIPoint(this.viewHTMLElement.scrollLeft, this.viewHTMLElement.scrollTop))\n            \n            this.broadcastEventInSubtree({\n                \n                name: UIView.broadcastEventName.PageDidScroll,\n                parameters: nil\n                \n            })\n            \n            \n        }.bind(this))\n        \n        \n    }\n    \n    \n    \n    \n    \n    didScrollToPosition(offsetPosition: UIPoint) {\n        \n        \n        \n    }\n    \n    \n    \n    get scrollsX() {\n        const result = (this.style.overflowX == \"scroll\")\n        return result\n    }\n    \n    set scrollsX(scrolls: boolean) {\n        if (scrolls) {\n            this.style.overflowX = \"scroll\"\n        }\n        else {\n            this.style.overflowX = \"hidden\"\n        }\n    }\n    \n    \n    \n    get scrollsY() {\n        const result = (this.style.overflowY == \"scroll\")\n        return result\n    }\n    \n    set scrollsY(scrolls: boolean) {\n        if (scrolls) {\n            this.style.overflowY = \"scroll\"\n        }\n        else {\n            this.style.overflowY = \"hidden\"\n        }\n    }\n    \n    \n    \n    get contentOffset() {\n        const result = new UIPoint(this.viewHTMLElement.scrollLeft, this.viewHTMLElement.scrollTop)\n        return result\n    }\n    \n    \n    set contentOffset(offsetPoint: UIPoint) {\n        \n        if (this.animationDuration) {\n            \n            this.scrollXTo(this.viewHTMLElement, offsetPoint.x, this.animationDuration)\n            this.scrollYTo(this.viewHTMLElement, offsetPoint.y, this.animationDuration)\n            \n            return\n            \n        }\n        \n        \n        this.viewHTMLElement.scrollLeft = offsetPoint.x\n        this.viewHTMLElement.scrollTop = offsetPoint.y\n        \n    }\n    \n    \n    scrollToBottom() {\n        \n        this.contentOffset = new UIPoint(this.contentOffset.x, this.scrollSize.height - this.frame.height)\n        \n    }\n    \n    scrollToTop() {\n        \n        this.contentOffset = new UIPoint(this.contentOffset.x, 0)\n        \n    }\n    \n    get isScrolledToBottom() {\n        \n        return this.contentOffset.isEqualTo(new UIPoint(this.contentOffset.x, this.scrollSize.height -\n            this.frame.height))\n        \n    }\n    \n    get isScrolledToTop() {\n        \n        return this.contentOffset.isEqualTo(new UIPoint(this.contentOffset.x, 0))\n        \n    }\n    \n    \n    \n    \n    \n    scrollYTo(element, to, duration) {\n        \n        duration = duration * 1000\n    \n        const start = element.scrollTop\n        const change = to - start\n        const increment = 10\n    \n        const animateScroll = function (elapsedTime) {\n            elapsedTime += increment\n            const position = this.easeInOut(elapsedTime, start, change, duration)\n            element.scrollTop = position\n            if (elapsedTime < duration) {\n                setTimeout(function () {\n                    animateScroll(elapsedTime)\n                }, increment)\n            }\n        }.bind(this)\n    \n        animateScroll(0)\n    }\n    \n    scrollXTo(element, to, duration) {\n        \n        duration = duration * 1000\n    \n        const start = element.scrollTop\n        const change = to - start\n        const increment = 10\n    \n        const animateScroll = function (elapsedTime) {\n            elapsedTime += increment\n            const position = this.easeInOut(elapsedTime, start, change, duration)\n            element.scrollLeft = position\n            if (elapsedTime < duration) {\n                setTimeout(function () {\n                    animateScroll(elapsedTime)\n                }, increment)\n            }\n        }.bind(this)\n    \n        animateScroll(0)\n    }\n    \n    easeInOut(currentTime, start, change, duration) {\n        currentTime /= duration / 2\n        if (currentTime < 1) {\n            return change / 2 * currentTime * currentTime + start\n        }\n        currentTime -= 1\n        return -change / 2 * (currentTime * (currentTime - 2) - 1) + start\n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton } from \"./UIButton\"\nimport { UINativeScrollView } from \"./UINativeScrollView\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport interface UITableViewReusableViewsContainerObject {\n    \n    [key: string]: UIView[];\n    \n}\n\n\nexport interface UITableViewReusableViewPositionObject {\n    \n    bottomY: number;\n    topY: number;\n    \n    isValid: boolean;\n    \n}\n\n\n\n\n\nexport class UITableView extends UINativeScrollView {\n    \n    \n    \n    \n    allRowsHaveEqualHeight: boolean = NO\n    _visibleRows: UIView[] = []\n    _firstLayoutVisibleRows: UIView[] = []\n    \n    _rowPositions: UITableViewReusableViewPositionObject[] = []\n    \n    _highestValidRowPositionIndex: number = 0\n    \n    _reusableViews: UITableViewReusableViewsContainerObject = {}\n    \n    _removedReusableViews: UITableViewReusableViewsContainerObject = {}\n    \n    _fullHeightView: UIView\n    \n    _rowIDIndex: number = 0\n    \n    reloadsOnLanguageChange = YES\n    \n    sidePadding = 0\n    \n    _persistedData: any[] = []\n    _needsDrawingOfVisibleRowsBeforeLayout = NO\n    _isDrawVisibleRowsScheduled = NO\n    _shouldAnimateNextLayout: boolean\n    \n    animationDuration = 0.25\n    \n    \n    constructor(elementID) {\n        \n        super(elementID)\n        \n        this.scrollsX = NO\n        \n    }\n    \n    \n    \n    initView(elementID, viewHTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        this._fullHeightView = new UIView()\n        this._fullHeightView.hidden = YES\n        this._fullHeightView.userInteractionEnabled = NO\n        this.addSubview(this._fullHeightView)\n        \n    }\n    \n    \n    \n    loadData() {\n        \n        this._persistedData = []\n        \n        this._calculatePositionsUntilIndex(this.numberOfRows() - 1)\n        this._needsDrawingOfVisibleRowsBeforeLayout = YES\n        \n        this.setNeedsLayout()\n        \n        // this.forEachViewInSubtree(function(view) {\n        \n        //     view.setNeedsLayout();\n        \n        // })\n        \n    }\n    \n    reloadData() {\n        \n        this._removeVisibleRows()\n        this._removeAllReusableRows()\n        \n        this._rowPositions = []\n        this._highestValidRowPositionIndex = 0\n        \n        this.loadData()\n        \n    }\n    \n    \n    \n    highlightChanges(previousData: any[], newData: any[]) {\n        \n        previousData = previousData.map(function (dataPoint, index, array) {\n            \n            return JSON.stringify(dataPoint)\n            \n        })\n        \n        newData = newData.map(function (dataPoint, index, array) {\n            \n            return JSON.stringify(dataPoint)\n            \n        })\n        \n        \n        const newIndexes: number[] = []\n        \n        newData.forEach(function (value, index, array) {\n            \n            if (!previousData.contains(value)) {\n                \n                newIndexes.push(index)\n                \n            }\n            \n        })\n        \n        newIndexes.forEach(function (this: UITableView, index) {\n            \n            if (this.isRowWithIndexVisible(index)) {\n                \n                this.highlightRowAsNew(this.viewForRowWithIndex(index))\n                \n            }\n            \n        }.bind(this))\n        \n    }\n    \n    \n    \n    highlightRowAsNew(row: UIView) {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    invalidateSizeOfRowWithIndex(index: number, animateChange = NO) {\n        \n        if (this._rowPositions[index]) {\n            this._rowPositions[index].isValid = NO\n        }\n        \n        this._highestValidRowPositionIndex = Math.min(this._highestValidRowPositionIndex, index - 1)\n        \n        // if (index == 0) {\n        \n        //     this._highestValidRowPositionIndex = 0;\n        \n        //     this._rowPositions = [];\n        \n        // }\n        \n        this._needsDrawingOfVisibleRowsBeforeLayout = YES\n        \n        this._shouldAnimateNextLayout = animateChange\n        \n    }\n    \n    \n    \n    _calculateAllPositions() {\n        this._calculatePositionsUntilIndex(this.numberOfRows() - 1)\n    }\n    \n    _calculatePositionsUntilIndex(maxIndex: number) {\n        \n        var validPositionObject = this._rowPositions[this._highestValidRowPositionIndex]\n        if (!IS(validPositionObject)) {\n            validPositionObject = {\n                bottomY: 0,\n                topY: 0,\n                isValid: YES\n            }\n        }\n        \n        var previousBottomY = validPositionObject.bottomY\n        \n        if (!this._rowPositions.length) {\n            \n            this._highestValidRowPositionIndex = -1\n            \n        }\n        \n        for (var i = this._highestValidRowPositionIndex + 1; i <= maxIndex; i++) {\n            \n            var height: number\n            \n            const rowPositionObject = this._rowPositions[i]\n            \n            if (IS((rowPositionObject || nil).isValid)) {\n                \n                height = rowPositionObject.bottomY - rowPositionObject.topY\n                \n            }\n            else {\n                \n                height = this.heightForRowWithIndex(i)\n                \n            }\n            \n            \n            \n            \n            const positionObject: UITableViewReusableViewPositionObject = {\n                bottomY: previousBottomY + height,\n                topY: previousBottomY,\n                isValid: YES\n            }\n            \n            if (i < this._rowPositions.length) {\n                this._rowPositions[i] = positionObject\n            }\n            else {\n                this._rowPositions.push(positionObject)\n            }\n            this._highestValidRowPositionIndex = i\n            previousBottomY = previousBottomY + height\n            \n        }\n        \n    }\n    \n    \n    \n    indexesForVisibleRows(paddingRatio = 0.5): number[] {\n        \n        const firstVisibleY = this.contentOffset.y - this.bounds.height * paddingRatio\n        const lastVisibleY = firstVisibleY + this.bounds.height * (1 + paddingRatio)\n        \n        const numberOfRows = this.numberOfRows()\n        \n        if (this.allRowsHaveEqualHeight) {\n            \n            const rowHeight = this.heightForRowWithIndex(0)\n            \n            var firstIndex = firstVisibleY / rowHeight\n            var lastIndex = lastVisibleY / rowHeight\n            \n            firstIndex = Math.trunc(firstIndex)\n            lastIndex = Math.trunc(lastIndex) + 1\n            \n            firstIndex = Math.max(firstIndex, 0)\n            lastIndex = Math.min(lastIndex, numberOfRows - 1)\n            \n            var result = []\n            for (var i = firstIndex; i < lastIndex + 1; i++) {\n                result.push(i)\n            }\n            return result\n        }\n        \n        var accumulatedHeight = 0\n        var result = []\n        \n        this._calculateAllPositions()\n        \n        const rowPositions = this._rowPositions\n        \n        for (var i = 0; i < numberOfRows; i++) {\n            \n            const height = rowPositions[i].bottomY - rowPositions[i].topY  // this.heightForRowWithIndex(i)\n            \n            accumulatedHeight = accumulatedHeight + height\n            if (accumulatedHeight >= firstVisibleY) {\n                result.push(i)\n            }\n            if (accumulatedHeight >= lastVisibleY) {\n                break\n            }\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    _removeVisibleRows() {\n        \n        const visibleRows = []\n        this._visibleRows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n            \n            this._persistedData[row._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(\n                row._UITableViewRowIndex,\n                row\n            )\n            row.removeFromSuperview()\n            this._removedReusableViews[row._UITableViewReusabilityIdentifier].push(row)\n            \n            \n        }, this)\n        this._visibleRows = visibleRows\n        \n    }\n    \n    \n    \n    _removeAllReusableRows() {\n        // @ts-ignore\n        this._reusableViews.forEach(function (this: UITableView, rows: UIView[]) {\n            rows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n                \n                this._persistedData[row._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(\n                    row._UITableViewRowIndex,\n                    row\n                )\n                row.removeFromSuperview()\n                \n                this._markReusableViewAsUnused(row)\n                \n            }.bind(this))\n        }.bind(this))\n    }\n    \n    \n    \n    _markReusableViewAsUnused(row: UIView) {\n        if (!this._removedReusableViews[row._UITableViewReusabilityIdentifier].contains(row)) {\n            this._removedReusableViews[row._UITableViewReusabilityIdentifier].push(row)\n        }\n    }\n    \n    _drawVisibleRows() {\n        \n        if (!this.isMemberOfViewTree) {\n            return\n        }\n        \n        const visibleIndexes = this.indexesForVisibleRows()\n        \n        const minIndex = visibleIndexes[0]\n        const maxIndex = visibleIndexes[visibleIndexes.length - 1]\n        \n        const removedViews = []\n        \n        const visibleRows = []\n        this._visibleRows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n            if (row._UITableViewRowIndex < minIndex || row._UITableViewRowIndex > maxIndex) {\n                \n                //row.removeFromSuperview();\n                \n                this._persistedData[row._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(\n                    row._UITableViewRowIndex,\n                    row\n                )\n                \n                this._removedReusableViews[row._UITableViewReusabilityIdentifier].push(row)\n                \n                removedViews.push(row)\n                \n            }\n            else {\n                visibleRows.push(row)\n            }\n        }, this)\n        this._visibleRows = visibleRows\n        \n        visibleIndexes.forEach(function (this: UITableView, rowIndex: number, index: number, array: number) {\n            \n            \n            if (this.isRowWithIndexVisible(rowIndex)) {\n                return\n            }\n            const view: UIView = this.viewForRowWithIndex(rowIndex)\n            //view._UITableViewRowIndex = rowIndex;\n            this._firstLayoutVisibleRows.push(view)\n            this._visibleRows.push(view)\n            this.addSubview(view)\n            \n        } as any, this)\n        \n        for (var i = 0; i < removedViews.length; i++) {\n            \n            var view: UIView = removedViews[i]\n            if (this._visibleRows.indexOf(view) == -1) {\n                \n                //this._persistedData[view._UITableViewRowIndex] = this.persistenceDataItemForRowWithIndex(view._UITableViewRowIndex, view);\n                view.removeFromSuperview()\n                \n                //this._removedReusableViews[view._UITableViewReusabilityIdentifier].push(view);\n                \n            }\n            \n        }\n        \n        //this.setNeedsLayout();\n        \n    }\n    \n    \n    visibleRowWithIndex(rowIndex: number): UIView {\n        for (var i = 0; i < this._visibleRows.length; i++) {\n            const row = this._visibleRows[i]\n            if (row._UITableViewRowIndex == rowIndex) {\n                return row\n            }\n        }\n        return nil\n    }\n    \n    \n    isRowWithIndexVisible(rowIndex: number) {\n        return IS(this.visibleRowWithIndex(rowIndex))\n    }\n    \n    \n    \n    reusableViewForIdentifier(identifier: string, rowIndex: number) {\n        \n        if (!this._removedReusableViews[identifier]) {\n            this._removedReusableViews[identifier] = []\n        }\n        \n        if (this._removedReusableViews[identifier] && this._removedReusableViews[identifier].length) {\n            \n            const view = this._removedReusableViews[identifier].pop()\n            \n            view._UITableViewRowIndex = rowIndex\n            \n            Object.assign(view, this._persistedData[rowIndex] || this.defaultRowPersistenceDataItem())\n            \n            return view\n            \n        }\n        \n        if (!this._reusableViews[identifier]) {\n            this._reusableViews[identifier] = []\n        }\n        \n        const newView = this.newReusableViewForIdentifier(identifier, this._rowIDIndex)\n        this._rowIDIndex = this._rowIDIndex + 1\n        \n        if (this._rowIDIndex > 40) {\n            \n            const asd = 1\n            \n        }\n        \n        newView._UITableViewReusabilityIdentifier = identifier\n        \n        newView._UITableViewRowIndex = rowIndex\n        \n        Object.assign(newView, this._persistedData[rowIndex] || this.defaultRowPersistenceDataItem())\n        this._reusableViews[identifier].push(newView)\n        \n        return newView\n        \n    }\n    \n    \n    // Functions that should be overridden to draw the correct content START\n    newReusableViewForIdentifier(identifier: string, rowIDIndex: number): UIView {\n        \n        const view = new UIButton(this.elementID + \"Row\" + rowIDIndex)\n        \n        view.stopsPointerEventPropagation = NO\n        view.pausesPointerEvents = NO\n        \n        return view\n        \n    }\n    \n    heightForRowWithIndex(index: number): number {\n        return 50\n    }\n    \n    numberOfRows() {\n        return 10000\n    }\n    \n    defaultRowPersistenceDataItem() {\n        \n        \n        \n    }\n    \n    persistenceDataItemForRowWithIndex(rowIndex: number, row: UIView) {\n        \n        \n        \n    }\n    \n    viewForRowWithIndex(rowIndex: number): UIView {\n        \n        const row = this.reusableViewForIdentifier(\"Row\", rowIndex);\n        (row as UIButton).titleLabel.text = \"Row \" + rowIndex\n        \n        return row\n        \n    }\n    \n    // Functions that should be overridden to draw the correct content END\n    \n    \n    // Functions that trigger redrawing of the content\n    didScrollToPosition(offsetPosition: UIPoint) {\n        \n        super.didScrollToPosition(offsetPosition)\n        \n        this.forEachViewInSubtree(function (view: UIView) {\n            \n            view._isPointerValid = NO\n            \n        })\n        \n        if (!this._isDrawVisibleRowsScheduled) {\n            \n            this._isDrawVisibleRowsScheduled = YES\n            \n            UIView.runFunctionBeforeNextFrame(function (this: UITableView) {\n                \n                this._calculateAllPositions()\n                \n                this._drawVisibleRows()\n                \n                this.setNeedsLayout()\n                \n                this._isDrawVisibleRowsScheduled = NO\n                \n            }.bind(this))\n            \n        }\n        \n    }\n    \n    wasAddedToViewTree() {\n        this.loadData()\n    }\n    \n    setFrame(rectangle: UIRectangle, zIndex?: number, performUncheckedLayout?: boolean) {\n        \n        const frame = this.frame\n        super.setFrame(rectangle, zIndex, performUncheckedLayout)\n        if (frame.isEqualTo(rectangle) && !performUncheckedLayout) {\n            return\n        }\n        \n        this._needsDrawingOfVisibleRowsBeforeLayout = YES\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged && this.reloadsOnLanguageChange) {\n            \n            this.reloadData()\n            \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    private _layoutAllRows(positions = this._rowPositions) {\n        \n        const bounds = this.bounds\n        \n        this._visibleRows.forEach(function (this: UITableView, row: UIView, index: number, array: UIView[]) {\n            \n            const frame = bounds.copy()\n            \n            const positionObject = positions[row._UITableViewRowIndex]\n            frame.min.y = positionObject.topY\n            frame.max.y = positionObject.bottomY\n            row.frame = frame\n            \n            row.style.width = \"\" + (bounds.width - this.sidePadding * 2).integerValue + \"px\"\n            row.style.left = \"\" + this.sidePadding.integerValue + \"px\"\n            \n            \n        }, this)\n        \n        this._fullHeightView.frame = bounds.rectangleWithHeight((positions.lastElement ||\n            nil).bottomY).rectangleWithWidth(bounds.width * 0.5)\n        \n        this._firstLayoutVisibleRows = []\n        \n        \n    }\n    \n    private _animateLayoutAllRows() {\n        \n        UIView.animateViewOrViewsWithDurationDelayAndFunction(\n            this._visibleRows,\n            this.animationDuration,\n            0,\n            undefined,\n            function (this: UITableView) {\n                \n                this._layoutAllRows()\n                \n            }.bind(this),\n            function (this: UITableView) {\n                \n                // this._calculateAllPositions()\n                // this._layoutAllRows()\n                \n            }.bind(this)\n        )\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        const previousPositions: UITableViewReusableViewPositionObject[] = JSON.parse(JSON.stringify(this._rowPositions))\n        \n        const previousVisibleRowsLength = this._visibleRows.length\n        \n        if (this._needsDrawingOfVisibleRowsBeforeLayout) {\n            \n            //this._calculateAllPositions()\n            \n            this._drawVisibleRows()\n            \n            this._needsDrawingOfVisibleRowsBeforeLayout = NO\n            \n        }\n        \n        \n        \n        super.layoutSubviews()\n        \n        \n        if (!this.numberOfRows() || !this.isMemberOfViewTree) {\n            \n            return\n            \n        }\n        \n        \n        \n        \n        \n        if (this._shouldAnimateNextLayout) {\n            \n            \n            \n            // Need to do layout with the previous positions\n            \n            this._layoutAllRows(previousPositions)\n            \n            \n            if (previousVisibleRowsLength < this._visibleRows.length) {\n                \n                \n                UIView.runFunctionBeforeNextFrame(function (this: UITableView) {\n                    \n                    this._animateLayoutAllRows()\n                    \n                }.bind(this))\n                \n            }\n            else {\n                \n                this._animateLayoutAllRows()\n                \n            }\n            \n            \n            this._shouldAnimateNextLayout = NO\n            \n        }\n        else {\n            \n            // if (this._needsDrawingOfVisibleRowsBeforeLayout) {\n            \n            //     this._drawVisibleRows();\n            \n            //     this._needsDrawingOfVisibleRowsBeforeLayout = NO;\n            \n            // }\n            \n            this._calculateAllPositions()\n            \n            this._layoutAllRows()\n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    intrinsicContentHeight(constrainingWidth = 0) {\n        \n        \n        \n        var result = 0\n        \n        this._calculateAllPositions()\n        \n        if (this._rowPositions.length) {\n            \n            result = this._rowPositions[this._rowPositions.length - 1].bottomY\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import inlineWorker from '__inline-worker'\nexport default function Worker() {\n  return inlineWorker(\"\\\"contains\\\"in Array.prototype||(Array.prototype.contains=function(n){var r=this.indexOf(n)!=-1;return r});\\\"contains\\\"in String.prototype||(String.prototype.contains=function(n){var r=this.indexOf(n)!=-1;return r});onmessage=function(n){var r=h(n.data.filteringString,n.data.data,n.data.excludedData);r.identifier=n.data.identifier,r.instanceIdentifier=n.data.instanceIdentifier,postMessage(r)};function h(n,r,s){var a=[],e=[];if(n){var c=[];n.split(\\\" \\\").forEach(function(i,t,o){i&&c.push(i.toLowerCase())}),r.forEach(function(i,t,o){var u=i.toLowerCase(),f=[];c.forEach(function(p){f.push(u.contains(p)&&!s.contains(i))}),f.contains(!0)&&!f.contains(!1)&&(a.push(i),e.push(t))})}else s.length?a=r.forEach(function(i,t,o){s.indexOf(i)==-1&&(a.push(i),e.push(t))}):(a=r,r.forEach(function(i,t,o){e.push(t)}));return{filteredData:a,filteredIndexes:e}}\\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdWljb3JlLXRzL3NjcmlwdHMvVUlTdHJpbmdGaWx0ZXJXZWJXb3JrZXIud29ya2VyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyBAdHMtY2hlY2tcblxuaWYgKFwiY29udGFpbnNcIiBpbiBBcnJheS5wcm90b3R5cGUgPT0gZmFsc2UpIHtcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgQXJyYXkucHJvdG90eXBlLmNvbnRhaW5zID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgXG4gICAgICAgIHZhciByZXN1bHQgPSAodGhpcy5pbmRleE9mKGVsZW1lbnQpICE9IC0xKVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIFxuICAgIH1cbiAgICBcbn1cblxuaWYgKFwiY29udGFpbnNcIiBpbiBTdHJpbmcucHJvdG90eXBlID09IGZhbHNlKSB7XG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIFN0cmluZy5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgcmVzdWx0ID0gKHRoaXMuaW5kZXhPZihzdHJpbmcpICE9IC0xKVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIFxuICAgIH1cbiAgICBcbn1cblxuXG5cblxuXG5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBcbiAgICAvL2NvbnNvbGUubG9nKCdNZXNzYWdlIHJlY2VpdmVkIGZyb20gbWFpbiBzY3JpcHQnKTtcbiAgICB2YXIgd29ya2VyUmVzdWx0ID0gZmlsdGVyRGF0YShldmVudC5kYXRhLmZpbHRlcmluZ1N0cmluZywgZXZlbnQuZGF0YS5kYXRhLCBldmVudC5kYXRhLmV4Y2x1ZGVkRGF0YSlcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0LmlkZW50aWZpZXIgPSBldmVudC5kYXRhLmlkZW50aWZpZXJcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0Lmluc3RhbmNlSWRlbnRpZmllciA9IGV2ZW50LmRhdGEuaW5zdGFuY2VJZGVudGlmaWVyXG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHBvc3RNZXNzYWdlKHdvcmtlclJlc3VsdClcbiAgICBcbn1cblxuXG5cblxuXG5mdW5jdGlvbiBmaWx0ZXJEYXRhKGZpbHRlcmluZ1N0cmluZywgZGF0YSwgZXhjbHVkZWREYXRhKSB7XG4gICAgXG4gICAgdmFyIGZpbHRlcmVkRGF0YSA9IFtdXG4gICAgdmFyIGZpbHRlcmVkSW5kZXhlcyA9IFtdXG4gICAgXG4gICAgaWYgKGZpbHRlcmluZ1N0cmluZykge1xuICAgICAgICBcbiAgICAgICAgdmFyIGZpbHRlcmluZ1N0cmluZ1dvcmRzID0gW11cbiAgICAgICAgZmlsdGVyaW5nU3RyaW5nLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uICh3b3JkLCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgIGlmICh3b3JkKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVyaW5nU3RyaW5nV29yZHMucHVzaCh3b3JkLnRvTG93ZXJDYXNlKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGRhdGFTdHJpbmcsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgbG93ZXJjYXNlRGF0YVN0cmluZyA9IGRhdGFTdHJpbmcudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb29rIHRocm91Z2ggYWxsIHRoZSB3b3JkcyBpbiB0aGUgaW5wdXRcbiAgICAgICAgICAgIHZhciB3b3Jkc0ZvdW5kID0gW11cbiAgICAgICAgICAgIGZpbHRlcmluZ1N0cmluZ1dvcmRzLmZvckVhY2goZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgICAgICAgICAgICB3b3Jkc0ZvdW5kLnB1c2gobG93ZXJjYXNlRGF0YVN0cmluZy5jb250YWlucyh3b3JkKSAmJiAhZXhjbHVkZWREYXRhLmNvbnRhaW5zKGRhdGFTdHJpbmcpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gT25seSBzaG93IHRoZSBkYXRhU3RyaW5nIGlmIGl0IG1hdGNoZXMgYWxsIG9mIHRoZW1cbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGlmICh3b3Jkc0ZvdW5kLmNvbnRhaW5zKHRydWUpICYmICF3b3Jkc0ZvdW5kLmNvbnRhaW5zKGZhbHNlKSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFTdHJpbmcpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICB9XG4gICAgZWxzZSBpZiAoZXhjbHVkZWREYXRhLmxlbmd0aCkge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGZpbHRlcmVkRGF0YSA9IGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YVN0cmluZywgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChleGNsdWRlZERhdGEuaW5kZXhPZihkYXRhU3RyaW5nKSA9PSAtMSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFTdHJpbmcpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBcbiAgICAgICAgZmlsdGVyZWREYXRhID0gZGF0YVxuICAgICAgICBcbiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChzdHJpbmcsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaChpbmRleClcbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgXG4gICAgXG4gICAgcmV0dXJuIHsgXCJmaWx0ZXJlZERhdGFcIjogZmlsdGVyZWREYXRhLCBcImZpbHRlcmVkSW5kZXhlc1wiOiBmaWx0ZXJlZEluZGV4ZXMgfVxuICAgIFxuICAgIFxuICAgIFxufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIl0sCiAgIm1hcHBpbmdzIjogIkFBRUksYUFBYyxNQUFNLFlBR3BCLE1BQU0sVUFBVSxTQUFXLFNBQVVBLEVBQVMsQ0FFMUMsSUFBSUMsRUFBVSxLQUFLLFFBQVFELENBQU8sR0FBSyxHQUN2QyxPQUFPQyxDQUVYLEdBSUEsYUFBYyxPQUFPLFlBR3JCLE9BQU8sVUFBVSxTQUFXLFNBQVVDLEVBQVEsQ0FFMUMsSUFBSUQsRUFBVSxLQUFLLFFBQVFDLENBQU0sR0FBSyxHQUN0QyxPQUFPRCxDQUVYLEdBUUosVUFBWSxTQUFVRSxFQUFPLENBR3pCLElBQUlDLEVBQWVDLEVBQVdGLEVBQU0sS0FBSyxnQkFBaUJBLEVBQU0sS0FBSyxLQUFNQSxFQUFNLEtBQUssWUFBWSxFQUdsR0MsRUFBYSxXQUFhRCxFQUFNLEtBQUssV0FFckNDLEVBQWEsbUJBQXFCRCxFQUFNLEtBQUssbUJBRzdDLFlBQVlDLENBQVksQ0FFNUIsRUFNQSxTQUFTQyxFQUFXQyxFQUFpQkMsRUFBTUMsRUFBYyxDQUVyRCxJQUFJQyxFQUFlLENBQUMsRUFDaEJDLEVBQWtCLENBQUMsRUFFdkIsR0FBSUosRUFBaUIsQ0FFakIsSUFBSUssRUFBdUIsQ0FBQyxFQUM1QkwsRUFBZ0IsTUFBTSxHQUFHLEVBQUUsUUFBUSxTQUFVTSxFQUFNQyxFQUFPQyxFQUFPLENBQ3pERixHQUNBRCxFQUFxQixLQUFLQyxFQUFLLFlBQVksQ0FBQyxDQUVwRCxDQUFDLEVBRURMLEVBQUssUUFBUSxTQUFVUSxFQUFZRixFQUFPQyxFQUFPLENBRTdDLElBQUlFLEVBQXNCRCxFQUFXLFlBQVksRUFHN0NFLEVBQWEsQ0FBQyxFQUNsQk4sRUFBcUIsUUFBUSxTQUFVQyxFQUFNLENBQ3pDSyxFQUFXLEtBQUtELEVBQW9CLFNBQVNKLENBQUksR0FBSyxDQUFDSixFQUFhLFNBQVNPLENBQVUsQ0FBQyxDQUM1RixDQUFDLEVBSUdFLEVBQVcsU0FBUyxFQUFJLEdBQUssQ0FBQ0EsRUFBVyxTQUFTLEVBQUssSUFFdkRSLEVBQWEsS0FBS00sQ0FBVSxFQUM1QkwsRUFBZ0IsS0FBS0csQ0FBSyxFQUlsQyxDQUFDLENBSUwsTUFDU0wsRUFBYSxPQUdsQkMsRUFBZUYsRUFBSyxRQUFRLFNBQVVRLEVBQVlGLEVBQU9DLEVBQU8sQ0FFeEROLEVBQWEsUUFBUU8sQ0FBVSxHQUFLLEtBRXBDTixFQUFhLEtBQUtNLENBQVUsRUFDNUJMLEVBQWdCLEtBQUtHLENBQUssRUFJbEMsQ0FBQyxHQUtESixFQUFlRixFQUVmQSxFQUFLLFFBQVEsU0FBVUwsRUFBUVcsRUFBT0MsRUFBTyxDQUV6Q0osRUFBZ0IsS0FBS0csQ0FBSyxDQUU5QixDQUFDLEdBTUwsTUFBTyxDQUFFLGFBQWdCSixFQUFjLGdCQUFtQkMsQ0FBZ0IsQ0FJOUUiLAogICJuYW1lcyI6IFsiZWxlbWVudCIsICJyZXN1bHQiLCAic3RyaW5nIiwgImV2ZW50IiwgIndvcmtlclJlc3VsdCIsICJmaWx0ZXJEYXRhIiwgImZpbHRlcmluZ1N0cmluZyIsICJkYXRhIiwgImV4Y2x1ZGVkRGF0YSIsICJmaWx0ZXJlZERhdGEiLCAiZmlsdGVyZWRJbmRleGVzIiwgImZpbHRlcmluZ1N0cmluZ1dvcmRzIiwgIndvcmQiLCAiaW5kZXgiLCAiYXJyYXkiLCAiZGF0YVN0cmluZyIsICJsb3dlcmNhc2VEYXRhU3RyaW5nIiwgIndvcmRzRm91bmQiXQp9Cg==\\n\");\n}\n", "import { IS, IS_NOT, MAKE_ID, NO, UIObject, YES } from \"./UIObject\"\n// @ts-ignore\nimport UIStringFilterWebWorker from \"./UIStringFilterWebWorker.worker.js\"\n\n\nexport class UIStringFilter extends UIObject {\n    \n    \n    \n    \n    \n    static _sharedWebWorkerHolder = { webWorker: new UIStringFilterWebWorker() }\n    \n    static _instanceNumber = -1\n    \n    \n    _instanceNumber: number\n    \n    _isThreadClosed = NO\n    \n    private readonly _webWorkerHolder = UIStringFilter._sharedWebWorkerHolder\n    \n    \n    \n    constructor(useSeparateWebWorkerHolder = NO) {\n        \n        super()\n        \n        if (useSeparateWebWorkerHolder) {\n    \n            this._webWorkerHolder = {\n                webWorker: new UIStringFilterWebWorker()\n            }\n    \n        }\n        \n        UIStringFilter._instanceNumber = UIStringFilter._instanceNumber + 1\n        this._instanceNumber = UIStringFilter._instanceNumber\n        \n        if (IS_NOT(this._webWorkerHolder.webWorker.onmessage)) {\n            \n            this._webWorkerHolder.webWorker.onmessage = message => {\n    \n                this.isWorkerBusy = NO\n                this.postNextMessageIfNeeded()\n    \n                const key = \"\" + message.data.identifier + message.data.instanceIdentifier\n    \n                const completionFunction = this.completionFunctions[key]\n    \n                if (IS(completionFunction)) {\n        \n                    //console.log(\"Filtering took \" + (Date.now() - startTime) + \" ms\");\n        \n                    completionFunction(message.data.filteredData, message.data.filteredIndexes, message.data.identifier)\n        \n                }\n    \n                delete this.completionFunctions[key]\n    \n                var asd = 1\n                \n            }\n            \n        }\n    \n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    get instanceIdentifier() {\n        \n        return this._instanceNumber\n        \n    }\n    \n    \n    get completionFunctions() {\n    \n        const key = \"UICore_completionFunctions\"\n        var result: {\n        \n            [x: string]: (filteredData: string[], filteredIndexes: number[], identifier: any) => void;\n        \n        } = this._webWorkerHolder[key]\n        \n        if (IS_NOT(result)) {\n    \n            result = {}\n            this._webWorkerHolder[key] = result\n    \n        }\n    \n        return result\n        \n    }\n    \n    get messagesToPost() {\n    \n        const key = \"UICore_messagesToPost\"\n        var result: any[] = this._webWorkerHolder[key]\n    \n        if (IS_NOT(result)) {\n        \n            result = []\n            this._webWorkerHolder[key] = result\n        \n        }\n    \n        return result\n        \n    }\n    \n    \n    set isWorkerBusy(isWorkerBusy: boolean) {\n    \n        this._webWorkerHolder[\"UICore_isWorking\"] = isWorkerBusy\n        \n    }\n    \n    get isWorkerBusy() {\n    \n        return IS(this._webWorkerHolder[\"UICore_isWorking\"])\n        \n    }\n    \n    \n    \n    postNextMessageIfNeeded() {\n        \n        if (this.messagesToPost.length && IS_NOT(this.isWorkerBusy)) {\n    \n            this._webWorkerHolder.webWorker.postMessage(this.messagesToPost.firstElement)\n            this.messagesToPost.removeElementAtIndex(0)\n    \n            this.isWorkerBusy = YES\n    \n        }\n        \n    }\n    \n    \n    \n    \n    \n    filterData(\n        filteringString: string,\n        data: string[],\n        excludedData: string[],\n        identifier: any,\n        completion: (filteredData: string[], filteredIndexes: number[], identifier: any) => void\n    ) {\n        \n        \n        if (this._isThreadClosed) {\n            \n            return\n            \n        }\n        \n        //var startTime = Date.now();\n        \n        const instanceIdentifier = this.instanceIdentifier\n        \n        const key = \"\" + identifier + instanceIdentifier\n        \n        this.completionFunctions[key] = completion\n        \n        this.messagesToPost.push({\n    \n            \"filteringString\": filteringString,\n            \"data\": data,\n            \"excludedData\": excludedData,\n            \"identifier\": identifier,\n            \"instanceIdentifier\": instanceIdentifier\n    \n        })\n    \n        this.postNextMessageIfNeeded()\n        \n        \n    }\n    \n    \n    filteredData(\n        filteringString: string,\n        data: string[],\n        excludedData: string[] = [],\n        identifier: any = MAKE_ID()\n    ) {\n        \n        \n        const result: Promise<{\n            \n            filteredData: string[],\n            filteredIndexes: number[],\n            identifier: any\n            \n        }> = new Promise((resolve, reject) => {\n            \n            this.filterData(filteringString, data, excludedData, identifier,\n                (filteredData, filteredIndexes, filteredIdentifier) => {\n                    \n                    if (filteredIdentifier == identifier) {\n                        \n                        resolve({\n                            \n                            filteredData: filteredData,\n                            filteredIndexes: filteredIndexes,\n                            identifier: filteredIdentifier\n                            \n                        })\n                        \n                    }\n                    \n                    \n                }\n            )\n            \n            \n        })\n        \n        return result\n        \n        \n    }\n    \n    \n    \n    \n    \n    closeThread() {\n        \n        this._isThreadClosed = YES\n        \n        if (this._webWorkerHolder != UIStringFilter._sharedWebWorkerHolder) {\n    \n            this._webWorkerHolder.webWorker.terminate()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil, NO, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UIScrollView extends UIView {\n    \n    \n    _contentOffset: UIPoint = new UIPoint(0, 0)\n    _contentScale: number = 1\n    \n    containerView: UIView\n    \n    _pointerDown: boolean\n    \n    _scrollEnabled: boolean = YES\n    \n    _previousClientPoint: UIPoint\n    \n    _intrinsicContentFrame: UIRectangle\n    \n    constructor(elementID: string, viewHTMLElement?: HTMLElement) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this.containerView = new UIView(elementID + \"ContainerView\")\n        super.addSubview(this.containerView)\n        \n        \n        this.style.overflow = \"hidden\"\n        \n        this.pausesPointerEvents = NO //YES;\n        \n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerDown, function () {\n            \n            this._pointerDown = YES\n            \n        }.bind(this))\n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerUp, function () {\n            \n            this._pointerDown = NO\n            \n            this._previousClientPoint = null\n            \n            scrollStopped()\n            \n        }.bind(this))\n        \n        \n        function scrollStopped() {\n            \n            // Handle paging if needed\n            \n        }\n        \n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerMove, function (sender: UIScrollView, event: Event) {\n            \n            if (!(this._pointerDown && this._scrollEnabled && this._enabled)) {\n                \n                return\n                \n            }\n    \n            const currentClientPoint = new UIPoint(nil, nil)\n    \n            if ((window as any).MouseEvent && event instanceof MouseEvent) {\n                \n                currentClientPoint.x = (event as MouseEvent).clientX\n                currentClientPoint.y = (event as MouseEvent).clientY\n                \n            }\n            \n            if ((window as any).TouchEvent && event instanceof TouchEvent) {\n    \n                const touchEvent: TouchEvent = event\n    \n                if (touchEvent.touches.length != 1) {\n                    \n                    this._pointerDown = NO\n                    this._previousClientPoint = null\n                    \n                    scrollStopped()\n                    \n                    return\n                    \n                }\n                \n                currentClientPoint.x = touchEvent.touches[0].clientX\n                currentClientPoint.y = touchEvent.touches[0].clientY\n                \n            }\n            \n            if (!this._previousClientPoint) {\n                \n                this._previousClientPoint = currentClientPoint\n                \n                return\n                \n            }\n    \n            const changePoint = currentClientPoint.copy().subtract(this._previousClientPoint)\n    \n    \n            if (this.containerView.bounds.width <= this.bounds.width) {\n                changePoint.x = 0\n            }\n            if (0 < this.contentOffset.x + changePoint.x) {\n                changePoint.x = -this.contentOffset.x\n            }\n            if (this.contentOffset.x + changePoint.x < -this.bounds.width) {\n                changePoint.x = -this.bounds.width - this.contentOffset.x\n            }\n            \n            if (this.containerView.bounds.height <= this.bounds.height) {\n                changePoint.y = 0\n            }\n            if (0 < this.contentOffset.y + changePoint.y) {\n                changePoint.y = -this.contentOffset.y\n            }\n            if (this.contentOffset.y + changePoint.y < -this.bounds.height) {\n                changePoint.y = -this.bounds.height - this.contentOffset.y\n            }\n            \n            this.contentOffset = this.contentOffset.add(changePoint)\n            \n            this._previousClientPoint = currentClientPoint\n            \n        }.bind(this))\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    invalidateIntrinsicContentFrame() {\n        \n        this._intrinsicContentFrame = nil\n        \n    }\n    \n    \n    \n    \n    \n    get contentOffset() {\n        \n        return this._contentOffset\n        \n    }\n    \n    set contentOffset(offset: UIPoint) {\n        \n        this._contentOffset = offset\n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        // var intrinsicContentFrame = this._intrinsicContentFrame;\n        // if (!IS(intrinsicContentFrame)) {\n        //     intrinsicContentFrame = this.containerView.intrinsicContentSizeWithConstraints();   \n        // }\n        // intrinsicContentFrame.offsetByPoint(this.contentOffset);\n        // intrinsicContentFrame.height = this.containerView.viewHTMLElement.scrollHeight;\n        // intrinsicContentFrame.width = this.containerView.viewHTMLElement.scrollWidth;\n        // this.containerView.frame = intrinsicContentFrame;\n        \n        this.containerView.frame = this.containerView.bounds.offsetByPoint(this.contentOffset)\n        \n        \n        \n        \n    }\n    \n    \n    \n    // get _subviews() {\n    //     return super.subviews;\n    // }\n    \n    // set _subviews(subviews: UIView[]) {\n    //     super.subviews = subviews;\n    // }\n    \n    // get subviews() {\n    //     return this.containerView.subviews;\n    // }\n    \n    // set subviews(subviews: UIView[]) {\n    \n    //     this.containerView.subviews = subviews;\n    \n    //     this.invalidateIntrinsicContentFrame();\n    \n    \n    // }\n    \n    \n    hasSubview(view: UIView) {\n        return this.containerView.hasSubview(view)\n    }\n    \n    addSubview(view: UIView) {\n        \n        this.containerView.addSubview(view)\n        \n        this.invalidateIntrinsicContentFrame()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton } from \"./UIButton\"\nimport { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIScrollView } from \"./UIScrollView\"\nimport { UITimer } from \"./UITimer\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport class UISlideScrollerView extends UIView {\n    \n    \n    \n    _previousLayoutBounds: UIRectangle\n    _targetIndex: number = 0\n    pageIndicatorsView: UIView\n    _isAnimating: boolean = NO\n    _isAnimationOngoing: boolean = NO\n    _animationTimer: UITimer = nil\n    _scrollView: UIScrollView\n    _slideViews: UIView[] = []\n    \n    wrapAround: boolean = YES\n    \n    animationDuration: number = 0.35\n    animationDelay: number = 2\n    \n    _currentPageIndex: number = 0\n    \n    constructor(elementID: string, viewHTMLElement?: HTMLElement) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this._scrollView = new UIScrollView(elementID + \"ScrollView\")\n        \n        this.addSubview(this._scrollView)\n        \n        \n        this._scrollView._scrollEnabled = NO\n        \n        this._scrollView.addTargetForControlEvent(\n            UIView.controlEvent.PointerMove,\n            function (sender: UIView, event: Event) {\n                \n                if (event instanceof MouseEvent) {\n                    this._animationTimer.invalidate()\n                }\n                \n            }.bind(this)\n        )\n        \n        this._scrollView.addTargetForControlEvent(UIView.controlEvent.PointerLeave, function () {\n            \n            if (this._isAnimating && event instanceof MouseEvent) {\n                this.startAnimating()\n            }\n            \n        }.bind(this))\n        \n        // Touch events\n        this._scrollView.addTargetForControlEvent(UIView.controlEvent.PointerDown, function (sender, event) {\n            \n            if (event instanceof TouchEvent) {\n                this._animationTimer.invalidate()\n            }\n            \n        }.bind(this))\n        \n        this._scrollView.addTargetForControlEvents([\n            UIView.controlEvent.PointerUp, UIView.controlEvent.PointerCancel\n        ], function (sender, event) {\n            \n            if (event instanceof TouchEvent && this._isAnimating) {\n                \n                this.startAnimating()\n                \n            }\n            \n        }.bind(this))\n        \n        \n        // Page indicator\n        \n        this.pageIndicatorsView = new UIView(elementID + \"PageIndicatorsView\")\n        this.addSubview(this.pageIndicatorsView)\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    buttonForPageIndicatorWithIndex(index: number): UIButton {\n    \n        const result = new UIButton(this.viewHTMLElement.id + \"PageIndicatorButton\" + index)\n    \n        result.addTargetForControlEvents([\n            UIView.controlEvent.PointerUpInside, UIView.controlEvent.EnterUp\n        ], function (sender, event) {\n            \n            this.scrollToPageWithIndex(index, YES)\n            \n            if (this._isAnimating) {\n                \n                this.startAnimating()\n                \n            }\n            \n            \n            \n        }.bind(this))\n        \n        result.addTargetForControlEvent(UIView.controlEvent.PointerMove, function () {\n            \n            this._animationTimer.invalidate()\n            \n        }.bind(this))\n        \n        \n        result.updateContentForNormalState = function () {\n            \n            result.backgroundColor = UIColor.blueColor\n            result.titleLabel.textColor = UIColor.whiteColor\n            \n        }\n        \n        \n        result.frame = new UIRectangle(nil, nil, 20, 50)\n        \n        // result.style.height = \"20px\";\n        // result.style.width = \"50px\";\n        result.style.display = \"table-cell\"\n        result.style.position = \"relative\"\n        \n        \n        // var resultContent = new UIView(result.viewHTMLElement.id + \"Content\");\n        // resultContent.backgroundColor = UIColor.whiteColor;\n        // resultContent.centerYInContainer();\n        // resultContent.style.height = \"10px\";\n        // resultContent.style.height = \"100%\";\n        // resultContent.style.borderRadius = \"5px\";\n        \n        // result.addSubview(resultContent);\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    addSlideView(view: UIView) {\n        \n        this.slideViews.push(view)\n        \n        this.updateSlideViews()\n        \n    }\n    \n    set slideViews(views: UIView[]) {\n        \n        this._slideViews = views\n        \n        this.updateSlideViews()\n        \n    }\n    \n    get slideViews() {\n        return this._slideViews\n    }\n    \n    \n    \n    get currentPageIndex() {\n    \n        const result = this._currentPageIndex\n    \n        return result\n        \n    }\n    \n    set currentPageIndex(index: number) {\n        \n        this._currentPageIndex = index\n        \n        this._slideViews[index].willAppear()\n        \n        //this._scrollView.contentOffset.x = -this._slideViews[index].frame.min.x; //-this.bounds.width * index;\n        //this._scrollView.contentOffset.x = Math.round(this._scrollView.contentOffset.x);\n        \n        this._scrollView.contentOffset = this._scrollView.contentOffset.pointWithX(-this._slideViews[index].frame.min.x)\n        \n        \n        this.pageIndicatorsView.subviews.forEach(function (button: UIButton, index, array) {\n            \n            button.selected = NO\n            \n        });\n        \n        \n        \n        (this.pageIndicatorsView.subviews[index] as UIButton).selected = YES\n        \n        \n        \n    }\n    \n    \n    \n    scrollToPreviousPage(animated: boolean) {\n        \n        if (this.slideViews.length == 0) {\n            return\n        }\n    \n        var targetIndex = this.currentPageIndex\n    \n        if (this.wrapAround) {\n            targetIndex = (this.currentPageIndex - 1) % (this.slideViews.length)\n        }\n        else if (this.currentPageIndex - 1 < this.slideViews.length) {\n            targetIndex = this.currentPageIndex - 1\n        }\n        else {\n            return\n        }\n        \n        this.scrollToPageWithIndex(targetIndex, animated)\n        \n    }\n    \n    scrollToNextPage(animated: boolean) {\n        \n        if (this.slideViews.length == 0) {\n            return\n        }\n    \n        var targetIndex = this.currentPageIndex\n    \n        if (this.wrapAround) {\n            targetIndex = (this.currentPageIndex + 1) % (this.slideViews.length)\n        }\n        else if (this.currentPageIndex + 1 < this.slideViews.length) {\n            targetIndex = this.currentPageIndex + 1\n        }\n        else {\n            return\n        }\n        \n        this.scrollToPageWithIndex(targetIndex, animated)\n        \n    }\n    \n    \n    \n    scrollToPageWithIndex(targetIndex: number, animated: boolean = YES) {\n        \n        this._targetIndex = targetIndex\n        \n        // this._slideViews[this.currentPageIndex]._shouldLayout = NO;\n        // this._slideViews[this._targetIndex]._shouldLayout = YES;\n        \n        //this._slideViews[this._targetIndex].hidden = NO;\n        \n        this.willScrollToPageWithIndex(targetIndex)\n        \n        this._isAnimationOngoing = YES\n        \n        //var previousView = this._slideViews[this.currentPageIndex];\n        \n        if (animated) {\n            \n            \n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this._scrollView.containerView,\n                this.animationDuration,\n                0,\n                undefined,\n                function (this: UISlideScrollerView) {\n                    \n                    \n                    this.currentPageIndex = targetIndex\n                    \n                    \n                    \n                }.bind(this),\n                function (this: UISlideScrollerView) {\n                    \n                    this.didScrollToPageWithIndex(targetIndex)\n                    \n                    this._isAnimationOngoing = NO\n                    \n                    //previousView.hidden = YES;\n                    \n                }.bind(this)\n            )\n            \n        }\n        else {\n            \n            \n            this.currentPageIndex = targetIndex\n            this.didScrollToPageWithIndex(targetIndex)\n            \n            //previousView.hidden = YES;\n            \n        }\n        \n    }\n    \n    \n    \n    willScrollToPageWithIndex(index: number) {\n    \n        const targetView = this.slideViews[index]\n    \n        if (IS(targetView) && (targetView as any).willAppear && (targetView as any).willAppear instanceof Function) {\n            \n            (targetView as any).willAppear()\n            \n        }\n        \n    }\n    \n    didScrollToPageWithIndex(index: number) {\n        \n        \n        \n    }\n    \n    \n    \n    startAnimating() {\n        \n        this._isAnimating = YES\n        \n        this._animationTimer.invalidate()\n        \n        this._animationTimer = new UITimer(this.animationDelay + this.animationDuration, YES, function () {\n            \n            this.scrollToNextPage(YES)\n            \n        }.bind(this))\n        \n    }\n    \n    stopAnimating() {\n        \n        this._isAnimating = NO\n        this._animationTimer.invalidate()\n        \n    }\n    \n    \n    \n    \n    \n    updateSlideViews() {\n        \n        this._scrollView.containerView.subviews.slice().forEach(function (subview, index, array) {\n            \n            subview.removeFromSuperview()\n            \n        })\n        \n        this.pageIndicatorsView.subviews.slice().forEach(function (subview, index, array) {\n            \n            subview.removeFromSuperview()\n            \n        })\n        \n        this._slideViews.forEach(function (view, index, array) {\n            \n            this._scrollView.addSubview(view)\n            \n            this.pageIndicatorsView.addSubview(this.buttonForPageIndicatorWithIndex(index))\n            \n        }.bind(this))\n        \n    }\n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICore.broadcastEventName.WindowDidResize) {\n            \n            this.currentPageIndex = this.currentPageIndex\n            \n            \n        }\n        \n        \n    }\n    \n    \n    set frame(frame: UIRectangle) {\n        \n        super.frame = frame\n        \n        this.currentPageIndex = this.currentPageIndex\n        \n    }\n    \n    get frame() {\n        \n        return super.frame\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        if (this.bounds.isEqualTo(this._previousLayoutBounds)) {\n            return\n        }\n    \n        const bounds = this.bounds\n    \n        this._previousLayoutBounds = bounds\n        \n        this._scrollView.frame = bounds\n        \n        \n        \n        this._scrollView.containerView.frame = bounds.rectangleWithWidth(bounds.width *\n            this.slideViews.length).performFunctionWithSelf(function (this: UISlideScrollerView, self: UIRectangle) {\n            \n            self.offsetByPoint(this._scrollView.contentOffset)\n            \n            return self\n            \n        }.bind(this))\n        \n        this._slideViews.forEach(function (view, index, array) {\n            \n            view.frame = bounds.rectangleWithX((this.bounds.width + 1) * index)\n            \n        }.bind(this))\n        \n        \n        this.layoutPageIndicators()\n        \n        \n    }\n    \n    \n    layoutPageIndicators() {\n        \n        this.pageIndicatorsView.centerXInContainer()\n        this.pageIndicatorsView.style.bottom = \"20px\"\n        this.pageIndicatorsView.style.height = \"20px\"\n        this.pageIndicatorsView.style.display = \"table-row\"\n        \n    }\n    \n    \n    \n    \n    removeFromSuperview() {\n        \n        \n        super.removeFromSuperview()\n        \n        this.stopAnimating()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIBaseButton } from \"./UIBaseButton\"\nimport { UIButtonColorSpecifier } from \"./UIButton\"\nimport { UICore } from \"./UICore\"\nimport { nil, NO } from \"./UIObject\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIViewBroadcastEvent } from \"./UIView\"\n\n\n\n\n\nexport class UILink extends UIBaseButton {\n    \n    private _colors: UIButtonColorSpecifier\n    \n    \n    constructor(elementID: string, initViewData = nil) {\n        \n        super(elementID, \"a\", initViewData)\n        \n        this.stopsPointerEventPropagation = NO\n        this.pausesPointerEvents = NO\n        \n    }\n    \n    \n    initView(elementID, viewHTMLElement, initViewData: { titleType: string }) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        this.class.superclass = UIBaseButton\n        \n        // Instance variables\n        \n        \n        //this.style.position = \"relative\"\n        \n        \n        viewHTMLElement.onclick = this.blur.bind(this)\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get colors(): UIButtonColorSpecifier {\n        return this._colors\n    }\n    \n    set colors(value: UIButtonColorSpecifier) {\n        this._colors = value\n    }\n    \n    \n    \n    \n    \n    get viewHTMLElement() {\n        \n        // @ts-ignore\n        return super.viewHTMLElement as HTMLLinkElement\n        \n    }\n    \n    set text(text: string) {\n        \n        this.viewHTMLElement.textContent = text\n        \n    }\n    \n    get text() {\n        \n        return this.viewHTMLElement.textContent\n        \n    }\n    \n    \n    set target(target: string) {\n        \n        this.viewHTMLElement.setAttribute(\"href\", target)\n        \n    }\n    \n    get target() {\n    \n        const result = this.viewHTMLElement.getAttribute(\"href\")\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    set targetRouteForCurrentState(targetRouteForCurrentState: () => (UIRoute | string)) {\n        \n        this._targetRouteForCurrentState = targetRouteForCurrentState\n        \n        this.updateTarget()\n        \n    }\n    \n    get targetRouteForCurrentState() {\n        \n        return this._targetRouteForCurrentState\n        \n    }\n    \n    \n    _targetRouteForCurrentState() {\n    \n        const result = UIRoute.currentRoute.routeByRemovingComponentsOtherThanOnesNamed([\"settings\"]) as (UIRoute | string)\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICore.broadcastEventName.RouteDidChange) {\n            \n            this.updateTarget()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    wasAddedToViewTree() {\n        \n        super.wasAddedToViewTree()\n        \n        this.updateTarget()\n        \n        \n    }\n    \n    \n    \n    \n    \n    updateTarget() {\n        \n        const route = this.targetRouteForCurrentState()\n        \n        if (route instanceof UIRoute) {\n            \n            this.target = route.linkRepresentation\n            \n            return\n            \n        }\n        \n        this.target = route\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton, UIButtonColorSpecifier } from \"./UIButton\"\nimport { UILink } from \"./UILink\"\n\n\n\n\nexport class UILinkButton extends UILink {\n    \n    \n    button: UIButton\n    \n    //link = new UILink(this.elementID + \"Link\");\n    \n    \n    \n    \n    \n    constructor(elementID: string, elementType?: string, titleType?: string) {\n        \n        super(elementID, { \"elementType\": elementType, \"titleType\": titleType })\n        \n        this.button.addTargetForControlEvents([\n            UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n        ], function (this: UILinkButton, sender: UIButton, event: Event) {\n    \n            window.location = this.target as any\n            \n        }.bind(this))\n        \n        // this.link.hidden = YES;\n        \n        // this.addSubview(this.link);\n        \n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID, viewHTMLElement, initViewData: { titleType: string, elementType: string }) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        this.class.superclass = UILink\n        \n        // Instance variables\n        \n        this.button = new UIButton(this.elementID + \"Button\", initViewData.elementType, initViewData.titleType)\n        \n        this.addSubview(this.button)\n        \n        this.style.position = \"absolute\"\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get titleLabel() {\n        \n        return this.button.titleLabel\n        \n    }\n    \n    get imageView() {\n        \n        return this.button.imageView\n        \n    }\n    \n    \n    set colors(colors: UIButtonColorSpecifier) {\n        \n        this.button.colors = colors\n        \n    }\n    \n    \n    get colors() {\n        \n        return this.button.colors\n        \n    }\n    \n    \n    \n    \n    \n    get viewHTMLElement() {\n        \n        // @ts-ignore\n        return super.viewHTMLElement as HTMLLinkElement\n        \n    }\n    \n    \n    set target(target: string) {\n        \n        this.viewHTMLElement.setAttribute(\"href\", target)\n        \n    }\n    \n    get target() {\n    \n        const result = this.viewHTMLElement.getAttribute(\"href\")\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n        this.button.frame = bounds\n        \n        this.button.layoutSubviews()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIObject } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\n\n\nexport class UILayoutGrid extends UIObject {\n    \n    \n    \n    _frame: UIRectangle\n    \n    _subframes: UILayoutGrid[] = []\n    \n    \n    constructor(frame: UIRectangle) {\n        \n        super()\n        \n        this._frame = frame\n        \n    }\n    \n    \n    \n    \n    \n    splitXInto(numberOfFrames: number) {\n        \n        \n        \n        if (this._subframes.length == 0) {\n            \n            \n            \n            for (var i = 0; i < numberOfFrames; i++) {\n    \n                const asd = 1\n    \n    \n    \n            }\n            \n        }\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import inlineWorker from '__inline-worker'\nexport default function Worker() {\n  return inlineWorker(\"\\\"contains\\\"in Array.prototype||(Array.prototype.contains=function(a){var r=this.indexOf(a)!=-1;return r});\\\"contains\\\"in String.prototype||(String.prototype.contains=function(a){var r=this.indexOf(a)!=-1;return r});onmessage=function(a){var r=y(a.data.filteringString,a.data.data,a.data.excludedData,a.data.dataKeyPath);r.identifier=a.data.identifier,r.instanceIdentifier=a.data.instanceIdentifier,postMessage(r)};function y(a,r,u,d){function l(t,n){var o=t.split(\\\".\\\"),i=n;return o.forEach(function(c,f,p){i=i[c]}),i}var e=[],s=[];if(a){var h=[];a.split(\\\" \\\").forEach(function(t,n,o){t&&h.push(t.toLowerCase())}),r.forEach(function(t,n,o){var i=l(d,t),c=i.toLowerCase(),f=[];h.forEach(function(p){f.push(c.contains(p)&&!u.contains(i))}),f.contains(!0)&&!f.contains(!1)&&(e.push(t),s.push(n))})}else u.length?e=r.forEach(function(t,n,o){u.indexOf(t)==-1&&(e.push(t),s.push(n))}):(e=r,r.forEach(function(t,n,o){s.push(n)}));return{filteredData:e,filteredIndexes:s}}\\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdWljb3JlLXRzL3NjcmlwdHMvVUlLZXlWYWx1ZVN0cmluZ0ZpbHRlcldlYldvcmtlci53b3JrZXIudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8vIEB0cy1jaGVja1xuXG5pZiAoXCJjb250YWluc1wiIGluIEFycmF5LnByb3RvdHlwZSA9PSBmYWxzZSkge1xuICAgIFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBBcnJheS5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICBcbiAgICAgICAgdmFyIHJlc3VsdCA9ICh0aGlzLmluZGV4T2YoZWxlbWVudCkgIT0gLTEpXG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgXG4gICAgfVxuICAgIFxufVxuXG5pZiAoXCJjb250YWluc1wiIGluIFN0cmluZy5wcm90b3R5cGUgPT0gZmFsc2UpIHtcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgU3RyaW5nLnByb3RvdHlwZS5jb250YWlucyA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgICAgICAgXG4gICAgICAgIHZhciByZXN1bHQgPSAodGhpcy5pbmRleE9mKHN0cmluZykgIT0gLTEpXG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgXG4gICAgfVxuICAgIFxufVxuXG5cblxuXG5cbm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIFxuICAgIC8vY29uc29sZS5sb2coJ01lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBtYWluIHNjcmlwdCcpO1xuICAgIHZhciB3b3JrZXJSZXN1bHQgPSBmaWx0ZXJLZXlWYWx1ZVBhdGhEYXRhKFxuICAgICAgICBldmVudC5kYXRhLmZpbHRlcmluZ1N0cmluZyxcbiAgICAgICAgZXZlbnQuZGF0YS5kYXRhLFxuICAgICAgICBldmVudC5kYXRhLmV4Y2x1ZGVkRGF0YSxcbiAgICAgICAgZXZlbnQuZGF0YS5kYXRhS2V5UGF0aFxuICAgIClcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0LmlkZW50aWZpZXIgPSBldmVudC5kYXRhLmlkZW50aWZpZXJcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0Lmluc3RhbmNlSWRlbnRpZmllciA9IGV2ZW50LmRhdGEuaW5zdGFuY2VJZGVudGlmaWVyXG4gICAgXG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHBvc3RNZXNzYWdlKHdvcmtlclJlc3VsdClcbiAgICBcbn1cblxuXG5cblxuXG5mdW5jdGlvbiBmaWx0ZXJLZXlWYWx1ZVBhdGhEYXRhKGZpbHRlcmluZ1N0cmluZywgZGF0YSwgZXhjbHVkZWREYXRhLCBkYXRhS2V5UGF0aCkge1xuICAgIFxuICAgIGZ1bmN0aW9uIHZhbHVlRm9yS2V5UGF0aChrZXlQYXRoLCBvYmplY3QpIHtcbiAgICAgICAgXG4gICAgICAgIHZhciBrZXlzID0ga2V5UGF0aC5zcGxpdChcIi5cIilcbiAgICAgICAgdmFyIGN1cnJlbnRPYmplY3QgPSBvYmplY3RcbiAgICAgICAgXG4gICAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5LCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgIGN1cnJlbnRPYmplY3QgPSBjdXJyZW50T2JqZWN0W2tleV1cbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBjdXJyZW50T2JqZWN0XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICB2YXIgZmlsdGVyZWREYXRhID0gW11cbiAgICB2YXIgZmlsdGVyZWRJbmRleGVzID0gW11cbiAgICBcbiAgICBpZiAoZmlsdGVyaW5nU3RyaW5nKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgZmlsdGVyaW5nU3RyaW5nV29yZHMgPSBbXVxuICAgICAgICBmaWx0ZXJpbmdTdHJpbmcuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24gKHdvcmQsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgaWYgKHdvcmQpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJpbmdTdHJpbmdXb3Jkcy5wdXNoKHdvcmQudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YU9iamVjdCwgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBkYXRhU3RyaW5nID0gdmFsdWVGb3JLZXlQYXRoKGRhdGFLZXlQYXRoLCBkYXRhT2JqZWN0KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgbG93ZXJjYXNlRGF0YVN0cmluZyA9IGRhdGFTdHJpbmcudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb29rIHRocm91Z2ggYWxsIHRoZSB3b3JkcyBpbiB0aGUgaW5wdXRcbiAgICAgICAgICAgIHZhciB3b3Jkc0ZvdW5kID0gW11cbiAgICAgICAgICAgIGZpbHRlcmluZ1N0cmluZ1dvcmRzLmZvckVhY2goZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgICAgICAgICAgICB3b3Jkc0ZvdW5kLnB1c2gobG93ZXJjYXNlRGF0YVN0cmluZy5jb250YWlucyh3b3JkKSAmJiAhZXhjbHVkZWREYXRhLmNvbnRhaW5zKGRhdGFTdHJpbmcpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gT25seSBzaG93IHRoZSBkYXRhU3RyaW5nIGlmIGl0IG1hdGNoZXMgYWxsIG9mIHRoZW1cbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGlmICh3b3Jkc0ZvdW5kLmNvbnRhaW5zKHRydWUpICYmICF3b3Jkc0ZvdW5kLmNvbnRhaW5zKGZhbHNlKSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFPYmplY3QpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICB9XG4gICAgZWxzZSBpZiAoZXhjbHVkZWREYXRhLmxlbmd0aCkge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGZpbHRlcmVkRGF0YSA9IGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YU9iamVjdCwgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChleGNsdWRlZERhdGEuaW5kZXhPZihkYXRhT2JqZWN0KSA9PSAtMSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZpbHRlcmVkRGF0YS5wdXNoKGRhdGFPYmplY3QpXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBcbiAgICAgICAgZmlsdGVyZWREYXRhID0gZGF0YVxuICAgICAgICBcbiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChvYmplY3QsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaChpbmRleClcbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgXG4gICAgXG4gICAgcmV0dXJuIHsgXCJmaWx0ZXJlZERhdGFcIjogZmlsdGVyZWREYXRhLCBcImZpbHRlcmVkSW5kZXhlc1wiOiBmaWx0ZXJlZEluZGV4ZXMgfVxuICAgIFxuICAgIFxuICAgIFxufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIl0sCiAgIm1hcHBpbmdzIjogIkFBRUksYUFBYyxNQUFNLFlBR3BCLE1BQU0sVUFBVSxTQUFXLFNBQVVBLEVBQVMsQ0FFMUMsSUFBSUMsRUFBVSxLQUFLLFFBQVFELENBQU8sR0FBSyxHQUN2QyxPQUFPQyxDQUVYLEdBSUEsYUFBYyxPQUFPLFlBR3JCLE9BQU8sVUFBVSxTQUFXLFNBQVVDLEVBQVEsQ0FFMUMsSUFBSUQsRUFBVSxLQUFLLFFBQVFDLENBQU0sR0FBSyxHQUN0QyxPQUFPRCxDQUVYLEdBUUosVUFBWSxTQUFVRSxFQUFPLENBR3pCLElBQUlDLEVBQWVDLEVBQ2ZGLEVBQU0sS0FBSyxnQkFDWEEsRUFBTSxLQUFLLEtBQ1hBLEVBQU0sS0FBSyxhQUNYQSxFQUFNLEtBQUssV0FDZixFQUdBQyxFQUFhLFdBQWFELEVBQU0sS0FBSyxXQUVyQ0MsRUFBYSxtQkFBcUJELEVBQU0sS0FBSyxtQkFJN0MsWUFBWUMsQ0FBWSxDQUU1QixFQU1BLFNBQVNDLEVBQXVCQyxFQUFpQkMsRUFBTUMsRUFBY0MsRUFBYSxDQUU5RSxTQUFTQyxFQUFnQkMsRUFBU0MsRUFBUSxDQUV0QyxJQUFJQyxFQUFPRixFQUFRLE1BQU0sR0FBRyxFQUN4QkcsRUFBZ0JGLEVBRXBCLE9BQUFDLEVBQUssUUFBUSxTQUFVRSxFQUFLQyxFQUFPQyxFQUFPLENBQ3RDSCxFQUFnQkEsRUFBY0MsRUFDbEMsQ0FBQyxFQUVNRCxDQUVYLENBRUEsSUFBSUksRUFBZSxDQUFDLEVBQ2hCQyxFQUFrQixDQUFDLEVBRXZCLEdBQUliLEVBQWlCLENBRWpCLElBQUljLEVBQXVCLENBQUMsRUFDNUJkLEVBQWdCLE1BQU0sR0FBRyxFQUFFLFFBQVEsU0FBVWUsRUFBTUwsRUFBT0MsRUFBTyxDQUN6REksR0FDQUQsRUFBcUIsS0FBS0MsRUFBSyxZQUFZLENBQUMsQ0FFcEQsQ0FBQyxFQUVEZCxFQUFLLFFBQVEsU0FBVWUsRUFBWU4sRUFBT0MsRUFBTyxDQUU3QyxJQUFJTSxFQUFhYixFQUFnQkQsRUFBYWEsQ0FBVSxFQUVwREUsRUFBc0JELEVBQVcsWUFBWSxFQUc3Q0UsRUFBYSxDQUFDLEVBQ2xCTCxFQUFxQixRQUFRLFNBQVVDLEVBQU0sQ0FDekNJLEVBQVcsS0FBS0QsRUFBb0IsU0FBU0gsQ0FBSSxHQUFLLENBQUNiLEVBQWEsU0FBU2UsQ0FBVSxDQUFDLENBQzVGLENBQUMsRUFJR0UsRUFBVyxTQUFTLEVBQUksR0FBSyxDQUFDQSxFQUFXLFNBQVMsRUFBSyxJQUV2RFAsRUFBYSxLQUFLSSxDQUFVLEVBQzVCSCxFQUFnQixLQUFLSCxDQUFLLEVBSWxDLENBQUMsQ0FJTCxNQUNTUixFQUFhLE9BR2xCVSxFQUFlWCxFQUFLLFFBQVEsU0FBVWUsRUFBWU4sRUFBT0MsRUFBTyxDQUV4RFQsRUFBYSxRQUFRYyxDQUFVLEdBQUssS0FFcENKLEVBQWEsS0FBS0ksQ0FBVSxFQUM1QkgsRUFBZ0IsS0FBS0gsQ0FBSyxFQUlsQyxDQUFDLEdBS0RFLEVBQWVYLEVBRWZBLEVBQUssUUFBUSxTQUFVSyxFQUFRSSxFQUFPQyxFQUFPLENBRXpDRSxFQUFnQixLQUFLSCxDQUFLLENBRTlCLENBQUMsR0FNTCxNQUFPLENBQUUsYUFBZ0JFLEVBQWMsZ0JBQW1CQyxDQUFnQixDQUk5RSIsCiAgIm5hbWVzIjogWyJlbGVtZW50IiwgInJlc3VsdCIsICJzdHJpbmciLCAiZXZlbnQiLCAid29ya2VyUmVzdWx0IiwgImZpbHRlcktleVZhbHVlUGF0aERhdGEiLCAiZmlsdGVyaW5nU3RyaW5nIiwgImRhdGEiLCAiZXhjbHVkZWREYXRhIiwgImRhdGFLZXlQYXRoIiwgInZhbHVlRm9yS2V5UGF0aCIsICJrZXlQYXRoIiwgIm9iamVjdCIsICJrZXlzIiwgImN1cnJlbnRPYmplY3QiLCAia2V5IiwgImluZGV4IiwgImFycmF5IiwgImZpbHRlcmVkRGF0YSIsICJmaWx0ZXJlZEluZGV4ZXMiLCAiZmlsdGVyaW5nU3RyaW5nV29yZHMiLCAid29yZCIsICJkYXRhT2JqZWN0IiwgImRhdGFTdHJpbmciLCAibG93ZXJjYXNlRGF0YVN0cmluZyIsICJ3b3Jkc0ZvdW5kIl0KfQo=\\n\");\n}\n", "import { IS, IS_NOT, NO, UIObject, YES } from \"./UIObject\"\n// @ts-ignore\nimport UIKeyValueStringFilterWebWorker from \"./UIKeyValueStringFilterWebWorker.worker.js\"\n\n\n\n\n\nexport class UIKeyValueStringFilter extends UIObject {\n    \n    \n    static _sharedWebWorkerHolder = { webWorker: new UIKeyValueStringFilterWebWorker() }\n    \n    static _instanceNumber = -1\n    \n    \n    _instanceNumber: number\n    \n    _isThreadClosed = NO\n    \n    private _webWorkerHolder = UIKeyValueStringFilter._sharedWebWorkerHolder\n    \n    constructor(useSeparateWebWorkerHolder = NO) {\n        \n        \n        super()\n        \n        if (useSeparateWebWorkerHolder) {\n    \n            this._webWorkerHolder = { webWorker: new UIKeyValueStringFilterWebWorker() }\n            \n        }\n        \n        UIKeyValueStringFilter._instanceNumber = UIKeyValueStringFilter._instanceNumber + 1\n        this._instanceNumber = UIKeyValueStringFilter._instanceNumber\n        \n        if (IS_NOT(this._webWorkerHolder.webWorker.onmessage)) {\n            \n            this._webWorkerHolder.webWorker.onmessage = message => {\n                \n                this.isWorkerBusy = NO\n                this.postNextMessageIfNeeded()\n                \n                const key = \"\" + message.data.identifier + message.data.instanceIdentifier\n                \n                const completionFunction = this.completionFunctions[key]\n                \n                if (IS(completionFunction)) {\n                    \n                    //console.log(\"Filtering took \" + (Date.now() - startTime) + \" ms\");\n                    \n                    completionFunction(message.data.filteredData, message.data.filteredIndexes, message.data.identifier)\n                    \n                }\n                \n                delete this.completionFunctions[key]\n                \n                var asd = 1\n                \n            }\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get instanceIdentifier() {\n        \n        return this._instanceNumber\n        \n    }\n    \n    \n    get completionFunctions() {\n        \n        const key = \"UICore_completionFunctions\"\n        var result: {\n            \n            [x: string]: (filteredData: string[], filteredIndexes: number[], identifier: any) => void;\n            \n        } = this._webWorkerHolder[key]\n        \n        if (IS_NOT(result)) {\n            \n            result = {}\n            this._webWorkerHolder[key] = result\n            \n        }\n        \n        return result\n        \n    }\n    \n    get messagesToPost() {\n        \n        const key = \"UICore_messagesToPost\"\n        var result: any[] = this._webWorkerHolder[key]\n        \n        if (IS_NOT(result)) {\n            \n            result = []\n            this._webWorkerHolder[key] = result\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    set isWorkerBusy(isWorkerBusy: boolean) {\n        \n        this._webWorkerHolder[\"UICore_isWorking\"] = isWorkerBusy\n        \n    }\n    \n    get isWorkerBusy() {\n        \n        return IS(this._webWorkerHolder[\"UICore_isWorking\"])\n        \n    }\n    \n    \n    postNextMessageIfNeeded() {\n        \n        if (this.messagesToPost.length && IS_NOT(this.isWorkerBusy)) {\n            \n            this._webWorkerHolder.webWorker.postMessage(this.messagesToPost.firstElement)\n            this.messagesToPost.removeElementAtIndex(0)\n            \n            this.isWorkerBusy = YES\n            \n        }\n        \n    }\n    \n    \n    \n    \n    filterData(\n        filteringString: string,\n        data: any[],\n        excludedData: string[],\n        dataKeyPath: string,\n        identifier: any,\n        completion: (filteredData: string[], filteredIndexes: number[], identifier: any) => void\n    ) {\n        \n        \n        if (this._isThreadClosed) {\n            \n            return\n            \n        }\n        \n        \n        \n        const instanceIdentifier = this.instanceIdentifier\n        \n        const key = \"\" + identifier + instanceIdentifier\n        \n        this.completionFunctions[key] = completion\n        \n        \n        try {\n            \n            this.messagesToPost.push({\n                \n                \"filteringString\": filteringString,\n                \"data\": data,\n                \"excludedData\": excludedData,\n                \"dataKeyPath\": dataKeyPath,\n                \"identifier\": identifier,\n                \"instanceIdentifier\": instanceIdentifier\n                \n            })\n            \n            this.postNextMessageIfNeeded()\n            \n        } catch (exception) {\n            \n            completion([], [], identifier)\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    closeThread() {\n        \n        this._isThreadClosed = YES\n        \n        if (this._webWorkerHolder != UIKeyValueStringFilter._sharedWebWorkerHolder) {\n            \n            this._webWorkerHolder.webWorker.terminate()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import inlineWorker from '__inline-worker'\nexport default function Worker() {\n  return inlineWorker(\"onmessage=function(e){var a=g(e.data.data,e.data.sortingInstructions);a.identifier=e.data.identifier,a.instanceIdentifier=e.data.instanceIdentifier,postMessage(a)};function v(e,a){for(var i=e.split(\\\".\\\"),r=a,n=0;n<i.length;n++){var u=i[n];if(u.substring(0,2)==\\\"[]\\\"){r=r[u.substring(2)];var t=i.slice(n+1).join(\\\".\\\"),o=r;r=o.map(function(d,s,f){var c=v(t,d);return c});break}r=(r||{})[u]}return r}function l(e,a,i){if(i.length==0)return 0;var r=i[0],n=1;r.direction==\\\"descending\\\"&&(n=-1);var u=e[r.keyPath],t=a[r.keyPath];if(u<t)return-1*n;if(u>t)return 1*n;if(i.length>1){var o=i.slice(1);return l(e,a,o)}return 0}function g(e,a){var i=e.map(function(t,o,d){var s={_UIKeyValueStringSorterWebWorkerSortingObjectIndex:o};return a.forEach(function(f,c,y){s[f.keyPath]=JSON.stringify(v(f.keyPath,t)||{}).toLowerCase()}),s}),r=i.sort(function(t,o){return l(t,o,a)}),n=r.map(function(t,o,d){var s=t._UIKeyValueStringSorterWebWorkerSortingObjectIndex;return s}),u={sortedData:n.map(function(t,o,d){return e[t]}),sortedIndexes:n};return u}\\n//# sourceMappingURL=data:application/json;base64,\\n\");\n}\n", "import { IS, IS_NOT, MAKE_ID, NO, UIObject, YES } from \"./UIObject\"\n// @ts-ignore\nimport UIKeyValueStringSorterWebWorker from \"./UIKeyValueStringSorterWebWorker.worker.js\"\n\n\nexport interface UIKeyValueStringSorterSortingInstruction {\n    \n    keyPath: string;\n    \n    dataType: string;\n    \n    direction: string;\n    \n    \n}\n\n\n\n\n\nexport class UIKeyValueStringSorter extends UIObject {\n    \n    \n    static _sharedWebWorkerHolder = { webWorker: new UIKeyValueStringSorterWebWorker() }\n    \n    static _instanceNumber = -1\n    \n    \n    _instanceNumber: number\n    \n    _isThreadClosed = NO\n    \n    private _webWorkerHolder = UIKeyValueStringSorter._sharedWebWorkerHolder\n    \n    \n    constructor(useSeparateWebWorkerHolder = NO) {\n        \n        \n        super()\n        \n        if (useSeparateWebWorkerHolder) {\n    \n            this._webWorkerHolder = { webWorker: new UIKeyValueStringSorterWebWorker() }\n            \n        }\n        \n        UIKeyValueStringSorter._instanceNumber = UIKeyValueStringSorter._instanceNumber + 1\n        this._instanceNumber = UIKeyValueStringSorter._instanceNumber\n        \n        if (IS_NOT(this._webWorkerHolder.webWorker.onmessage)) {\n            \n            this._webWorkerHolder.webWorker.onmessage = message => {\n    \n                this.isWorkerBusy = NO;\n                this.postNextMessageIfNeeded();\n                \n                const key = \"\" + message.data.identifier + message.data.instanceIdentifier\n        \n                const completionFunction = this.completionFunctions[key]\n        \n                if (IS(completionFunction)) {\n            \n                    //console.log(\"Filtering took \" + (Date.now() - startTime) + \" ms\");\n            \n                    completionFunction(message.data.sortedData, message.data.sortedIndexes, message.data.identifier)\n            \n                }\n                \n                delete this.completionFunctions[key];\n                \n                var asd = 1;\n                \n            }\n            \n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get instanceIdentifier() {\n        \n        return this._instanceNumber\n        \n    }\n    \n    \n    \n    \n    get completionFunctions() {\n        \n        const key = \"UICore_completionFunctions\";\n        var result: {\n        \n            [x: string]: (sortedData: any[], sortedIndexes: number[], identifier: any) => void\n            \n        } = this._webWorkerHolder[key];\n        \n        if (IS_NOT(result)) {\n            \n            result = {};\n            this._webWorkerHolder[key] = result;\n            \n        }\n        \n        return result;\n        \n    }\n    \n    get messagesToPost() {\n        \n        const key = \"UICore_messagesToPost\";\n        var result: any[] = this._webWorkerHolder[key];\n        \n        if (IS_NOT(result)) {\n            \n            result = [];\n            this._webWorkerHolder[key] = result;\n            \n        }\n        \n        return result;\n        \n    }\n    \n    \n    set isWorkerBusy(isWorkerBusy: boolean) {\n        \n        this._webWorkerHolder[\"UICore_isWorking\"] = isWorkerBusy;\n        \n    }\n    \n    get isWorkerBusy() {\n        \n        return IS(this._webWorkerHolder[\"UICore_isWorking\"]);\n        \n    }\n    \n    \n    postNextMessageIfNeeded() {\n        \n        if (this.messagesToPost.length && IS_NOT(this.isWorkerBusy)) {\n            \n            this._webWorkerHolder.webWorker.postMessage(this.messagesToPost.firstElement);\n            this.messagesToPost.removeElementAtIndex(0);\n            \n            this.isWorkerBusy = YES;\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    static dataType = {\n        \n        \"string\": \"string\"\n        \n    }\n    \n    \n    static direction = {\n        \n        \"descending\": \"descending\",\n        \"ascending\": \"ascending\"\n        \n    }\n    \n    \n    \n    \n    \n    sortData<T>(\n        data: T[],\n        sortingInstructions: UIKeyValueStringSorterSortingInstruction[],\n        identifier: any,\n        completion: (sortedData: T[], sortedIndexes: number[], identifier: any) => void\n    ) {\n        \n        \n        if (this._isThreadClosed) {\n            \n            return\n            \n        }\n    \n        \n        const instanceIdentifier = this.instanceIdentifier\n        \n        const key = \"\" + identifier + instanceIdentifier\n        \n        this.completionFunctions[key] = completion;\n        \n        \n        try {\n            \n            this.messagesToPost.push({\n                \n                \"data\": data,\n                \"sortingInstructions\": sortingInstructions,\n                \"identifier\": identifier,\n                \"instanceIdentifier\": instanceIdentifier\n                \n            });\n            \n            this.postNextMessageIfNeeded();\n            \n        } catch (exception) {\n            \n            completion([], [], identifier)\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    sortedData<T>(\n        data: T[],\n        sortingInstructions: UIKeyValueStringSorterSortingInstruction[],\n        identifier: any = MAKE_ID()\n    ) {\n    \n        const result: Promise<{\n        \n            sortedData: T[],\n            sortedIndexes: number[],\n            identifier: any\n        \n        }> = new Promise((resolve, reject) => {\n        \n            this.sortData(data, sortingInstructions, identifier, (sortedData, sortedIndexes, sortedIdentifier) => {\n    \n                if (sortedIdentifier == identifier) {\n    \n                    resolve({\n        \n                        sortedData: sortedData,\n                        sortedIndexes: sortedIndexes,\n                        identifier: sortedIdentifier\n        \n                    })\n        \n                }\n                \n                \n            \n            })\n        \n        \n        \n        })\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    closeThread() {\n        \n        this._isThreadClosed = YES\n        \n        if (this._webWorkerHolder != UIKeyValueStringSorter._sharedWebWorkerHolder) {\n            \n            this._webWorkerHolder.webWorker.terminate();\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS_FIREFOX } from \"./ClientCheckers\"\nimport { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport class UIDialogView<ViewType extends UIView = UIView> extends UIView {\n    \n    _isAUIDialogView = YES\n    \n    _view: ViewType = nil\n    \n    _appearedAnimated: boolean\n    \n    animationDuration: number = 0.25\n    \n    _zIndex: number = 100\n    \n    isVisible: boolean = NO\n    \n    dismissesOnTapOutside = YES\n    \n    constructor(elementID?: string, viewHTMLElement?: HTMLElement) {\n        \n        \n        super(elementID, viewHTMLElement)\n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.PointerTap,\n            function (this: UIDialogView, sender: UIView, event: Event) {\n                \n                this.didDetectTapOutside(sender, event)\n                \n            }.bind(this)\n        )\n        \n        this.backgroundColor = UIColor.colorWithRGBA(0, 10, 25).colorWithAlpha(0.75) //CBColor.primaryContentColor.colorWithAlpha(0.75)\n        \n        this.zIndex = this._zIndex\n        \n    }\n    \n    \n    \n    didDetectTapOutside(sender: UIView, event: Event) {\n        \n        if (event.target == this.viewHTMLElement && this.dismissesOnTapOutside) {\n            this.dismiss(this._appearedAnimated)\n        }\n        \n    }\n    \n    \n    set zIndex(zIndex: number) {\n        \n        this._zIndex = zIndex\n        this.style.zIndex = \"\" + zIndex\n        \n    }\n    \n    get zIndex() {\n        \n        return this._zIndex\n        \n    }\n    \n    \n    \n    set view(view: ViewType) {\n        \n        this._view.removeFromSuperview()\n        \n        this._view = view\n        \n        this.addSubview(view)\n        \n    }\n    \n    \n    get view() {\n        \n        return this._view\n        \n    }\n    \n    \n    \n    willAppear(animated: boolean = NO) {\n        \n        if (animated) {\n            \n            this.style.opacity = \"0\"\n            \n        }\n        \n        this.style.height = \"\"\n        \n        this._frame = null\n        \n    }\n    \n    \n    animateAppearing() {\n        \n        this.style.opacity = \"1\"\n        \n    }\n    \n    animateDisappearing() {\n        \n        this.style.opacity = \"0\"\n        \n    }\n    \n    \n    \n    showInView(containerView: UIView, animated: boolean) {\n        \n        \n        animated = (animated && !IS_FIREFOX)\n        \n        this._appearedAnimated = animated\n        \n        this.willAppear(animated)\n        \n        \n        containerView.addSubview(this)\n        \n        if (animated) {\n            \n            this.layoutSubviews()\n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this,\n                this.animationDuration,\n                0,\n                undefined,\n                function () {\n                    \n                    \n                    this.animateAppearing()\n                    \n                    \n                }.bind(this),\n                nil\n            )\n            \n            \n        }\n        else {\n            \n            this.setNeedsLayout()\n            \n        }\n        \n        this.isVisible = YES\n        \n    }\n    \n    \n    showInRootView(animated: boolean) {\n        \n        this.showInView(UICore.main.rootViewController.view, animated)\n        \n    }\n    \n    \n    dismiss(animated?: boolean) {\n        \n        if (!this.isVisible) {\n            return\n        }\n        \n        animated = (animated && !IS_FIREFOX)\n        \n        if (animated == undefined) {\n            \n            animated = this._appearedAnimated\n            \n        }\n        \n        if (animated) {\n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this,\n                this.animationDuration,\n                0,\n                undefined,\n                function () {\n                    \n                    this.animateDisappearing()\n                    \n                }.bind(this),\n                function () {\n                    \n                    if (this.isVisible == NO) {\n                        \n                        this.removeFromSuperview()\n                        \n                    }\n                    \n                }.bind(this)\n            )\n            \n        }\n        else {\n            \n            this.removeFromSuperview()\n            \n        }\n        \n        this.isVisible = NO\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICore.broadcastEventName.WindowDidResize) {\n            \n            this.setNeedsLayout()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        \n        if (!IS(this.view)) {\n            \n            return\n            \n        }\n        \n        //this.frame = this.superview.bounds;\n        \n        this.setPosition(0, 0, 0, 0, 0, \"100%\")\n        this.setPosition(0, 0, 0, 0, UIView.pageHeight, \"100%\")\n        \n        const bounds = this.bounds\n        \n        const margin = 20\n        \n        //this.view.centerInContainer();\n        \n        this.view.style.position = \"relative\"\n        \n        // this.view.style.maxHeight = \"\" + (bounds.height - margin * 2).integerValue + \"px\";\n        // this.view.style.maxWidth = \"\" + (bounds.width - margin * 2).integerValue + \"px\";\n        \n        \n        \n        \n        // var viewIntrinsicRectangle = this.view.intrinsicContentSize();\n        // this.view.frame = new UIRectangle((bounds.width - viewIntrinsicRectangle.width)*0.5,  )\n        \n        super.layoutSubviews()\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil } from \"./UIObject\"\nimport { UIView, UIViewAddControlEventTargetObject } from \"./UIView\"\n\n\nexport class UIDateTimeInput extends UIView {\n    \n    \n    \n    \n    \n    constructor(elementID: string, type: string = UIDateTimeInput.type.DateTime) {\n        \n        super(elementID, nil, \"input\")\n        \n        this.viewHTMLElement.setAttribute(\"type\", type)\n        \n        this.viewHTMLElement.onchange = (event) => {\n            this.sendControlEventForKey(UIDateTimeInput.controlEvent.ValueChange, event)\n        }\n        \n    }\n    \n    \n    \n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \"ValueChange\": \"ValueChange\"\n        \n    })\n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UIDateTimeInput.controlEvent> {\n        \n        return super.addControlEventTarget as any\n        \n    }\n    \n    \n    \n    \n    \n    static type = {\n        \n        \"Date\": \"date\",\n        \"Time\": \"time\",\n        \"DateTime\": \"datetime\"\n        \n        \n    }\n    \n    \n    static format = {\n        \n        \"European\": \"DD-MM-YYYY\",\n        \"ISOComputer\": \"YYYY-MM-DD\",\n        \"American\": \"MM/DD/YYYY\"\n        \n    }\n    \n    \n    \n    \n    \n    get date() {\n        \n        const result = new Date((this.viewHTMLElement as HTMLInputElement).value)\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { NO, YES } from \"./UIObject\"\nimport { UIView } from \"./UIView\"\n\n\nexport class UIActionIndicator extends UIView {\n    \n    \n    indicatorView: UIView\n    \n    _size: number = 50\n    \n    constructor(elementID?: string) {\n        \n        super(elementID)\n        \n        this.indicatorView = new UIView(this.elementID + \"IndicatorView\")\n        this.indicatorView.viewHTMLElement.classList.add(\"LukeHaasLoader\")\n        this.addSubview(this.indicatorView)\n        \n        this.hidden = YES\n        \n    }\n    \n    \n    \n    \n    \n    set size(size: number) {\n        \n        this._size = size\n        \n        this.setNeedsLayoutUpToRootView()\n        \n    }\n    \n    get size() {\n        \n        return this._size\n        \n    }\n    \n    \n    \n    set hidden(hidden: boolean) {\n        \n        super.hidden = hidden\n        \n        if (hidden) {\n            \n            this.indicatorView.removeFromSuperview()\n            \n        }\n        else {\n            \n            this.addSubview(this.indicatorView)\n            \n        }\n        \n    }\n    \n    start() {\n        \n        this.hidden = NO\n        \n    }\n    \n    stop() {\n        \n        this.hidden = YES\n        \n    }\n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n        //this.indicatorView.centerInContainer();\n        \n        this.indicatorView.style.height = \"\" + this._size.integerValue + \"px\"\n        this.indicatorView.style.width = \"\" + this._size.integerValue + \"px\"\n    \n        const minSize = Math.min(this.bounds.height, this.bounds.width)\n    \n        this.indicatorView.style.maxHeight = \"\" + minSize.integerValue + \"px\"\n        this.indicatorView.style.maxWidth = \"\" + minSize.integerValue + \"px\"\n    \n        const size = Math.min(this._size, minSize)\n    \n        this.indicatorView.style.left = \"\" + ((bounds.width - size) * 0.5 - 11).integerValue + \"px\"\n        this.indicatorView.style.top = \"\" + ((bounds.height - size) * 0.5 - 11).integerValue + \"px\"\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "export interface UILanguageService {\n    \n    updateCurrentLanguageKey();\n    \n    currentLanguageKey: string;\n    \n    stringForKey(\n        key: string,\n        languageName: string,\n        defaultString: string,\n        parameters: { [x: string]: string | UILocalizedTextObject; }\n    ): string | undefined;\n    \n    stringForCurrentLanguage(localizedTextObject: UILocalizedTextObject);\n    \n    \n    \n}\n\n\nexport interface UILocalizedTextObject {\n    \n    [key: string]: string;\n    \n}\n", "import { UIColor } from \"./UIColor\"\nimport { UICore } from \"./UICore\"\nimport { UIDialogView } from \"./UIDialogView\"\nimport { EXTEND, FIRST, FIRST_OR_NIL, IS, IS_NOT, LAZY_VALUE, nil, NO, UIObject, wrapInNil, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView } from \"./UIView\"\nimport { UIViewController } from \"./UIViewController\"\n\n\n\n\ninterface UIRootViewControllerLazyViewControllerObject<T extends typeof UIViewController> {\n    instance: InstanceType<T>;\n    class: T;\n    shouldShow: () => (Promise<boolean> | boolean);\n    isInitialized: boolean\n}\n\n\ninterface UIRootViewControllerLazyViewControllersObject {\n    [x: string]: UIRootViewControllerLazyViewControllerObject<typeof UIViewController>\n}\n\n\ninterface UIRootViewControllerLazyContentViewControllersObject extends UIRootViewControllerLazyViewControllersObject {\n    mainViewController: UIRootViewControllerLazyViewControllerObject<typeof UIViewController>\n}\n\n\n\n\n\nexport class UIRootViewController extends UIViewController {\n    \n    topBarView: UIView = nil\n    backgroundView: UIView = new UIView(this.view.elementID + \"BackgroundView\").configuredWithObject({\n        style: {\n            background: \"linear-gradient(\" + UIColor.whiteColor.stringValue + \", \" + UIColor.blueColor.stringValue + \")\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\"\n        }\n    })\n    bottomBarView: UIView = nil\n    \n    _contentViewController: UIViewController\n    contentViewControllers: UIRootViewControllerLazyContentViewControllersObject = {\n        mainViewController: this.lazyViewControllerObjectWithClass(UIViewController)\n    }\n    \n    _detailsDialogView: UIDialogView = new UIDialogView(this.view.elementID + \"DetailsDialogView\")\n        .configuredWithObject({\n            dismiss: EXTEND((animated: boolean) => {\n                    const route = UIRoute.currentRoute\n                    this.detailsViewControllers.allValues.forEach(\n                        value => route.routeByRemovingComponentNamed(value.class.routeComponentName)\n                    )\n                    route.apply()\n                }\n            )\n        })\n    _detailsViewController: UIViewController\n    detailsViewControllers: UIRootViewControllerLazyViewControllersObject = {}\n    \n    \n    constructor(view: UIView) {\n        \n        super(view)\n        \n        this.view.addSubview(this.backgroundView)\n        \n    }\n    \n    \n    lazyViewControllerObjectWithClass<T extends typeof UIViewController>(\n        classObject: T,\n        shouldShow: () => (Promise<boolean> | boolean) = () => YES\n    ): UIRootViewControllerLazyViewControllerObject<T> {\n        const result: UIRootViewControllerLazyViewControllerObject<T> = {\n            class: classObject,\n            instance: nil,\n            shouldShow: shouldShow,\n            isInitialized: NO\n        }\n        UIObject.configureWithObject(result, {\n            // @ts-ignore\n            instance: LAZY_VALUE(\n                () => {\n                    result.isInitialized = YES\n                    return new classObject(\n                        new UIView(classObject.name.replace(\"ViewController\", \"View\"))\n                    )\n                }\n            )\n        })\n        return result\n    }\n    \n    \n    \n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        \n        UICore.languageService.updateCurrentLanguageKey()\n        \n        // Show content view\n        await this.setContentViewControllerForRoute(route)\n        \n        await this.setDetailsViewControllerForRoute(route)\n        \n    }\n    \n    \n    async setContentViewControllerForRoute(route: UIRoute) {\n        const contentViewControllerObject = FIRST(\n            await this.contentViewControllers.allValues.findAsyncSequential(\n                async value => IS(route.componentWithViewController(value.class)) && await value.shouldShow()\n            ),\n            this.contentViewControllers.mainViewController\n        )\n        this.contentViewController = contentViewControllerObject.instance\n    }\n    \n    async setDetailsViewControllerForRoute(route: UIRoute) {\n        const detailsViewControllerObject = FIRST_OR_NIL(\n            await this.detailsViewControllers.allValues.findAsyncSequential(\n                async value => IS(route.componentWithViewController(value.class)) && await value.shouldShow()\n            )\n        )\n        if (IS(route) && IS(this.detailsViewController) && IS_NOT(detailsViewControllerObject)) {\n            this.detailsViewController = nil\n            this._detailsDialogView.dismiss()\n            this.view.setNeedsLayout()\n            return\n        }\n        this.detailsViewController = detailsViewControllerObject.instance\n    }\n    \n    get contentViewController(): UIViewController {\n        return this._contentViewController || nil\n    }\n    \n    set contentViewController(controller: UIViewController) {\n        \n        if (this.contentViewController == controller) {\n            return\n        }\n        \n        if (this.contentViewController) {\n            this.removeChildViewController(this.contentViewController)\n        }\n        \n        this._contentViewController = controller\n        this.addChildViewControllerInContainer(controller, this.backgroundView)\n        this._triggerLayoutViewSubviews()\n        \n        this.contentViewController.view.style.boxShadow = \"0 3px 6px 0 rgba(0, 0, 0, 0.1)\"\n        \n        this.view.setNeedsLayout()\n        \n    }\n    \n    \n    get detailsViewController(): UIViewController {\n        return this._detailsViewController\n    }\n    \n    set detailsViewController(controller: UIViewController) {\n        \n        if (this.detailsViewController == controller) {\n            return\n        }\n        \n        if (this.detailsViewController) {\n            this.removeChildViewController(this.detailsViewController)\n        }\n        \n        this._detailsViewController = controller\n        \n        if (!IS(controller)) {\n            return\n        }\n        \n        this.addChildViewControllerInDialogView(controller, this._detailsDialogView)\n        this._triggerLayoutViewSubviews()\n        \n        this.detailsViewController.view.style.borderRadius = \"5px\"\n        \n        this._detailsDialogView.showInView(this.view, YES)\n        \n    }\n    \n    updatePageScale() {\n        \n        const actualPageWidth = (UIView.pageWidth * UIView.pageScale).integerValue\n        const minScaleWidth = 700\n        const maxScaleWidth = 1500\n        const minScale = 0.7\n        const maxScale = 1\n        let scale = minScale + (maxScale - minScale) *\n            ((actualPageWidth - minScaleWidth) / (maxScaleWidth - minScaleWidth))\n        scale = Math.min(scale, maxScale)\n        scale = Math.max(scale, minScale)\n        \n        UIView.pageScale = scale\n        \n    }\n    \n    \n    performDefaultLayout(\n        paddingLength = 20,\n        contentViewMaxWidth = 1000,\n        topBarHeight = 65,\n        bottomBarMinHeight = 100\n    ) {\n        \n        // View bounds\n        const bounds = this.view.bounds\n        \n        this.topBarView.frame = new UIRectangle(0, 0, topBarHeight, bounds.width)\n        \n        this.backgroundView.style.top = \"\" + this.topBarView.frame.height.integerValue + \"px\"\n        this.backgroundView.style.width = \"100%\"\n        this.backgroundView.style.height = \"fit-content\"\n        this.backgroundView.style.minHeight = \"\" +\n            (bounds.height - this.topBarView.frame.height - this.bottomBarView.frame.height).integerValue + \"px\"\n        \n        this.contentViewController.view.style.position = \"relative\"\n        this.contentViewController.view.style.bottom = \"0\"\n        this.contentViewController.view.style.top = \"0\"\n        this.contentViewController.view.style.width = \"100%\"\n        this.contentViewController.view.setPaddings(nil, nil, paddingLength, nil)\n        this.contentViewController.view.setNeedsLayout()\n        \n        if (contentViewMaxWidth < this.backgroundView.bounds.width) {\n            \n            this.contentViewController.view.style.marginBottom = \"\" +\n                Math.min(\n                    (this.backgroundView.bounds.width - contentViewMaxWidth) * 0.5,\n                    paddingLength\n                ).integerValue + \"px\"\n            this.contentViewController.view.style.marginTop = \"\" +\n                Math.min(\n                    (this.backgroundView.bounds.width - contentViewMaxWidth) * 0.5,\n                    paddingLength\n                ).integerValue + \"px\"\n            this.contentViewController.view.style.maxWidth = contentViewMaxWidth + \"px\"\n            \n            this.contentViewController.view.style.left = \"\" +\n                ((this.backgroundView.bounds.width - this.contentViewController.view.bounds.width) * 0.5).integerValue +\n                \"px\"\n            \n        }\n        else {\n            \n            this.contentViewController.view.style.margin = \"\"\n            this.contentViewController.view.style.left = \"\"\n            this.contentViewController.view.style.maxWidth = \"\"\n            \n        }\n        \n        // Triggering immediate layout to ensure that the intrinsicContentHeight calculations work well\n        this.contentViewController._triggerLayoutViewSubviews()\n        \n        let contentViewControllerViewHeight = this.contentViewController.view.intrinsicContentHeight(\n            this.contentViewController.view.bounds.width\n        )\n        \n        const detailsViewControllerViewHeight = FIRST_OR_NIL(this.detailsViewController).view.intrinsicContentHeight(\n            this.contentViewController.view.bounds.width)\n        if (detailsViewControllerViewHeight > contentViewControllerViewHeight) {\n            contentViewControllerViewHeight = detailsViewControllerViewHeight\n        }\n        \n        \n        this.contentViewController.view.style.height = \"\" + contentViewControllerViewHeight.integerValue + \"px\"\n        this.contentViewController.view.setNeedsLayout()\n        \n        if (IS(this.detailsViewController)) {\n            \n            this.contentViewController.view.style.transform = \"translateX(\" + 0 + \"px)\"\n            \n            this.detailsViewController.view.frame = this.backgroundView.frame.rectangleWithInset(\n                paddingLength\n            ).rectangleWithWidth(\n                this.contentViewController.view.bounds.width,\n                0.5\n            ).rectangleWithHeight(\n                Math.max(\n                    this.detailsViewController.view.intrinsicContentHeight(\n                        this.detailsViewController.view.bounds.width\n                    ),\n                    this.contentViewController.view.bounds.height\n                )\n            )\n            \n        }\n        else {\n            \n            this.contentViewController.view.style.transform = \"translateX(\" + 0 + \"px)\"\n            \n        }\n        \n        \n        this.bottomBarView.frame = this.backgroundView.frame.rectangleWithY(\n            this.backgroundView.frame.max.y\n        ).rectangleWithHeight(\n            Math.max(bottomBarMinHeight, this.bottomBarView.intrinsicContentHeight(this.backgroundView.frame.width))\n        )\n        \n        \n        wrapInNil(this._detailsDialogView).setMaxSizes(this.bottomBarView.frame.max.y)\n        \n    }\n    \n    \n}\n", "export * from \"./UIObject\"\nexport * from \"./UIView\"\nexport * from \"./UIViewController\"\nexport * from \"./UITimer\"\nexport * from \"./UITextArea\"\nexport * from \"./UITextView\"\nexport * from \"./UITextField\"\nexport * from \"./UITableView\"\nexport * from \"./UIStringFilter\"\nexport * from \"./UISlideScrollerView\"\nexport * from \"./UIScrollView\"\nexport * from \"./UIRoute\"\nexport * from \"./UIRectangle\"\nexport * from \"./UIPoint\"\nexport * from \"./UINativeScrollView\"\nexport * from \"./UILink\"\nexport * from \"./UILinkButton\"\nexport * from \"./UILayoutGrid\"\nexport * from \"./UIKeyValueStringFilter\"\nexport * from \"./UIKeyValueStringSorter\"\nexport * from \"./UIImageView\"\nexport * from \"./UIDialogView\"\nexport * from \"./UIDateTimeInput\"\nexport * from \"./UICoreExtensions\"\nexport * from \"./UICore\"\nexport * from \"./UIColor\"\nexport * from \"./UIBaseButton\"\nexport * from \"./UIButton\"\nexport * from \"./UIActionIndicator\"\nexport * from \"./UICoreExtensionValueObject\"\nexport * from \"./UIInterfaces\"\nexport * from \"./ClientCheckers\"\nexport * from \"./UICore\"\nexport * from \"./UIRootViewController\"\n\n\n\n\n\n\n\n\n", "import {\n    FIRST_OR_NIL,\n    IS,\n    IS_DEFINED,\n    IS_NOT,\n    nil,\n    UICore,\n    UILanguageService,\n    UILocalizedTextObject,\n    UIRoute,\n    UIView, wrapInNil\n} from \"uicore-ts\"\nimport { CBCore } from \"./CBCore\"\nimport { CBLocalizedTextObject } from \"./CBDataInterfaces\"\n\n\n\n\n\ninterface ParticularLanguageValues {\n    \n    [x: string]: string\n    \n    topBarTitle: string;\n    selectLanguageTitle: string;\n    languageNameShort: string;\n    leftBarTitle: string;\n    languageName: string\n    \n}\n\n\ninterface LanguageValues {\n    \n    [x: string]: ParticularLanguageValues\n    \n    en: ParticularLanguageValues\n    est: ParticularLanguageValues\n    \n}\n\n\nexport class CBLanguageService implements UILanguageService {\n    \n    static _currentLanguageKey: string\n    \n    static languageValues: LanguageValues = {\n        \n        en: {\n            \n            languageName: \"English\",\n            languageNameShort: \"ENG\",\n            \n            topBarTitle: \"UICore application\",\n            \n            selectLanguageTitle: \"Select language\",\n            leftBarTitle: \"Title\"\n            \n            \n        },\n        est: {\n            \n            languageName: \"Eesti keel\",\n            languageNameShort: \"EST\",\n            \n            topBarTitle: \"UICore rakendus\",\n            \n            selectLanguageTitle: \"Vali keel\",\n            leftBarTitle: \"Pealkiri\"\n            \n            \n        }\n        \n        \n        \n        \n    }\n    \n    static languages = JSON.parse(JSON.stringify(CBLanguageService.languageValues))\n    \n    static useStoredLanguageValues(values = {}) {\n    \n        const result = JSON.parse(JSON.stringify(CBLanguageService.languageValues))\n            .objectByCopyingValuesRecursivelyFromObject(\n                values) as any\n        \n        if (JSON.stringify(result) != JSON.stringify(CBLanguageService.languages)) {\n    \n            CBLanguageService.languages = result\n    \n            CBLanguageService.broadcastLanguageChangeEvent()\n            \n        }\n        \n    }\n    \n    \n    static broadcastLanguageChangeEvent(view?: UIView) {\n    \n        view = view as any || CBCore.sharedInstance.viewCores.everyElement.rootViewController.view.rootView as any\n        \n        view.broadcastEventInSubtree({\n            name: UIView.broadcastEventName.LanguageChanged,\n            parameters: {}\n        })\n        \n    }\n    \n    static get defaultLanguageKey() {\n        \n        // @ts-ignore\n        return (CBCoreInitializerObject.defaultLanguageKey || \"en\")\n        \n    }\n    \n    static get currentLanguageKey() {\n        \n        if (!CBLanguageService._currentLanguageKey) {\n            \n            CBLanguageService.updateCurrentLanguageKey()\n            \n        }\n        \n        return CBLanguageService._currentLanguageKey\n        \n    }\n    \n    updateCurrentLanguageKey() {\n        \n        CBLanguageService.updateCurrentLanguageKey()\n        \n    }\n    \n    static updateCurrentLanguageKey(route = UIRoute.currentRoute) {\n        \n        let result = route.componentWithName(\"settings\").parameters.language\n        \n        if (IS_NOT(result)) {\n            \n            result = CBLanguageService.defaultLanguageKey\n            \n        }\n        \n        const isChanged = (result != CBLanguageService._currentLanguageKey)\n        \n        CBLanguageService._currentLanguageKey = result\n        \n        if (isChanged) {\n            \n            CBCore.sharedInstance.languageKey = result\n            \n            CBLanguageService.broadcastLanguageChangeEvent()\n            \n        }\n        \n    }\n    \n    get currentLanguageKey() {\n        \n        const result = CBLanguageService.currentLanguageKey\n        \n        return result\n        \n    }\n    \n    \n    \n    static stringForKey(\n        key: string,\n        languageKey: string,\n        defaultString: string,\n        parameters?: { [x: string]: string | UILocalizedTextObject; }\n    ) {\n        \n        var result\n        \n        if (IS(key) && CBLanguageService.languages[languageKey] &&\n            IS_DEFINED(CBLanguageService.languages[languageKey][key])) {\n            \n            result = CBLanguageService.languages[languageKey][key]\n            \n        }\n        else {\n            \n            result = defaultString\n            \n        }\n        \n        if (IS(parameters)) {\n            \n            const parameterKeys = Object.keys(parameters)\n            \n            parameterKeys.forEach(function (key, index, array) {\n                \n                const keyString = \"%\" + key + \"%\"\n                \n                const parameter = parameters[key]\n                \n                var parameterString\n                \n                if (parameter instanceof Object) {\n                    \n                    parameterString = UICore.languageService.stringForCurrentLanguage(parameter as UILocalizedTextObject)\n                    \n                }\n                else {\n                    \n                    parameterString = parameter\n                    \n                }\n                \n                \n                result = result.replace(new RegExp(keyString, \"g\"), parameterString)\n                \n            })\n            \n        }\n        \n        return result\n        \n    }\n    \n    stringForKey(\n        key: string,\n        languageKey: string,\n        defaultString: string,\n        parameters?: { [x: string]: string | UILocalizedTextObject; }\n    ) {\n        \n        \n        return CBLanguageService.stringForKey(key, languageKey, defaultString, parameters)\n        \n        \n    }\n    \n    \n    static localizedTextObjectForKey(\n        key: string,\n        defaultString = key,\n        parameters?: { [x: string]: string | UILocalizedTextObject; }\n    ) {\n        \n        const result = {}\n        \n        CBLanguageService.languages.forEach(function (languageObject, languageKey) {\n            \n            result[languageKey] = CBLanguageService.stringForKey(key, languageKey, defaultString, parameters)\n            \n        })\n        \n        return result\n        \n    }\n    \n    localizedTextObjectForKey(\n        key: string,\n        defaultString?: string,\n        parameters?: { [x: string]: string | UILocalizedTextObject; }\n    ) {\n        \n        const result = CBLanguageService.localizedTextObjectForKey(key, defaultString, parameters)\n        \n        return result\n        \n    }\n    \n    \n    static localizedTextObjectForText(text: string) {\n        \n        if (IS_NOT(text)) {\n            \n            return nil\n            \n        }\n        \n        const result = {\n            \n            [CBLanguageService.defaultLanguageKey]: text\n            \n        }\n        \n        return result\n        \n    }\n    \n    localizedTextObjectForText(text: string) {\n        \n        const result = CBLanguageService.localizedTextObjectForText(text)\n        \n        return result\n        \n    }\n    \n    \n    static stringForCurrentLanguage(localizedTextObject: CBLocalizedTextObject | string) {\n        \n        if (!CBLanguageService || !localizedTextObject) {\n            \n            const asd = 1\n            \n        }\n        \n        if (localizedTextObject === \"\" + localizedTextObject) {\n            \n            return localizedTextObject\n            \n        }\n        \n        localizedTextObject = FIRST_OR_NIL(localizedTextObject)\n        \n        var result = localizedTextObject[CBLanguageService.currentLanguageKey]\n        \n        if (IS_NOT(result)) {\n            \n            result = localizedTextObject[CBLanguageService.defaultLanguageKey]\n            \n        }\n        \n        if (IS_NOT(result)) {\n            \n            result = localizedTextObject[\"en\"]\n            \n        }\n        \n        if (IS_NOT(result)) {\n            \n            result = \"\"\n            \n        }\n        \n        return result\n        \n    }\n    \n    stringForCurrentLanguage(localizedTextObject: CBLocalizedTextObject) {\n        \n        return CBLanguageService.stringForCurrentLanguage(localizedTextObject)\n        \n    }\n    \n    \n    \n    \n}\n\n\nUICore.languageService = CBLanguageService\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS, nil, UIObject, YES } from \"../../uicore-ts\"\nimport { CBCore } from \"./CBCore\"\n\n\nexport class CBServerClient extends UIObject {\n    \n    _core: CBCore\n    \n    constructor(core: CBCore) {\n        \n        super()\n        \n        this._core = core\n        \n    }\n    \n    \n    sendJSONObject(URL: string, objectToSend: any, completion: (response: any) => void) {\n        \n        this.sendRequest(\"POST\", URL, objectToSend, function (this: CBServerClient, status, response) {\n            if (status != 200) {\n                \n                console.log(\"GET \" + URL + \" \" + status)\n                \n                if (IS(completion)) {\n                    completion(nil)\n                }\n                return\n            }\n            const result = JSON.parse(response)\n    \n            if (IS(completion)) {\n                completion(result)\n            }\n        }.bind(this))\n        \n    }\n    \n    retrieveJSONObject(URL: string, completion: (response: any) => void) {\n        \n        this.retrieveJSONObjectWithCaching(URL, nil, nil, YES, completion)\n        \n    }\n    \n    retrieveJSONObjectWithCaching(\n        URL: string,\n        cacheObject: any,\n        cacheKey: string,\n        forceUpdate: boolean,\n        completion: (response: any) => void\n    ) {\n        if (IS(cacheObject[cacheKey]) && !forceUpdate) {\n            if (IS(completion)) {\n                completion(cacheObject[cacheKey])\n            }\n            return\n        }\n        this.sendRequest(\"GET\", URL, null, function (this: CBServerClient, status, response) {\n            if (status != 200) {\n                \n                console.log(\"GET \" + URL + \" \" + status)\n                \n                if (IS(completion)) {\n                    completion(nil)\n                }\n                return\n            }\n            const result = JSON.parse(response)\n            cacheObject[cacheKey] = result\n            if (IS(completion)) {\n                completion(result)\n            }\n        }.bind(this))\n    }\n    \n    sendRequest(method: string, URL: string, data: any, completion: (status: number, response: string) => void) {\n    \n        const xhr = new XMLHttpRequest()\n        xhr.open(method, URL, true)\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\")\n        xhr.onreadystatechange = processRequest\n        \n        function processRequest(event: Event) {\n            \n            if (xhr.readyState == 4) {\n                if (IS(completion)) {\n                    completion(xhr.status, xhr.responseText)\n                }\n            }\n            \n        }\n        \n        xhr.send(JSON.stringify(data))\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERROR_PACKET = exports.PACKET_TYPES_REVERSE = exports.PACKET_TYPES = void 0;\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nexports.PACKET_TYPES = PACKET_TYPES;\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nexports.PACKET_TYPES_REVERSE = PACKET_TYPES_REVERSE;\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexports.ERROR_PACKET = ERROR_PACKET;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commons_js_1 = require(\"./commons.js\");\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(commons_js_1.PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexports.default = encodePacket;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexports.encode = encode;\nconst decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\nexports.decode = decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commons_js_1 = require(\"./commons.js\");\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return commons_js_1.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = (0, base64_arraybuffer_js_1.decode)(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexports.default = decodePacket;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePayload = exports.decodePacket = exports.encodePayload = exports.encodePacket = exports.protocol = void 0;\nconst encodePacket_js_1 = require(\"./encodePacket.js\");\nexports.encodePacket = encodePacket_js_1.default;\nconst decodePacket_js_1 = require(\"./decodePacket.js\");\nexports.decodePacket = decodePacket_js_1.default;\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        (0, encodePacket_js_1.default)(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nexports.encodePayload = encodePayload;\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = (0, decodePacket_js_1.default)(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexports.decodePayload = decodePayload;\nexports.protocol = 4;\n", "\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.globalThisShim = void 0;\nexports.globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.byteLength = exports.installTimerFunctions = exports.pick = void 0;\nconst globalThis_js_1 = require(\"./globalThis.js\");\nfunction pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\nexports.pick = pick;\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nfunction installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis_js_1.globalThisShim);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis_js_1.globalThisShim);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis_js_1.globalThisShim);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis_js_1.globalThisShim);\n    }\n}\nexports.installTimerFunctions = installTimerFunctions;\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nfunction byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nexports.byteLength = byteLength;\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transport = void 0;\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst util_js_1 = require(\"./util.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = (0, debug_1.default)(\"engine.io-client:transport\"); // debug()\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nclass Transport extends component_emitter_1.Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n            debug(\"transport is not open, discarding packets\");\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = (0, engine_io_parser_1.decodePacket)(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\nexports.Transport = Transport;\n", "// imported from https://github.com/unshiftio/yeast\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.yeast = exports.decode = exports.encode = void 0;\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\nexports.encode = encode;\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\nexports.decode = decode;\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\nexports.yeast = yeast;\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "\"use strict\";\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nfunction encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\nexports.encode = encode;\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nfunction decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\nexports.decode = decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasCORS = void 0;\n// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexports.hasCORS = value;\n", "\"use strict\";\n// browser shim for xmlhttprequest module\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XHR = void 0;\nconst has_cors_js_1 = require(\"../contrib/has-cors.js\");\nconst globalThis_js_1 = require(\"../globalThis.js\");\nfunction XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || has_cors_js_1.hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis_js_1.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexports.XHR = XHR;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Request = exports.Polling = void 0;\nconst transport_js_1 = require(\"../transport.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst xmlhttprequest_js_1 = require(\"./xmlhttprequest.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst util_js_1 = require(\"../util.js\");\nconst globalThis_js_1 = require(\"../globalThis.js\");\nconst debug = (0, debug_1.default)(\"engine.io-client:polling\"); // debug()\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new xmlhttprequest_js_1.XHR({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nclass Polling extends transport_js_1.Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            debug(\"paused\");\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                debug(\"we are currently polling - waiting to pause\");\n                total++;\n                this.once(\"pollComplete\", function () {\n                    debug(\"pre-pause polling complete\");\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                debug(\"we are currently writing - waiting to pause\");\n                total++;\n                this.once(\"drain\", function () {\n                    debug(\"pre-pause writing complete\");\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        debug(\"polling\");\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        debug(\"polling got data %s\", data);\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0, engine_io_parser_1.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n                debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            debug(\"writing close packet\");\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            debug(\"transport open - closing\");\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug(\"transport not open - deferring close\");\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        (0, engine_io_parser_1.encodePayload)(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = (0, parseqs_js_1.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        debug(\"xhr poll\");\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexports.Polling = Polling;\nclass Request extends component_emitter_1.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new xmlhttprequest_js_1.XHR(opts));\n        try {\n            debug(\"xhr open %s: %s\", this.method, this.uri);\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            debug(\"xhr data %s\", this.data);\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis_js_1.globalThisShim ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultBinaryType = exports.usingBrowserWebSocket = exports.WebSocket = exports.nextTick = void 0;\nconst globalThis_js_1 = require(\"../globalThis.js\");\nexports.nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexports.WebSocket = globalThis_js_1.globalThisShim.WebSocket || globalThis_js_1.globalThisShim.MozWebSocket;\nexports.usingBrowserWebSocket = true;\nexports.defaultBinaryType = \"arraybuffer\";\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WS = void 0;\nconst transport_js_1 = require(\"../transport.js\");\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\nconst util_js_1 = require(\"../util.js\");\nconst websocket_constructor_js_1 = require(\"./websocket-constructor.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst debug = (0, debug_1.default)(\"engine.io-client:websocket\"); // debug()\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nclass WS extends transport_js_1.Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : (0, util_js_1.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                websocket_constructor_js_1.usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new websocket_constructor_js_1.WebSocket(uri, protocols)\n                        : new websocket_constructor_js_1.WebSocket(uri)\n                    : new websocket_constructor_js_1.WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || websocket_constructor_js_1.defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            (0, engine_io_parser_1.encodePacket)(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!websocket_constructor_js_1.usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (websocket_constructor_js_1.usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                    debug(\"websocket closed before onclose event\");\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    (0, websocket_constructor_js_1.nextTick)(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = (0, parseqs_js_1.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!websocket_constructor_js_1.WebSocket;\n    }\n}\nexports.WS = WS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transports = void 0;\nconst polling_js_1 = require(\"./polling.js\");\nconst websocket_js_1 = require(\"./websocket.js\");\nexports.transports = {\n    websocket: websocket_js_1.WS,\n    polling: polling_js_1.Polling\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\n// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nfunction parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nexports.parse = parse;\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst index_js_1 = require(\"./transports/index.js\");\nconst util_js_1 = require(\"./util.js\");\nconst parseqs_js_1 = require(\"./contrib/parseqs.js\");\nconst parseuri_js_1 = require(\"./contrib/parseuri.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst debug = (0, debug_1.default)(\"engine.io-client:socket\"); // debug()\nclass Socket extends component_emitter_1.Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = (0, parseuri_js_1.parse)(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = (0, parseuri_js_1.parse)(opts.host).host;\n        }\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = (0, parseqs_js_1.decode)(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        debug('creating transport \"%s\"', name);\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = engine_io_parser_1.protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        debug(\"options: %j\", opts);\n        return new index_js_1.transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            debug(\"error while creating transport: %s\", e);\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        debug(\"setting transport %s\", transport.name);\n        if (this.transport) {\n            debug(\"clearing existing transport %s\", this.transport.name);\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        debug('probing transport \"%s\"', name);\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            debug('probe transport \"%s\" opened', name);\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    debug('probe transport \"%s\" pong', name);\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    debug('pausing current transport \"%s\"', this.transport.name);\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        debug(\"changing transport and sending upgrade packet\");\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    debug('probe transport \"%s\" failed', name);\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            debug('probe transport \"%s\" failed because of error: %s', name, err);\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        debug(\"socket open\");\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            debug(\"starting upgrade probes\");\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n            debug('packet received with socket readyState \"%s\"', this.readyState);\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            debug(\"flushing %d packets in socket\", packets.length);\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += (0, util_js_1.byteLength)(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                debug(\"only send %d out of %d packets\", i, this.writeBuffer.length);\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        debug(\"payload size is %d (max: %d)\", payloadSize, this.maxPayload);\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            debug(\"socket closing - telling transport to close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        debug(\"socket error %j\", err);\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            debug('socket close with reason: \"%s\"', reason);\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nexports.Socket = Socket;\nSocket.protocol = engine_io_parser_1.protocol;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.installTimerFunctions = exports.transports = exports.Transport = exports.protocol = exports.Socket = void 0;\nconst socket_js_1 = require(\"./socket.js\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_js_1.Socket; } });\nexports.protocol = socket_js_1.Socket.protocol;\nvar transport_js_1 = require(\"./transport.js\");\nObject.defineProperty(exports, \"Transport\", { enumerable: true, get: function () { return transport_js_1.Transport; } });\nvar index_js_1 = require(\"./transports/index.js\");\nObject.defineProperty(exports, \"transports\", { enumerable: true, get: function () { return index_js_1.transports; } });\nvar util_js_1 = require(\"./util.js\");\nObject.defineProperty(exports, \"installTimerFunctions\", { enumerable: true, get: function () { return util_js_1.installTimerFunctions; } });\nvar parseuri_js_1 = require(\"./contrib/parseuri.js\");\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parseuri_js_1.parse; } });\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client:url\"); // debug()\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = engine_io_client_1.parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_js_1 = require(\"./is-binary.js\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_js_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst binary_js_1 = require(\"./binary.js\");\nconst is_binary_js_1 = require(\"./is-binary.js\");\nconst debug_1 = require(\"debug\"); // debug()\nconst debug = debug_1.default(\"socket.io-parser\"); // debug()\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_js_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_js_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends component_emitter_1.Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_js_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_js_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst on_js_1 = require(\"./on.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client:socket\"); // debug()\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends component_emitter_1.Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_js_1.on(io, \"open\", this.onopen.bind(this)),\n            on_js_1.on(io, \"packet\", this.onpacket.bind(this)),\n            on_js_1.on(io, \"error\", this.onerror.bind(this)),\n            on_js_1.on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    debug(\"removing packet with ack id %d from the buffer\", id);\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\nexports.Socket = Socket;\n", "\"use strict\";\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Backoff = void 0;\nfunction Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\nexports.Backoff = Backoff;\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst socket_js_1 = require(\"./socket.js\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst on_js_1 = require(\"./on.js\");\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client:manager\"); // debug()\nclass Manager extends component_emitter_1.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        engine_io_client_1.installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new backo2_js_1.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_js_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_js_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_js_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports.connect = exports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_js_1 = require(\"./url.js\");\nconst manager_js_1 = require(\"./manager.js\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_js_1.Manager; } });\nconst socket_js_1 = require(\"./socket.js\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_js_1.Socket; } });\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client\"); // debug()\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_js_1.url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_js_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_js_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\nexports.connect = lookup;\nexports.default = lookup;\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager: manager_js_1.Manager,\n    Socket: socket_js_1.Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n\nmodule.exports = lookup;\n", "!function(e){var t;\"object\"==typeof exports?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(\"undefined\"!=typeof window?t=window:\"undefined\"!=typeof global?t=global:\"undefined\"!=typeof self&&(t=self),t.objectHash=e())}(function(){return function o(i,u,a){function s(n,e){if(!u[n]){if(!i[n]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(n,!0);if(f)return f(n,!0);throw new Error(\"Cannot find module '\"+n+\"'\")}var r=u[n]={exports:{}};i[n][0].call(r.exports,function(e){var t=i[n][1][e];return s(t||e)},r,r.exports,o,i,u,a)}return u[n].exports}for(var f=\"function\"==typeof require&&require,e=0;e<a.length;e++)s(a[e]);return s}({1:[function(w,b,m){(function(e,t,f,n,r,o,i,u,a){\"use strict\";var s=w(\"crypto\");function c(e,t){return function(e,t){var n;n=\"passthrough\"!==t.algorithm?s.createHash(t.algorithm):new y;void 0===n.write&&(n.write=n.update,n.end=n.update);g(t,n).dispatch(e),n.update||n.end(\"\");if(n.digest)return n.digest(\"buffer\"===t.encoding?void 0:t.encoding);var r=n.read();return\"buffer\"!==t.encoding?r.toString(t.encoding):r}(e,t=h(e,t))}(m=b.exports=c).sha1=function(e){return c(e)},m.keys=function(e){return c(e,{excludeValues:!0,algorithm:\"sha1\",encoding:\"hex\"})},m.MD5=function(e){return c(e,{algorithm:\"md5\",encoding:\"hex\"})},m.keysMD5=function(e){return c(e,{algorithm:\"md5\",encoding:\"hex\",excludeValues:!0})};var l=s.getHashes?s.getHashes().slice():[\"sha1\",\"md5\"];l.push(\"passthrough\");var d=[\"buffer\",\"hex\",\"binary\",\"base64\"];function h(e,t){t=t||{};var n={};if(n.algorithm=t.algorithm||\"sha1\",n.encoding=t.encoding||\"hex\",n.excludeValues=!!t.excludeValues,n.algorithm=n.algorithm.toLowerCase(),n.encoding=n.encoding.toLowerCase(),n.ignoreUnknown=!0===t.ignoreUnknown,n.respectType=!1!==t.respectType,n.respectFunctionNames=!1!==t.respectFunctionNames,n.respectFunctionProperties=!1!==t.respectFunctionProperties,n.unorderedArrays=!0===t.unorderedArrays,n.unorderedSets=!1!==t.unorderedSets,n.unorderedObjects=!1!==t.unorderedObjects,n.replacer=t.replacer||void 0,n.excludeKeys=t.excludeKeys||void 0,void 0===e)throw new Error(\"Object argument required.\");for(var r=0;r<l.length;++r)l[r].toLowerCase()===n.algorithm.toLowerCase()&&(n.algorithm=l[r]);if(-1===l.indexOf(n.algorithm))throw new Error('Algorithm \"'+n.algorithm+'\"  not supported. supported values: '+l.join(\", \"));if(-1===d.indexOf(n.encoding)&&\"passthrough\"!==n.algorithm)throw new Error('Encoding \"'+n.encoding+'\"  not supported. supported values: '+d.join(\", \"));return n}function p(e){if(\"function\"==typeof e){return null!=/^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i.exec(Function.prototype.toString.call(e))}}function g(u,t,a){a=a||[];function s(e){return t.update?t.update(e,\"utf8\"):t.write(e,\"utf8\")}return{dispatch:function(e){return u.replacer&&(e=u.replacer(e)),this[\"_\"+(null===e?\"null\":typeof e)](e)},_object:function(t){var e=Object.prototype.toString.call(t),n=/\\[object (.*)\\]/i.exec(e);n=(n=n?n[1]:\"unknown:[\"+e+\"]\").toLowerCase();var r;if(0<=(r=a.indexOf(t)))return this.dispatch(\"[CIRCULAR:\"+r+\"]\");if(a.push(t),void 0!==f&&f.isBuffer&&f.isBuffer(t))return s(\"buffer:\"),s(t);if(\"object\"===n||\"function\"===n||\"asyncfunction\"===n){var o=Object.keys(t);u.unorderedObjects&&(o=o.sort()),!1===u.respectType||p(t)||o.splice(0,0,\"prototype\",\"__proto__\",\"constructor\"),u.excludeKeys&&(o=o.filter(function(e){return!u.excludeKeys(e)})),s(\"object:\"+o.length+\":\");var i=this;return o.forEach(function(e){i.dispatch(e),s(\":\"),u.excludeValues||i.dispatch(t[e]),s(\",\")})}if(!this[\"_\"+n]){if(u.ignoreUnknown)return s(\"[\"+n+\"]\");throw new Error('Unknown object type \"'+n+'\"')}this[\"_\"+n](t)},_array:function(e,t){t=void 0!==t?t:!1!==u.unorderedArrays;var n=this;if(s(\"array:\"+e.length+\":\"),!t||e.length<=1)return e.forEach(function(e){return n.dispatch(e)});var r=[],o=e.map(function(e){var t=new y,n=a.slice();return g(u,t,n).dispatch(e),r=r.concat(n.slice(a.length)),t.read().toString()});return a=a.concat(r),o.sort(),this._array(o,!1)},_date:function(e){return s(\"date:\"+e.toJSON())},_symbol:function(e){return s(\"symbol:\"+e.toString())},_error:function(e){return s(\"error:\"+e.toString())},_boolean:function(e){return s(\"bool:\"+e.toString())},_string:function(e){s(\"string:\"+e.length+\":\"),s(e.toString())},_function:function(e){s(\"fn:\"),p(e)?this.dispatch(\"[native]\"):this.dispatch(e.toString()),!1!==u.respectFunctionNames&&this.dispatch(\"function-name:\"+String(e.name)),u.respectFunctionProperties&&this._object(e)},_number:function(e){return s(\"number:\"+e.toString())},_xml:function(e){return s(\"xml:\"+e.toString())},_null:function(){return s(\"Null\")},_undefined:function(){return s(\"Undefined\")},_regexp:function(e){return s(\"regex:\"+e.toString())},_uint8array:function(e){return s(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint8clampedarray:function(e){return s(\"uint8clampedarray:\"),this.dispatch(Array.prototype.slice.call(e))},_int8array:function(e){return s(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint16array:function(e){return s(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(e))},_int16array:function(e){return s(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint32array:function(e){return s(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(e))},_int32array:function(e){return s(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float32array:function(e){return s(\"float32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float64array:function(e){return s(\"float64array:\"),this.dispatch(Array.prototype.slice.call(e))},_arraybuffer:function(e){return s(\"arraybuffer:\"),this.dispatch(new Uint8Array(e))},_url:function(e){return s(\"url:\"+e.toString())},_map:function(e){s(\"map:\");var t=Array.from(e);return this._array(t,!1!==u.unorderedSets)},_set:function(e){s(\"set:\");var t=Array.from(e);return this._array(t,!1!==u.unorderedSets)},_file:function(e){return s(\"file:\"),this.dispatch([e.name,e.size,e.type,e.lastModfied])},_blob:function(){if(u.ignoreUnknown)return s(\"[blob]\");throw Error('Hashing Blob objects is currently not supported\\n(see https://github.com/puleos/object-hash/issues/26)\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n')},_domwindow:function(){return s(\"domwindow\")},_bigint:function(e){return s(\"bigint:\"+e.toString())},_process:function(){return s(\"process\")},_timer:function(){return s(\"timer\")},_pipe:function(){return s(\"pipe\")},_tcp:function(){return s(\"tcp\")},_udp:function(){return s(\"udp\")},_tty:function(){return s(\"tty\")},_statwatcher:function(){return s(\"statwatcher\")},_securecontext:function(){return s(\"securecontext\")},_connection:function(){return s(\"connection\")},_zlib:function(){return s(\"zlib\")},_context:function(){return s(\"context\")},_nodescript:function(){return s(\"nodescript\")},_httpparser:function(){return s(\"httpparser\")},_dataview:function(){return s(\"dataview\")},_signal:function(){return s(\"signal\")},_fsevent:function(){return s(\"fsevent\")},_tlswrap:function(){return s(\"tlswrap\")}}}function y(){return{buf:\"\",write:function(e){this.buf+=e},end:function(e){this.buf+=e},read:function(){return this.buf}}}m.writeToStream=function(e,t,n){return void 0===n&&(n=t,t={}),g(t=h(e,t),n).dispatch(e)}}).call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_7eac155c.js\",\"/\")},{buffer:3,crypto:5,lYpoI2:10}],2:[function(e,t,f){(function(e,t,n,r,o,i,u,a,s){!function(e){\"use strict\";var f=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,n=\"+\".charCodeAt(0),r=\"/\".charCodeAt(0),o=\"0\".charCodeAt(0),i=\"a\".charCodeAt(0),u=\"A\".charCodeAt(0),a=\"-\".charCodeAt(0),s=\"_\".charCodeAt(0);function c(e){var t=e.charCodeAt(0);return t===n||t===a?62:t===r||t===s?63:t<o?-1:t<o+10?t-o+26+26:t<u+26?t-u:t<i+26?t-i+26:void 0}e.toByteArray=function(e){var t,n;if(0<e.length%4)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.length,o=\"=\"===e.charAt(r-2)?2:\"=\"===e.charAt(r-1)?1:0,i=new f(3*e.length/4-o),u=0<o?e.length-4:e.length,a=0;function s(e){i[a++]=e}for(t=0;t<u;t+=4,0)s((16711680&(n=c(e.charAt(t))<<18|c(e.charAt(t+1))<<12|c(e.charAt(t+2))<<6|c(e.charAt(t+3))))>>16),s((65280&n)>>8),s(255&n);return 2==o?s(255&(n=c(e.charAt(t))<<2|c(e.charAt(t+1))>>4)):1==o&&(s((n=c(e.charAt(t))<<10|c(e.charAt(t+1))<<4|c(e.charAt(t+2))>>2)>>8&255),s(255&n)),i},e.fromByteArray=function(e){var t,n,r,o,i=e.length%3,u=\"\";function a(e){return\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(e)}for(t=0,r=e.length-i;t<r;t+=3)n=(e[t]<<16)+(e[t+1]<<8)+e[t+2],u+=a((o=n)>>18&63)+a(o>>12&63)+a(o>>6&63)+a(63&o);switch(i){case 1:u+=a((n=e[e.length-1])>>2),u+=a(n<<4&63),u+=\"==\";break;case 2:u+=a((n=(e[e.length-2]<<8)+e[e.length-1])>>10),u+=a(n>>4&63),u+=a(n<<2&63),u+=\"=\"}return u}}(void 0===f?this.base64js={}:f)}).call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/node_modules/gulp-browserify/node_modules/base64-js/lib\")},{buffer:3,lYpoI2:10}],3:[function(O,e,H){(function(e,t,g,n,r,o,i,u,a){var s=O(\"base64-js\"),f=O(\"ieee754\");function g(e,t,n){if(!(this instanceof g))return new g(e,t,n);var r,o,i,u,a,s=typeof e;if(\"base64\"===t&&\"string\"==s)for(e=(r=e).trim?r.trim():r.replace(/^\\s+|\\s+$/g,\"\");e.length%4!=0;)e+=\"=\";if(\"number\"==s)o=x(e);else if(\"string\"==s)o=g.byteLength(e,t);else{if(\"object\"!=s)throw new Error(\"First argument needs to be a number, array or string.\");o=x(e.length)}if(g._useTypedArrays?i=g._augment(new Uint8Array(o)):((i=this).length=o,i._isBuffer=!0),g._useTypedArrays&&\"number\"==typeof e.byteLength)i._set(e);else if(S(a=e)||g.isBuffer(a)||a&&\"object\"==typeof a&&\"number\"==typeof a.length)for(u=0;u<o;u++)g.isBuffer(e)?i[u]=e.readUInt8(u):i[u]=e[u];else if(\"string\"==s)i.write(e,0,t);else if(\"number\"==s&&!g._useTypedArrays&&!n)for(u=0;u<o;u++)i[u]=0;return i}function y(e,t,n,r){return g._charsWritten=T(function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function w(e,t,n,r){return g._charsWritten=T(function(e){for(var t,n,r,o=[],i=0;i<e.length;i++)t=e.charCodeAt(i),n=t>>8,r=t%256,o.push(r),o.push(n);return o}(t),e,n,r)}function c(e,t,n){var r=\"\";n=Math.min(e.length,n);for(var o=t;o<n;o++)r+=String.fromCharCode(e[o]);return r}function l(e,t,n,r){r||(D(\"boolean\"==typeof n,\"missing or invalid endian\"),D(null!=t,\"missing offset\"),D(t+1<e.length,\"Trying to read beyond buffer length\"));var o,i=e.length;if(!(i<=t))return n?(o=e[t],t+1<i&&(o|=e[t+1]<<8)):(o=e[t]<<8,t+1<i&&(o|=e[t+1])),o}function d(e,t,n,r){r||(D(\"boolean\"==typeof n,\"missing or invalid endian\"),D(null!=t,\"missing offset\"),D(t+3<e.length,\"Trying to read beyond buffer length\"));var o,i=e.length;if(!(i<=t))return n?(t+2<i&&(o=e[t+2]<<16),t+1<i&&(o|=e[t+1]<<8),o|=e[t],t+3<i&&(o+=e[t+3]<<24>>>0)):(t+1<i&&(o=e[t+1]<<16),t+2<i&&(o|=e[t+2]<<8),t+3<i&&(o|=e[t+3]),o+=e[t]<<24>>>0),o}function h(e,t,n,r){if(r||(D(\"boolean\"==typeof n,\"missing or invalid endian\"),D(null!=t,\"missing offset\"),D(t+1<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t)){var o=l(e,t,n,!0);return 32768&o?-1*(65535-o+1):o}}function p(e,t,n,r){if(r||(D(\"boolean\"==typeof n,\"missing or invalid endian\"),D(null!=t,\"missing offset\"),D(t+3<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t)){var o=d(e,t,n,!0);return 2147483648&o?-1*(4294967295-o+1):o}}function b(e,t,n,r){return r||(D(\"boolean\"==typeof n,\"missing or invalid endian\"),D(t+3<e.length,\"Trying to read beyond buffer length\")),f.read(e,t,n,23,4)}function m(e,t,n,r){return r||(D(\"boolean\"==typeof n,\"missing or invalid endian\"),D(t+7<e.length,\"Trying to read beyond buffer length\")),f.read(e,t,n,52,8)}function v(e,t,n,r,o){o||(D(null!=t,\"missing value\"),D(\"boolean\"==typeof r,\"missing or invalid endian\"),D(null!=n,\"missing offset\"),D(n+1<e.length,\"trying to write beyond buffer length\"),N(t,65535));var i=e.length;if(!(i<=n))for(var u=0,a=Math.min(i-n,2);u<a;u++)e[n+u]=(t&255<<8*(r?u:1-u))>>>8*(r?u:1-u)}function _(e,t,n,r,o){o||(D(null!=t,\"missing value\"),D(\"boolean\"==typeof r,\"missing or invalid endian\"),D(null!=n,\"missing offset\"),D(n+3<e.length,\"trying to write beyond buffer length\"),N(t,4294967295));var i=e.length;if(!(i<=n))for(var u=0,a=Math.min(i-n,4);u<a;u++)e[n+u]=t>>>8*(r?u:3-u)&255}function E(e,t,n,r,o){o||(D(null!=t,\"missing value\"),D(\"boolean\"==typeof r,\"missing or invalid endian\"),D(null!=n,\"missing offset\"),D(n+1<e.length,\"Trying to write beyond buffer length\"),Y(t,32767,-32768)),e.length<=n||v(e,0<=t?t:65535+t+1,n,r,o)}function I(e,t,n,r,o){o||(D(null!=t,\"missing value\"),D(\"boolean\"==typeof r,\"missing or invalid endian\"),D(null!=n,\"missing offset\"),D(n+3<e.length,\"Trying to write beyond buffer length\"),Y(t,2147483647,-2147483648)),e.length<=n||_(e,0<=t?t:4294967295+t+1,n,r,o)}function A(e,t,n,r,o){o||(D(null!=t,\"missing value\"),D(\"boolean\"==typeof r,\"missing or invalid endian\"),D(null!=n,\"missing offset\"),D(n+3<e.length,\"Trying to write beyond buffer length\"),F(t,34028234663852886e22,-34028234663852886e22)),e.length<=n||f.write(e,t,n,r,23,4)}function B(e,t,n,r,o){o||(D(null!=t,\"missing value\"),D(\"boolean\"==typeof r,\"missing or invalid endian\"),D(null!=n,\"missing offset\"),D(n+7<e.length,\"Trying to write beyond buffer length\"),F(t,17976931348623157e292,-17976931348623157e292)),e.length<=n||f.write(e,t,n,r,52,8)}H.Buffer=g,H.SlowBuffer=g,H.INSPECT_MAX_BYTES=50,g.poolSize=8192,g._useTypedArrays=function(){try{var e=new ArrayBuffer(0),t=new Uint8Array(e);return t.foo=function(){return 42},42===t.foo()&&\"function\"==typeof t.subarray}catch(e){return!1}}(),g.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"raw\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},g.isBuffer=function(e){return!(null==e||!e._isBuffer)},g.byteLength=function(e,t){var n;switch(e+=\"\",t||\"utf8\"){case\"hex\":n=e.length/2;break;case\"utf8\":case\"utf-8\":n=C(e).length;break;case\"ascii\":case\"binary\":case\"raw\":n=e.length;break;case\"base64\":n=k(e).length;break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":n=2*e.length;break;default:throw new Error(\"Unknown encoding\")}return n},g.concat=function(e,t){if(D(S(e),\"Usage: Buffer.concat(list, [totalLength])\\nlist should be an Array.\"),0===e.length)return new g(0);if(1===e.length)return e[0];if(\"number\"!=typeof t)for(o=t=0;o<e.length;o++)t+=e[o].length;for(var n=new g(t),r=0,o=0;o<e.length;o++){var i=e[o];i.copy(n,r),r+=i.length}return n},g.prototype.write=function(e,t,n,r){var o;isFinite(t)?isFinite(n)||(r=n,n=void 0):(o=r,r=t,t=n,n=o),t=Number(t)||0;var i,u,a,s,f,c,l,d,h,p=this.length-t;switch((!n||p<(n=Number(n)))&&(n=p),r=String(r||\"utf8\").toLowerCase()){case\"hex\":i=function(e,t,n,r){n=Number(n)||0;var o=e.length-n;(!r||o<(r=Number(r)))&&(r=o);var i=t.length;D(i%2==0,\"Invalid hex string\"),i/2<r&&(r=i/2);for(var u=0;u<r;u++){var a=parseInt(t.substr(2*u,2),16);D(!isNaN(a),\"Invalid hex string\"),e[n+u]=a}return g._charsWritten=2*u,u}(this,e,t,n);break;case\"utf8\":case\"utf-8\":c=this,l=e,d=t,h=n,i=g._charsWritten=T(C(l),c,d,h);break;case\"ascii\":case\"binary\":i=y(this,e,t,n);break;case\"base64\":u=this,a=e,s=t,f=n,i=g._charsWritten=T(k(a),u,s,f);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":i=w(this,e,t,n);break;default:throw new Error(\"Unknown encoding\")}return i},g.prototype.toString=function(e,t,n){var r,o,i,u,a=this;if(e=String(e||\"utf8\").toLowerCase(),t=Number(t)||0,(n=void 0!==n?Number(n):n=a.length)===t)return\"\";switch(e){case\"hex\":r=function(e,t,n){var r=e.length;(!t||t<0)&&(t=0);(!n||n<0||r<n)&&(n=r);for(var o=\"\",i=t;i<n;i++)o+=j(e[i]);return o}(a,t,n);break;case\"utf8\":case\"utf-8\":r=function(e,t,n){var r=\"\",o=\"\";n=Math.min(e.length,n);for(var i=t;i<n;i++)e[i]<=127?(r+=M(o)+String.fromCharCode(e[i]),o=\"\"):o+=\"%\"+e[i].toString(16);return r+M(o)}(a,t,n);break;case\"ascii\":case\"binary\":r=c(a,t,n);break;case\"base64\":o=a,u=n,r=0===(i=t)&&u===o.length?s.fromByteArray(o):s.fromByteArray(o.slice(i,u));break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":r=function(e,t,n){for(var r=e.slice(t,n),o=\"\",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}(a,t,n);break;default:throw new Error(\"Unknown encoding\")}return r},g.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},g.prototype.copy=function(e,t,n,r){if(n=n||0,r||0===r||(r=this.length),t=t||0,r!==n&&0!==e.length&&0!==this.length){D(n<=r,\"sourceEnd < sourceStart\"),D(0<=t&&t<e.length,\"targetStart out of bounds\"),D(0<=n&&n<this.length,\"sourceStart out of bounds\"),D(0<=r&&r<=this.length,\"sourceEnd out of bounds\"),r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o=r-n;if(o<100||!g._useTypedArrays)for(var i=0;i<o;i++)e[i+t]=this[i+n];else e._set(this.subarray(n,n+o),t)}},g.prototype.slice=function(e,t){var n=this.length;if(e=U(e,n,0),t=U(t,n,n),g._useTypedArrays)return g._augment(this.subarray(e,t));for(var r=t-e,o=new g(r,void 0,!0),i=0;i<r;i++)o[i]=this[i+e];return o},g.prototype.get=function(e){return console.log(\".get() is deprecated. Access using array indexes instead.\"),this.readUInt8(e)},g.prototype.set=function(e,t){return console.log(\".set() is deprecated. Access using array indexes instead.\"),this.writeUInt8(e,t)},g.prototype.readUInt8=function(e,t){if(t||(D(null!=e,\"missing offset\"),D(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return this[e]},g.prototype.readUInt16LE=function(e,t){return l(this,e,!0,t)},g.prototype.readUInt16BE=function(e,t){return l(this,e,!1,t)},g.prototype.readUInt32LE=function(e,t){return d(this,e,!0,t)},g.prototype.readUInt32BE=function(e,t){return d(this,e,!1,t)},g.prototype.readInt8=function(e,t){if(t||(D(null!=e,\"missing offset\"),D(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return 128&this[e]?-1*(255-this[e]+1):this[e]},g.prototype.readInt16LE=function(e,t){return h(this,e,!0,t)},g.prototype.readInt16BE=function(e,t){return h(this,e,!1,t)},g.prototype.readInt32LE=function(e,t){return p(this,e,!0,t)},g.prototype.readInt32BE=function(e,t){return p(this,e,!1,t)},g.prototype.readFloatLE=function(e,t){return b(this,e,!0,t)},g.prototype.readFloatBE=function(e,t){return b(this,e,!1,t)},g.prototype.readDoubleLE=function(e,t){return m(this,e,!0,t)},g.prototype.readDoubleBE=function(e,t){return m(this,e,!1,t)},g.prototype.writeUInt8=function(e,t,n){n||(D(null!=e,\"missing value\"),D(null!=t,\"missing offset\"),D(t<this.length,\"trying to write beyond buffer length\"),N(e,255)),t>=this.length||(this[t]=e)},g.prototype.writeUInt16LE=function(e,t,n){v(this,e,t,!0,n)},g.prototype.writeUInt16BE=function(e,t,n){v(this,e,t,!1,n)},g.prototype.writeUInt32LE=function(e,t,n){_(this,e,t,!0,n)},g.prototype.writeUInt32BE=function(e,t,n){_(this,e,t,!1,n)},g.prototype.writeInt8=function(e,t,n){n||(D(null!=e,\"missing value\"),D(null!=t,\"missing offset\"),D(t<this.length,\"Trying to write beyond buffer length\"),Y(e,127,-128)),t>=this.length||(0<=e?this.writeUInt8(e,t,n):this.writeUInt8(255+e+1,t,n))},g.prototype.writeInt16LE=function(e,t,n){E(this,e,t,!0,n)},g.prototype.writeInt16BE=function(e,t,n){E(this,e,t,!1,n)},g.prototype.writeInt32LE=function(e,t,n){I(this,e,t,!0,n)},g.prototype.writeInt32BE=function(e,t,n){I(this,e,t,!1,n)},g.prototype.writeFloatLE=function(e,t,n){A(this,e,t,!0,n)},g.prototype.writeFloatBE=function(e,t,n){A(this,e,t,!1,n)},g.prototype.writeDoubleLE=function(e,t,n){B(this,e,t,!0,n)},g.prototype.writeDoubleBE=function(e,t,n){B(this,e,t,!1,n)},g.prototype.fill=function(e,t,n){if(e=e||0,t=t||0,n=n||this.length,\"string\"==typeof e&&(e=e.charCodeAt(0)),D(\"number\"==typeof e&&!isNaN(e),\"value is not a number\"),D(t<=n,\"end < start\"),n!==t&&0!==this.length){D(0<=t&&t<this.length,\"start out of bounds\"),D(0<=n&&n<=this.length,\"end out of bounds\");for(var r=t;r<n;r++)this[r]=e}},g.prototype.inspect=function(){for(var e=[],t=this.length,n=0;n<t;n++)if(e[n]=j(this[n]),n===H.INSPECT_MAX_BYTES){e[n+1]=\"...\";break}return\"<Buffer \"+e.join(\" \")+\">\"},g.prototype.toArrayBuffer=function(){if(\"undefined\"==typeof Uint8Array)throw new Error(\"Buffer.toArrayBuffer not supported in this browser\");if(g._useTypedArrays)return new g(this).buffer;for(var e=new Uint8Array(this.length),t=0,n=e.length;t<n;t+=1)e[t]=this[t];return e.buffer};var L=g.prototype;function U(e,t,n){return\"number\"!=typeof e?n:t<=(e=~~e)?t:0<=e||0<=(e+=t)?e:0}function x(e){return(e=~~Math.ceil(+e))<0?0:e}function S(e){return(Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)})(e)}function j(e){return e<16?\"0\"+e.toString(16):e.toString(16)}function C(e){for(var t=[],n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<=127)t.push(e.charCodeAt(n));else{var o=n;55296<=r&&r<=57343&&n++;for(var i=encodeURIComponent(e.slice(o,n+1)).substr(1).split(\"%\"),u=0;u<i.length;u++)t.push(parseInt(i[u],16))}}return t}function k(e){return s.toByteArray(e)}function T(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);o++)t[o+n]=e[o];return o}function M(e){try{return decodeURIComponent(e)}catch(e){return String.fromCharCode(65533)}}function N(e,t){D(\"number\"==typeof e,\"cannot write a non-number as a number\"),D(0<=e,\"specified a negative value for writing an unsigned value\"),D(e<=t,\"value is larger than maximum value for type\"),D(Math.floor(e)===e,\"value has a fractional component\")}function Y(e,t,n){D(\"number\"==typeof e,\"cannot write a non-number as a number\"),D(e<=t,\"value larger than maximum allowed value\"),D(n<=e,\"value smaller than minimum allowed value\"),D(Math.floor(e)===e,\"value has a fractional component\")}function F(e,t,n){D(\"number\"==typeof e,\"cannot write a non-number as a number\"),D(e<=t,\"value larger than maximum allowed value\"),D(n<=e,\"value smaller than minimum allowed value\")}function D(e,t){if(!e)throw new Error(t||\"Failed assertion\")}g._augment=function(e){return e._isBuffer=!0,e._get=e.get,e._set=e.set,e.get=L.get,e.set=L.set,e.write=L.write,e.toString=L.toString,e.toLocaleString=L.toString,e.toJSON=L.toJSON,e.copy=L.copy,e.slice=L.slice,e.readUInt8=L.readUInt8,e.readUInt16LE=L.readUInt16LE,e.readUInt16BE=L.readUInt16BE,e.readUInt32LE=L.readUInt32LE,e.readUInt32BE=L.readUInt32BE,e.readInt8=L.readInt8,e.readInt16LE=L.readInt16LE,e.readInt16BE=L.readInt16BE,e.readInt32LE=L.readInt32LE,e.readInt32BE=L.readInt32BE,e.readFloatLE=L.readFloatLE,e.readFloatBE=L.readFloatBE,e.readDoubleLE=L.readDoubleLE,e.readDoubleBE=L.readDoubleBE,e.writeUInt8=L.writeUInt8,e.writeUInt16LE=L.writeUInt16LE,e.writeUInt16BE=L.writeUInt16BE,e.writeUInt32LE=L.writeUInt32LE,e.writeUInt32BE=L.writeUInt32BE,e.writeInt8=L.writeInt8,e.writeInt16LE=L.writeInt16LE,e.writeInt16BE=L.writeInt16BE,e.writeInt32LE=L.writeInt32LE,e.writeInt32BE=L.writeInt32BE,e.writeFloatLE=L.writeFloatLE,e.writeFloatBE=L.writeFloatBE,e.writeDoubleLE=L.writeDoubleLE,e.writeDoubleBE=L.writeDoubleBE,e.fill=L.fill,e.inspect=L.inspect,e.toArrayBuffer=L.toArrayBuffer,e}}).call(this,O(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},O(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/node_modules/gulp-browserify/node_modules/buffer\")},{\"base64-js\":2,buffer:3,ieee754:11,lYpoI2:10}],4:[function(l,d,e){(function(e,t,u,n,r,o,i,a,s){var u=l(\"buffer\").Buffer,f=4,c=new u(f);c.fill(0);d.exports={hash:function(e,t,n,r){return u.isBuffer(e)||(e=new u(e)),function(e,t,n){for(var r=new u(t),o=n?r.writeInt32BE:r.writeInt32LE,i=0;i<e.length;i++)o.call(r,e[i],4*i,!0);return r}(t(function(e,t){var n;e.length%f!=0&&(n=e.length+(f-e.length%f),e=u.concat([e,c],n));for(var r=[],o=t?e.readInt32BE:e.readInt32LE,i=0;i<e.length;i+=f)r.push(o.call(e,i));return r}(e,r),8*e.length),n,r)}}}).call(this,l(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},l(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:10}],5:[function(w,e,b){(function(e,t,a,n,r,o,i,u,s){var a=w(\"buffer\").Buffer,f=w(\"./sha\"),c=w(\"./sha256\"),l=w(\"./rng\"),d={sha1:f,sha256:c,md5:w(\"./md5\")},h=64,p=new a(h);function g(e,r){var o=d[e=e||\"sha1\"],i=[];return o||y(\"algorithm:\",e,\"is not yet supported\"),{update:function(e){return a.isBuffer(e)||(e=new a(e)),i.push(e),e.length,this},digest:function(e){var t=a.concat(i),n=r?function(e,t,n){a.isBuffer(t)||(t=new a(t)),a.isBuffer(n)||(n=new a(n)),t.length>h?t=e(t):t.length<h&&(t=a.concat([t,p],h));for(var r=new a(h),o=new a(h),i=0;i<h;i++)r[i]=54^t[i],o[i]=92^t[i];var u=e(a.concat([r,n]));return e(a.concat([o,u]))}(o,r,t):o(t);return i=null,e?n.toString(e):n}}}function y(){var e=[].slice.call(arguments).join(\" \");throw new Error([e,\"we accept pull requests\",\"http://github.com/dominictarr/crypto-browserify\"].join(\"\\n\"))}p.fill(0),b.createHash=function(e){return g(e)},b.createHmac=g,b.randomBytes=function(e,t){if(!t||!t.call)return new a(l(e));try{t.call(this,void 0,new a(l(e)))}catch(e){t(e)}},function(e,t){for(var n in e)t(e[n],n)}([\"createCredentials\",\"createCipher\",\"createCipheriv\",\"createDecipher\",\"createDecipheriv\",\"createSign\",\"createVerify\",\"createDiffieHellman\",\"pbkdf2\"],function(e){b[e]=function(){y(\"sorry,\",e,\"is not implemented yet\")}})}).call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./md5\":6,\"./rng\":7,\"./sha\":8,\"./sha256\":9,buffer:3,lYpoI2:10}],6:[function(w,b,e){(function(e,t,n,r,o,i,u,a,s){var f=w(\"./helpers\");function c(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;for(var n=1732584193,r=-271733879,o=-1732584194,i=271733878,u=0;u<e.length;u+=16){var a=n,s=r,f=o,c=i,n=d(n,r,o,i,e[u+0],7,-680876936),i=d(i,n,r,o,e[u+1],12,-389564586),o=d(o,i,n,r,e[u+2],17,606105819),r=d(r,o,i,n,e[u+3],22,-1044525330);n=d(n,r,o,i,e[u+4],7,-176418897),i=d(i,n,r,o,e[u+5],12,1200080426),o=d(o,i,n,r,e[u+6],17,-1473231341),r=d(r,o,i,n,e[u+7],22,-45705983),n=d(n,r,o,i,e[u+8],7,1770035416),i=d(i,n,r,o,e[u+9],12,-1958414417),o=d(o,i,n,r,e[u+10],17,-42063),r=d(r,o,i,n,e[u+11],22,-1990404162),n=d(n,r,o,i,e[u+12],7,1804603682),i=d(i,n,r,o,e[u+13],12,-40341101),o=d(o,i,n,r,e[u+14],17,-1502002290),n=h(n,r=d(r,o,i,n,e[u+15],22,1236535329),o,i,e[u+1],5,-165796510),i=h(i,n,r,o,e[u+6],9,-1069501632),o=h(o,i,n,r,e[u+11],14,643717713),r=h(r,o,i,n,e[u+0],20,-373897302),n=h(n,r,o,i,e[u+5],5,-701558691),i=h(i,n,r,o,e[u+10],9,38016083),o=h(o,i,n,r,e[u+15],14,-660478335),r=h(r,o,i,n,e[u+4],20,-405537848),n=h(n,r,o,i,e[u+9],5,568446438),i=h(i,n,r,o,e[u+14],9,-1019803690),o=h(o,i,n,r,e[u+3],14,-187363961),r=h(r,o,i,n,e[u+8],20,1163531501),n=h(n,r,o,i,e[u+13],5,-1444681467),i=h(i,n,r,o,e[u+2],9,-51403784),o=h(o,i,n,r,e[u+7],14,1735328473),n=p(n,r=h(r,o,i,n,e[u+12],20,-1926607734),o,i,e[u+5],4,-378558),i=p(i,n,r,o,e[u+8],11,-2022574463),o=p(o,i,n,r,e[u+11],16,1839030562),r=p(r,o,i,n,e[u+14],23,-35309556),n=p(n,r,o,i,e[u+1],4,-1530992060),i=p(i,n,r,o,e[u+4],11,1272893353),o=p(o,i,n,r,e[u+7],16,-155497632),r=p(r,o,i,n,e[u+10],23,-1094730640),n=p(n,r,o,i,e[u+13],4,681279174),i=p(i,n,r,o,e[u+0],11,-358537222),o=p(o,i,n,r,e[u+3],16,-722521979),r=p(r,o,i,n,e[u+6],23,76029189),n=p(n,r,o,i,e[u+9],4,-640364487),i=p(i,n,r,o,e[u+12],11,-421815835),o=p(o,i,n,r,e[u+15],16,530742520),n=g(n,r=p(r,o,i,n,e[u+2],23,-995338651),o,i,e[u+0],6,-198630844),i=g(i,n,r,o,e[u+7],10,1126891415),o=g(o,i,n,r,e[u+14],15,-1416354905),r=g(r,o,i,n,e[u+5],21,-57434055),n=g(n,r,o,i,e[u+12],6,1700485571),i=g(i,n,r,o,e[u+3],10,-1894986606),o=g(o,i,n,r,e[u+10],15,-1051523),r=g(r,o,i,n,e[u+1],21,-2054922799),n=g(n,r,o,i,e[u+8],6,1873313359),i=g(i,n,r,o,e[u+15],10,-30611744),o=g(o,i,n,r,e[u+6],15,-1560198380),r=g(r,o,i,n,e[u+13],21,1309151649),n=g(n,r,o,i,e[u+4],6,-145523070),i=g(i,n,r,o,e[u+11],10,-1120210379),o=g(o,i,n,r,e[u+2],15,718787259),r=g(r,o,i,n,e[u+9],21,-343485551),n=y(n,a),r=y(r,s),o=y(o,f),i=y(i,c)}return Array(n,r,o,i)}function l(e,t,n,r,o,i){return y((u=y(y(t,e),y(r,i)))<<(a=o)|u>>>32-a,n);var u,a}function d(e,t,n,r,o,i,u){return l(t&n|~t&r,e,t,o,i,u)}function h(e,t,n,r,o,i,u){return l(t&r|n&~r,e,t,o,i,u)}function p(e,t,n,r,o,i,u){return l(t^n^r,e,t,o,i,u)}function g(e,t,n,r,o,i,u){return l(n^(t|~r),e,t,o,i,u)}function y(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}b.exports=function(e){return f.hash(e,c,16)}}).call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],7:[function(e,l,t){(function(e,t,n,r,o,i,u,a,s){var f,c;c=function(e){for(var t,n=new Array(e),r=0;r<e;r++)0==(3&r)&&(t=4294967296*Math.random()),n[r]=t>>>((3&r)<<3)&255;return n},l.exports=f||c}).call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:10}],8:[function(l,d,e){(function(e,t,n,r,o,i,u,a,s){var f=l(\"./helpers\");function c(e,t){e[t>>5]|=128<<24-t%32,e[15+(t+64>>9<<4)]=t;for(var n,r,o,i,u,a=Array(80),s=1732584193,f=-271733879,c=-1732584194,l=271733878,d=-1009589776,h=0;h<e.length;h+=16){for(var p=s,g=f,y=c,w=l,b=d,m=0;m<80;m++){a[m]=m<16?e[h+m]:E(a[m-3]^a[m-8]^a[m-14]^a[m-16],1);var v=_(_(E(s,5),(o=f,i=c,u=l,(r=m)<20?o&i|~o&u:!(r<40)&&r<60?o&i|o&u|i&u:o^i^u)),_(_(d,a[m]),(n=m)<20?1518500249:n<40?1859775393:n<60?-1894007588:-899497514)),d=l,l=c,c=E(f,30),f=s,s=v}s=_(s,p),f=_(f,g),c=_(c,y),l=_(l,w),d=_(d,b)}return Array(s,f,c,l,d)}function _(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function E(e,t){return e<<t|e>>>32-t}d.exports=function(e){return f.hash(e,c,20,!0)}}).call(this,l(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},l(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],9:[function(l,d,e){(function(e,t,n,r,o,i,u,a,s){function B(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function L(e,t){return e>>>t|e<<32-t}function f(e,t){var n,r,o,i,u,a,s,f,c,l,d=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),h=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),p=new Array(64);e[t>>5]|=128<<24-t%32,e[15+(t+64>>9<<4)]=t;for(var g,y,w,b,m,v,_,E,I=0;I<e.length;I+=16){n=h[0],r=h[1],o=h[2],i=h[3],u=h[4],a=h[5],s=h[6],f=h[7];for(var A=0;A<64;A++)p[A]=A<16?e[A+I]:B(B(B((E=p[A-2],L(E,17)^L(E,19)^E>>>10),p[A-7]),(_=p[A-15],L(_,7)^L(_,18)^_>>>3)),p[A-16]),c=B(B(B(B(f,L(v=u,6)^L(v,11)^L(v,25)),(m=u)&a^~m&s),d[A]),p[A]),l=B(L(b=n,2)^L(b,13)^L(b,22),(g=n)&(y=r)^g&(w=o)^y&w),f=s,s=a,a=u,u=B(i,c),i=o,o=r,r=n,n=B(c,l);h[0]=B(n,h[0]),h[1]=B(r,h[1]),h[2]=B(o,h[2]),h[3]=B(i,h[3]),h[4]=B(u,h[4]),h[5]=B(a,h[5]),h[6]=B(s,h[6]),h[7]=B(f,h[7])}return h}var c=l(\"./helpers\");d.exports=function(e){return c.hash(e,f,32,!0)}}).call(this,l(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},l(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:10}],10:[function(e,c,t){(function(e,t,n,r,o,i,u,a,s){function f(){}(e=c.exports={}).nextTick=function(){var e=\"undefined\"!=typeof window&&window.setImmediate,t=\"undefined\"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};if(t){var n=[];return window.addEventListener(\"message\",function(e){var t=e.source;t!==window&&null!==t||\"process-tick\"!==e.data||(e.stopPropagation(),0<n.length&&n.shift()())},!0),function(e){n.push(e),window.postMessage(\"process-tick\",\"*\")}}return function(e){setTimeout(e,0)}}(),e.title=\"browser\",e.browser=!0,e.env={},e.argv=[],e.on=f,e.addListener=f,e.once=f,e.off=f,e.removeListener=f,e.removeAllListeners=f,e.emit=f,e.binding=function(e){throw new Error(\"process.binding is not supported\")},e.cwd=function(){return\"/\"},e.chdir=function(e){throw new Error(\"process.chdir is not supported\")}}).call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/process/browser.js\",\"/node_modules/gulp-browserify/node_modules/process\")},{buffer:3,lYpoI2:10}],11:[function(e,t,f){(function(e,t,n,r,o,i,u,a,s){f.read=function(e,t,n,r,o){var i,u,a=8*o-r-1,s=(1<<a)-1,f=s>>1,c=-7,l=n?o-1:0,d=n?-1:1,h=e[t+l];for(l+=d,i=h&(1<<-c)-1,h>>=-c,c+=a;0<c;i=256*i+e[t+l],l+=d,c-=8);for(u=i&(1<<-c)-1,i>>=-c,c+=r;0<c;u=256*u+e[t+l],l+=d,c-=8);if(0===i)i=1-f;else{if(i===s)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),i-=f}return(h?-1:1)*u*Math.pow(2,i-r)},f.write=function(e,t,n,r,o,i){var u,a,s,f=8*i-o-1,c=(1<<f)-1,l=c>>1,d=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:i-1,p=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,u=c):(u=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-u))<1&&(u--,s*=2),2<=(t+=1<=u+l?d/s:d*Math.pow(2,1-l))*s&&(u++,s/=2),c<=u+l?(a=0,u=c):1<=u+l?(a=(t*s-1)*Math.pow(2,o),u+=l):(a=t*Math.pow(2,l-1)*Math.pow(2,o),u=0));8<=o;e[n+h]=255&a,h+=p,a/=256,o-=8);for(u=u<<o|a,f+=o;0<f;e[n+h]=255&u,h+=p,u/=256,f-=8);e[n+h-p]|=128*g}}).call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/ieee754/index.js\",\"/node_modules/ieee754\")},{buffer:3,lYpoI2:10}]},{},[1])(1)});", "import objectHash from \"object-hash\"\nimport { FIRST, IS, IS_NOT, nil, NO, UIObject, YES } from \"../../uicore-ts\"\nimport {\n    CBSocketMessage,\n    CBSocketMessageCompletionFunction,\n    CBSocketMessageHandlerFunction, CBSocketMessageSendResponseFunction, CBSocketMultipleMessage,\n    CBSocketMultipleMessagecompletionFunction, CBSocketMultipleMessageObject\n} from \"./CBDataInterfaces\"\nimport { CBSocketClient } from \"./CBSocketClient\"\n\n\n\n\n\ninterface CBSocketCallbackHolderMessageDescriptor {\n    \n    key: string;\n    message: {\n        identifier: string;\n        inResponseToIdentifier?: string;\n        keepWaitingForResponses?: boolean;\n    }\n    \n    \n    sentAtTime: number;\n    \n    //completionTriggered: boolean;\n    \n    messageDataHash: string;\n    \n    responseDataHash?: string;\n    \n    mainResponseReceived: boolean;\n    \n    anyMainResponseReceived: boolean;\n    \n    completionPolicy: string;\n    completionFunction: CBSocketMessageCompletionFunction;\n    \n}\n\n\ninterface CBSocketCallbackHolderStoredResponseObject {\n    \n    messageKey: string;\n    messageData: any;\n    messageDataHash: string;\n    \n}\n\n\n\n\nexport class CBSocketCallbackHolder extends UIObject {\n    \n    messageDescriptors: {\n        \n        [x: string]: CBSocketCallbackHolderMessageDescriptor[]\n        \n    } = {}\n    \n    handlers: {\n        [x: string]: CBSocketMessageHandlerFunction[]\n    } = {}\n    \n    onetimeHandlers: {\n        [x: string]: CBSocketMessageHandlerFunction[]\n    } = {}\n    \n    keysForIdentifiers: {\n        \n        [x: string]: string\n        \n    } = {}\n    \n    \n    isValid = YES\n    _storeableResponseKeys: string[]\n    _storedResponseHashesDictionary: {\n        \n        [x: string]: {\n            \n            hash: string,\n            validityDate: number\n            \n        }\n        \n    }\n    _verifiedResponseHashesDictionary: {\n        \n        [x: string]: boolean\n        \n    } = {}\n    \n    _socketClient: CBSocketClient\n    \n    \n    \n    \n    \n    constructor(socketClient: CBSocketClient, previousCallbackHolder?: CBSocketCallbackHolder) {\n        \n        super()\n        \n        \n        this._socketClient = socketClient\n        \n        if (IS(previousCallbackHolder)) {\n            \n            this.handlers = previousCallbackHolder.handlers\n            this._verifiedResponseHashesDictionary = previousCallbackHolder._verifiedResponseHashesDictionary\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    triggerDisconnectHandlers() {\n        \n        this.messageDescriptors.forEach(function (descriptor: CBSocketCallbackHolderMessageDescriptor, key: string) {\n            \n            if (descriptor.mainResponseReceived) {\n                \n                descriptor.completionFunction(CBSocketClient.disconnectionMessage, nil)\n                \n            }\n            \n        })\n        \n    }\n    \n    \n    \n    \n    \n    registerHandler(key: string, handlerFunction: CBSocketMessageHandlerFunction) {\n        \n        \n        if (!this.handlers[key]) {\n            \n            this.handlers[key] = []\n            \n        }\n        \n        this.handlers[key].push(handlerFunction)\n        \n        \n        \n    }\n    \n    registerOnetimeHandler(key: string, handlerFunction: CBSocketMessageHandlerFunction) {\n        \n        \n        if (!this.onetimeHandlers[key]) {\n            \n            this.onetimeHandlers[key] = []\n            \n        }\n        \n        this.onetimeHandlers[key].push(handlerFunction)\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get storedResponseHashesDictionary() {\n        \n        if (IS_NOT(this._storedResponseHashesDictionary)) {\n            \n            this._storedResponseHashesDictionary = JSON.parse(localStorage[\"CBSocketResponseHashesDictionary\"] || \"{}\")\n            \n        }\n        \n        return this._storedResponseHashesDictionary\n        \n    }\n    \n    storedResponseHashObjectForKey(requestKey: string, requestDataHash: string) {\n        \n        const localStorageKey = this.keyForRequestKeyAndRequestDataHash(requestKey, requestDataHash)\n        \n        const hashObject = this.storedResponseHashesDictionary[localStorageKey]\n        \n        const result = FIRST(hashObject, {} as any)\n        \n        \n        \n        return result\n        \n    }\n    \n    storedResponseForKey(requestKey: string, requestDataHash: string) {\n        \n        const localStorageKey = this.keyForRequestKeyAndRequestDataHash(requestKey, requestDataHash)\n        \n        const storedObject = JSON.parse(localStorage[localStorageKey] || \"{}\")\n        \n        return storedObject.responseMessageData\n        \n    }\n    \n    keyForRequestKeyAndRequestDataHash(requestKey: string, requestDataHash: string) {\n        \n        const result = \"_CBSCH_LS_key_\" + requestKey + \"_\" + requestDataHash\n        \n        return result\n        \n    }\n    \n    storeResponse(\n        requestKey: string,\n        requestDataHash: string,\n        responseMessage: CBSocketMessage<any>,\n        responseDataHash: string\n    ) {\n        \n        \n        if (!responseMessage.canBeStoredAsResponse ||\n            (IS_NOT(responseMessage.messageData) && IS_NOT(responseMessage.messageDataHash))) {\n            \n            return\n            \n        }\n        \n        \n        const localStorageKey = this.keyForRequestKeyAndRequestDataHash(requestKey, requestDataHash)\n        \n        \n        var validityDate: number\n        \n        if (responseMessage.responseValidityDuration) {\n            \n            validityDate = Date.now() + responseMessage.responseValidityDuration\n            \n        }\n        \n        const storedResponseHashesDictionary = this.storedResponseHashesDictionary\n        storedResponseHashesDictionary[localStorageKey] = {\n            \n            hash: responseDataHash,\n            validityDate: validityDate\n            \n        }\n        \n        this.saveInLocalStorage(localStorageKey, {\n            \n            responseMessageData: responseMessage.messageData,\n            responseHash: responseDataHash\n            \n        })\n        \n        \n        this.saveStoredResponseHashesDictionary(storedResponseHashesDictionary)\n        \n    }\n    \n    \n    \n    \n    \n    private saveStoredResponseHashesDictionary(storedResponseHashesDictionary: { [x: string]: { hash: string; validityDate: number; }; }) {\n        \n        this.saveInLocalStorage(\"CBSocketResponseHashesDictionary\", storedResponseHashesDictionary)\n        \n    }\n    \n    saveInLocalStorage(key: string, object: any) {\n        \n        \n        const stringToSave = JSON.stringify(object)\n        \n        if (stringToSave != localStorage[key]) {\n            \n            localStorage[key] = stringToSave\n            \n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    socketShouldSendMessage(\n        key: string,\n        message: CBSocketMessage<any>,\n        completionPolicy: string,\n        completionFunction: CBSocketMessageCompletionFunction\n    ) {\n        \n        \n        \n        var result = YES\n        \n        var triggerStoredResponseImmediately = NO\n        \n        \n        const messageDataHash = objectHash(message.messageData || nil)\n        \n        const descriptorKey = \"socketMessageDescriptor_\" + key + messageDataHash\n        \n        this.messageDescriptors[descriptorKey] = (this.messageDescriptors[descriptorKey] || [])\n        \n        \n        const hashObject = this.storedResponseHashObjectForKey(key, messageDataHash)\n        message.storedResponseHash = hashObject.hash\n        \n        \n        \n        if (completionPolicy == CBSocketClient.completionPolicy.first) {\n            \n            const descriptorsForKey = (this.messageDescriptors[descriptorKey] || [])\n            \n            const matchingDescriptor = descriptorsForKey.find(function (descriptor, index, array) {\n                return (descriptor.messageDataHash == messageDataHash)\n            })\n            \n            if (matchingDescriptor) {\n                \n                result = NO\n                \n            }\n            \n        }\n        \n        if (completionPolicy == CBSocketClient.completionPolicy.storedOrFirst) {\n            \n            const descriptorsForKey = (this.messageDescriptors[descriptorKey] || [])\n            \n            const matchingDescriptor = descriptorsForKey.find(function (descriptor, index, array) {\n                return (descriptor.messageDataHash == messageDataHash)\n            })\n            \n            const storedResponse = IS(message.storedResponseHash)\n            \n            if (matchingDescriptor ||\n                (storedResponse && this._verifiedResponseHashesDictionary[message.storedResponseHash])) {\n                \n                result = NO\n                \n                triggerStoredResponseImmediately = YES\n                \n            }\n            \n        }\n        \n        if (completionPolicy == CBSocketClient.completionPolicy.firstOnly) {\n            \n            const descriptorsForKey = (this.messageDescriptors[descriptorKey] || [])\n            \n            const matchingDescriptor = descriptorsForKey.find(function (descriptor, index, array) {\n                return (descriptor.messageDataHash == messageDataHash)\n            })\n            \n            if (matchingDescriptor) {\n                \n                return NO\n                \n            }\n            \n        }\n        \n        \n        if (hashObject && hashObject.hash && hashObject.validityDate && message.storedResponseHash &&\n            this._verifiedResponseHashesDictionary[message.storedResponseHash] && hashObject.validityDate >\n            Date.now()) {\n            \n            result = NO\n            \n            triggerStoredResponseImmediately = YES\n            \n        }\n        \n        \n        if (IS(completionFunction)) {\n            \n            this.messageDescriptors[descriptorKey].push({\n                \n                key: key,\n                message: {\n                    \n                    identifier: message.identifier,\n                    inResponseToIdentifier: message.inResponseToIdentifier,\n                    keepWaitingForResponses: message.keepWaitingForResponses\n                    \n                },\n                \n                sentAtTime: Date.now(),\n                \n                //completionTriggered: NO,\n                \n                \n                messageDataHash: messageDataHash,\n                \n                mainResponseReceived: NO,\n                anyMainResponseReceived: NO,\n                \n                \n                completionPolicy: completionPolicy,\n                completionFunction: completionFunction\n                \n            })\n            \n            this.keysForIdentifiers[message.identifier] = descriptorKey\n            \n        }\n        \n        \n        if (triggerStoredResponseImmediately) {\n            \n            this.socketDidReceiveMessageForKey(\n                CBSocketClient.responseMessageKey,\n                {\n                    \n                    identifier: nil,\n                    messageData: nil,\n                    \n                    inResponseToIdentifier: message.identifier,\n                    \n                    useStoredResponse: YES\n                    \n                },\n                nil\n            )\n            \n        }\n        \n        \n        return result\n        \n        \n    }\n    \n    \n    \n    \n    \n    static defaultMultipleMessagecompletionFunction(responseMessages: any[], callcompletionFunctions: () => void) {\n        callcompletionFunctions()\n    }\n    \n    \n    socketWillSendMultipleMessage(\n        messageToSend: CBSocketMultipleMessage,\n        completionFunction: CBSocketMultipleMessagecompletionFunction = CBSocketCallbackHolder.defaultMultipleMessagecompletionFunction\n    ) {\n        \n        \n        \n        const key = CBSocketClient.multipleMessageKey\n        \n        \n        const messageDataHash = objectHash(messageToSend.messageData || nil)\n        \n        const descriptorKey = \"socketMessageDescriptor_\" + key + messageDataHash\n        \n        this.messageDescriptors[descriptorKey] = (this.messageDescriptors[descriptorKey] || [])\n        \n        \n        messageToSend.storedResponseHash = this.storedResponseHashObjectForKey(key, messageDataHash).hash\n        \n        \n        \n        \n        \n        this.messageDescriptors[descriptorKey].push({\n            \n            key: key,\n            message: {\n                \n                identifier: messageToSend.identifier,\n                inResponseToIdentifier: messageToSend.inResponseToIdentifier,\n                keepWaitingForResponses: messageToSend.keepWaitingForResponses\n                \n            },\n            \n            sentAtTime: Date.now(),\n            \n            //completionTriggered: NO,\n            \n            \n            messageDataHash: messageDataHash,\n            \n            mainResponseReceived: NO,\n            anyMainResponseReceived: NO,\n            \n            \n            completionPolicy: CBSocketClient.completionPolicy.directOnly,\n            completionFunction: function (\n                this: CBSocketCallbackHolder,\n                responseMessage: CBSocketMultipleMessageObject[],\n                respondWithMessage\n            ) {\n                \n                completionFunction(\n                    responseMessage.map(function (messageObject, index, array) {\n                        \n                        return messageObject.message.messageData\n                        \n                    }),\n                    function (this: CBSocketCallbackHolder) {\n                        \n                        //console.log(\"Received multiple message response with length of \" + responseMessage.length + \".\");\n                        \n                        // Call all completion functions\n                        responseMessage.forEach(function (\n                            this: CBSocketCallbackHolder,\n                            messageObject: CBSocketMultipleMessageObject,\n                            index: number,\n                            array: CBSocketMultipleMessageObject[]\n                        ) {\n                            \n                            this._socketClient.didReceiveMessageForKey(messageObject.key, messageObject.message)\n                            \n                        }.bind(this))\n                        \n                    }.bind(this)\n                )\n                \n            }.bind(this)\n            \n        })\n        \n        this.keysForIdentifiers[messageToSend.identifier] = descriptorKey\n        \n        \n    }\n    \n    \n    \n    \n    \n    socketDidReceiveMessageForKey(\n        key: string,\n        message: CBSocketMessage<any>,\n        sendResponseFunction: CBSocketMessageSendResponseFunction\n    ) {\n        \n        \n        if (!this.isValid) {\n            \n            return\n            \n        }\n        \n        \n        // Call static handlers\n        if (this.handlers[key]) {\n            \n            this.handlers[key].forEach(function (\n                this: CBSocketCallbackHolder,\n                handler: CBSocketMessageHandlerFunction,\n                index,\n                array\n            ) {\n                \n                handler(message.messageData, sendResponseFunction)\n                \n            }.bind(this))\n            \n        }\n        \n        if (this.onetimeHandlers[key]) {\n            \n            this.onetimeHandlers[key].forEach(function (\n                this: CBSocketCallbackHolder,\n                handler: CBSocketMessageHandlerFunction,\n                index,\n                array\n            ) {\n                \n                handler(message.messageData, sendResponseFunction)\n                \n            }.bind(this))\n            \n            delete this.onetimeHandlers[key]\n            \n        }\n        \n        \n        \n        // Temporary response handlers are evaluated here\n        if (message.inResponseToIdentifier &&\n            (CBSocketClient.responseMessageKey == key || CBSocketClient.multipleMessageKey == key)) {\n            \n            // Find descriptors for the key of the message that is being responded to\n            const descriptorKey = this.keysForIdentifiers[message.inResponseToIdentifier]\n            const descriptorsForKey = (this.messageDescriptors[descriptorKey] || [])\n            \n            // Find response data hash to check for differences\n            const responseDataHash = message.messageDataHash\n            \n            // Remove identifier from dictionary\n            if (!message.keepWaitingForResponses) {\n                \n                delete this.keysForIdentifiers[message.inResponseToIdentifier]\n                \n                delete this.messageDescriptors[descriptorKey]\n                \n            }\n            \n            \n            // Function to call completion function\n            const callCompletionFunction = (descriptor, storedResponseCondition = NO) => {\n                \n                var messageData = message.messageData\n                \n                if (message.useStoredResponse && storedResponseCondition) {\n                    \n                    messageData = this.storedResponseForKey(descriptor.key, descriptor.messageDataHash)\n                    \n                    const responseHash = this.storedResponseHashObjectForKey(\n                        descriptor.key,\n                        descriptor.messageDataHash\n                    ).hash\n                    \n                    const localStorageKey = this.keyForRequestKeyAndRequestDataHash(\n                        descriptor.key,\n                        descriptor.messageDataHash\n                    )\n                    \n                    if (message.responseValidityDuration && this.storedResponseHashesDictionary[localStorageKey]) {\n                        \n                        this.storedResponseHashesDictionary[localStorageKey].validityDate = Date.now() +\n                            message.responseValidityDuration\n                        \n                        this.saveStoredResponseHashesDictionary(this.storedResponseHashesDictionary)\n                        \n                    }\n                    \n                    this._verifiedResponseHashesDictionary[responseHash] = YES\n                    \n                    console.log(\"Using stored response.\")\n                    \n                }\n                \n                // Call completionFunction and set response data hash\n                descriptor.completionFunction(messageData, sendResponseFunction)\n                descriptor.responseDataHash = responseDataHash\n                \n            }\n            \n            \n            descriptorsForKey.copy().forEach(function (\n                this: CBSocketCallbackHolder,\n                descriptor: CBSocketCallbackHolderMessageDescriptor,\n                index: number,\n                array: CBSocketCallbackHolderMessageDescriptor[]\n            ) {\n                \n                \n                if ((descriptor.completionPolicy == CBSocketClient.completionPolicy.directOnly &&\n                        descriptor.message.identifier == message.inResponseToIdentifier) || descriptor.completionPolicy ==\n                    CBSocketClient.completionPolicy.first || descriptor.completionPolicy ==\n                    CBSocketClient.completionPolicy.firstOnly || descriptor.completionPolicy ==\n                    CBSocketClient.completionPolicy.storedOrFirst) {\n                    \n                    // Calling completion function and removing descriptor\n                    \n                    if (!message.keepWaitingForResponses) {\n                        \n                        this.storeResponse(descriptor.key, descriptor.messageDataHash, message, responseDataHash)\n                        \n                        descriptorsForKey.removeElement(descriptor)\n                        \n                        sendResponseFunction.respondingToMainResponse = YES\n                        \n                    }\n                    \n                    callCompletionFunction(descriptor, !message.keepWaitingForResponses)\n                    \n                }\n                else if (descriptor.completionPolicy == CBSocketClient.completionPolicy.all) {\n                    \n                    // Calling completion function\n                    callCompletionFunction(descriptor, !message.keepWaitingForResponses)\n                    \n                    // Marking descriptor as having been responded to\n                    if (!message.keepWaitingForResponses) {\n                        \n                        if (message.inResponseToIdentifier == descriptor.message.identifier) {\n                            \n                            sendResponseFunction.respondingToMainResponse = YES\n                            descriptor.mainResponseReceived = YES\n                            descriptorsForKey.removeElement(descriptor)\n                            \n                        }\n                        \n                        descriptor.anyMainResponseReceived = YES\n                        \n                    }\n                    \n                    \n                    \n                }\n                else if (descriptor.completionPolicy == CBSocketClient.completionPolicy.allDifferent) {\n                    \n                    // Calling completionFunction if messageData is different from previous\n                    if (descriptor.responseDataHash != responseDataHash) {\n                        \n                        callCompletionFunction(descriptor, !message.keepWaitingForResponses)\n                        \n                    }\n                    \n                    // Marking descriptor as having been responded to\n                    if (!message.keepWaitingForResponses) {\n                        \n                        if (message.inResponseToIdentifier == descriptor.message.identifier) {\n                            \n                            sendResponseFunction.respondingToMainResponse = YES\n                            descriptor.mainResponseReceived = YES\n                            descriptorsForKey.removeElement(descriptor)\n                            \n                        }\n                        \n                        descriptor.anyMainResponseReceived = YES\n                        \n                    }\n                    \n                }\n                else if (descriptor.completionPolicy == CBSocketClient.completionPolicy.last &&\n                    descriptor.message.identifier == message.inResponseToIdentifier) {\n                    \n                    if (!message.keepWaitingForResponses) {\n                        \n                        // Marking descriptor as having been responded to\n                        descriptor.mainResponseReceived = YES\n                        descriptor.anyMainResponseReceived = YES\n                        \n                        sendResponseFunction.respondingToMainResponse = YES\n                        \n                    }\n                    else {\n                        \n                        descriptor.completionFunction(message.messageData, sendResponseFunction)\n                        \n                    }\n                    \n                }\n                else if (descriptor.completionPolicy == CBSocketClient.completionPolicy.firstAndLast ||\n                    descriptor.completionPolicy == CBSocketClient.completionPolicy.firstAndLastIfDifferent) {\n                    \n                    if (!message.keepWaitingForResponses) {\n                        \n                        // Only calling completionFunction once as a first response call\n                        if (!descriptor.anyMainResponseReceived) {\n                            \n                            callCompletionFunction(descriptor, !message.keepWaitingForResponses)\n                            \n                        }\n                        \n                        // Marking descriptor as having been responded to\n                        if (descriptor.message.identifier == message.inResponseToIdentifier) {\n                            \n                            descriptor.mainResponseReceived = YES\n                            sendResponseFunction.respondingToMainResponse = YES\n                            \n                        }\n                        \n                        descriptor.anyMainResponseReceived = YES\n                        \n                    }\n                    else if (descriptor.message.identifier == message.inResponseToIdentifier &&\n                        message.keepWaitingForResponses) {\n                        \n                        descriptor.completionFunction(message.messageData, sendResponseFunction)\n                        \n                    }\n                    \n                }\n                \n            }.bind(this))\n            \n            \n            \n            \n            \n            // Last message completion policies\n            \n            const allResponsesReceived = descriptorsForKey.allMatch(function (descriptorObject, index, array) {\n                return descriptorObject.mainResponseReceived\n            })\n            \n            descriptorsForKey.copy().forEach(function (\n                this: CBSocketCallbackHolder,\n                descriptor: CBSocketCallbackHolderMessageDescriptor,\n                index: number,\n                array: CBSocketCallbackHolderMessageDescriptor[]\n            ) {\n                \n                if ((descriptor.completionPolicy == CBSocketClient.completionPolicy.last ||\n                        descriptor.completionPolicy == CBSocketClient.completionPolicy.firstAndLast) &&\n                    allResponsesReceived && !message.keepWaitingForResponses) {\n                    \n                    // Calling completionFunction\n                    callCompletionFunction(descriptor, !message.keepWaitingForResponses)\n                    \n                    // Cleaning up\n                    descriptorsForKey.removeElement(descriptor)\n                    \n                }\n                else if (descriptor.completionPolicy == CBSocketClient.completionPolicy.firstAndLastIfDifferent &&\n                    allResponsesReceived && !message.keepWaitingForResponses) {\n                    \n                    // Calling completionFunction if needed\n                    if (descriptor.responseDataHash != responseDataHash) {\n                        \n                        callCompletionFunction(descriptor, !message.keepWaitingForResponses)\n                        \n                    }\n                    \n                    // Cleaning up\n                    descriptorsForKey.removeElement(descriptor)\n                    \n                }\n                \n            }.bind(this))\n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { io, Socket } from \"socket.io-client\"\nimport { FIRST_OR_NIL, IF, IS, IS_NIL, IS_NOT, MAKE_ID, nil, NO, RETURNER, UIObject, YES } from \"../../uicore-ts\"\nimport { CBCore } from \"./CBCore\"\nimport {\n    CBSocketHandshakeInitMessage,\n    CBSocketHandshakeResponseMessage,\n    CBSocketMessage,\n    CBSocketMessageCompletionFunction,\n    CBSocketMessageHandlerFunction,\n    CBSocketMessageSendResponseFunction,\n    CBSocketMultipleMessage,\n    CBSocketMultipleMessagecompletionFunction,\n    CBSocketMultipleMessageObject,\n    SocketClientInterface\n} from \"./CBDataInterfaces\"\nimport { CBSocketCallbackHolder } from \"./CBSocketCallbackHolder\"\n\n\ndeclare interface CBSocketClientMessageToBeSent {\n    \n    key: string;\n    message: any;\n    \n    inResponseToMessage: CBSocketMessage<any>;\n    keepWaitingForResponses: boolean;\n    \n    isBoundToUserWithID: string;\n    \n    completionPolicy: string;\n    \n    didSendFunction?: () => void;\n    \n    completion: CBSocketMessageCompletionFunction;\n    \n}\n\n\ndeclare interface CBSocketClientErrorMessage {\n    \n    _isCBSocketErrorMessage: boolean;\n    \n    messageData: any;\n    \n}\n\n\n\n\n\nexport function IS_SOCKET_ERROR(object: any): object is CBSocketClientErrorMessage {\n    \n    const result = (IS(object) && object._isCBSocketErrorMessage)\n    \n    return result\n    \n}\n\nexport function IS_NOT_SOCKET_ERROR(object: any) {\n    \n    return !IS_SOCKET_ERROR(object)\n    \n}\n\n\n\n\n\nexport class CBSocketClient extends UIObject {\n    \n    _socket: Socket = io()\n    _isConnectionEstablished = NO\n    \n    _collectMessagesToSendLater = NO\n    \n    _messagesToBeSent: CBSocketClientMessageToBeSent[] = []\n    \n    static _sharedInstance: CBSocketClient\n    \n    _core: CBCore\n    \n    _subscribedKeys: {\n        [x: string]: boolean\n    } = {}\n    \n    _callbackHolder = new CBSocketCallbackHolder(this)\n    \n    static responseMessageKey = \"CBSocketResponseMessage\"\n    static multipleMessageKey = \"CBSocketMultipleMessage\"\n    \n    \n    static disconnectionMessage: CBSocketClientErrorMessage = {\n        \n        _isCBSocketErrorMessage: YES,\n        \n        messageData: \"Server disconnected\"\n        \n    }\n    \n    \n    constructor(core: CBCore) {\n        \n        super()\n        \n        this._core = core\n        \n        \n        this.socket.on(\"connect\", () => {\n            \n            console.log(\"Socket.io connected to server. clientID = \" + this.socket + \", socketID = \" + this.socket)\n            \n            var instanceIdentifier = localStorage.getItem(\"InstanceIdentifier\")\n            \n            if (IS_NOT(instanceIdentifier)) {\n                \n                instanceIdentifier = MAKE_ID()\n                localStorage.setItem(\"InstanceIdentifier\", instanceIdentifier)\n                \n            }\n            \n            const handshakeMessage: CBSocketHandshakeInitMessage = {\n                \n                accessToken: null,\n                userID: this._core.userProfile._id,\n                \n                inquiryAccessKey: null,\n                \n                instanceIdentifier: instanceIdentifier\n                \n            }\n            \n            this.socket.emit(\"CBSocketHandshakeInitMessage\", {\n                \n                identifier: MAKE_ID(),\n                messageData: handshakeMessage\n                \n            })\n            \n            \n        })\n        \n        \n        this.socket.on(\n            \"CBSocketHandshakeResponseMessage\",\n            (message: CBSocketMessage<CBSocketHandshakeResponseMessage>) => {\n                \n                \n                this._isConnectionEstablished = message.messageData.accepted\n                \n                if (!message.messageData.accepted) {\n                    \n                    console.log(\"SocketIO connection failed.\")\n                    \n                    this._core.dialogViewShowerClass.alert(\n                        \"Failed to establish connection to server.\",\n                        () => {}\n                    )\n                    \n                }\n                else {\n                    \n                    console.log(\"SocketIO connection handshake completed.\")\n                    \n                    this._callbackHolder = new CBSocketCallbackHolder(this, this._callbackHolder)\n                    \n                    core.userProfile = message.messageData.userProfile\n                    \n                    this.sendUnsentMessages()\n                    \n                }\n                \n                \n            }\n        )\n        \n        \n        this.socket.on(\"disconnect\", () => {\n            \n            console.log(\"Socket.io disconnected from server. clientID = \" + this.socket + \".\")\n            \n            this._isConnectionEstablished = NO\n            \n            this._callbackHolder.isValid = NO\n            \n            this._callbackHolder.triggerDisconnectHandlers()\n            \n            \n        })\n        \n        \n        \n        \n        \n        this.socket.on(\"CBPerformReconnect\", (message?: string) => {\n            \n            console.log(\"Performing socket reconnection.\")\n            \n            core.reloadSocketConnection()\n            \n            if (message) {\n    \n                this._core.dialogViewShowerClass.alert(message)\n                \n            }\n            \n            \n            \n        })\n        \n        \n        \n        \n        \n        this._socket.on(\n            CBSocketClient.responseMessageKey,\n            (message: CBSocketMessage<any>) => {\n                \n                this.didReceiveMessageForKey(CBSocketClient.responseMessageKey, message)\n                \n            }\n        )\n        \n        this._socket.on(\n            CBSocketClient.multipleMessageKey,\n            (message: CBSocketMessage<CBSocketMultipleMessageObject[]>) => {\n                \n                console.log(\"Received \" + message.messageData.length + \" messages.\")\n                \n                \n                this.didReceiveMessageForKey(CBSocketClient.multipleMessageKey, message)\n                \n            }\n        )\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get socket() {\n        return this._socket\n    }\n    \n    \n    \n    \n    \n    cancelUnsentMessages(messagesToCancel: CBSocketClientMessageToBeSent[]) {\n        \n        this._messagesToBeSent = this._messagesToBeSent.filter((\n            messageObject: CBSocketClientMessageToBeSent,\n            index: number,\n            array: CBSocketClientMessageToBeSent[]\n        ) => !messagesToCancel.contains(messageObject))\n        \n    }\n    \n    \n    \n    \n    \n    sendUnsentMessages(receiveResponsesTogether = NO, completion?: CBSocketMultipleMessagecompletionFunction) {\n        \n        if (!this._isConnectionEstablished || this._collectMessagesToSendLater) {\n            \n            return\n            \n        }\n        \n        const groupedMessages: CBSocketMultipleMessageObject<any>[] = []\n        const didSendFunctions: (() => void)[] = []\n        \n        \n        this._messagesToBeSent.copy().forEach((messageToBeSentObject: CBSocketClientMessageToBeSent) => {\n            \n            if (this._isConnectionEstablished) {\n                \n                var message = messageToBeSentObject.message\n                if (IS_NOT(message)) {\n                    message = \"\"\n                }\n                \n                const identifier = MAKE_ID()\n                \n                const completion = messageToBeSentObject.completion\n                \n                const messageObject: CBSocketMessage<any> = {\n                    \n                    messageData: message,\n                    identifier: identifier,\n                    keepWaitingForResponses: messageToBeSentObject.keepWaitingForResponses,\n                    inResponseToIdentifier: messageToBeSentObject.inResponseToMessage.identifier\n                    \n                }\n                \n                const shouldSendMessage = this._callbackHolder.socketShouldSendMessage(\n                    messageToBeSentObject.key,\n                    messageObject,\n                    messageToBeSentObject.completionPolicy,\n                    completion\n                )\n                \n                if (shouldSendMessage) {\n                    \n                    \n                    groupedMessages.push({\n                        \n                        key: messageToBeSentObject.key,\n                        message: messageObject\n                        \n                    })\n                    \n                    \n                }\n                \n                didSendFunctions.push(messageToBeSentObject.didSendFunction)\n                \n                \n            }\n            \n        })\n        \n        \n        this._messagesToBeSent = []\n        \n        if (IS_NOT(groupedMessages.length)) {\n            \n            return\n            \n        }\n        \n        if (groupedMessages.length == 1) {\n            \n            console.log(\"sending 1 unsent message.\")\n            \n        }\n        else {\n            \n            console.log(\"Sending \" + groupedMessages.length + \" unsent messages.\")\n            \n        }\n        \n        \n        \n        const messageObject: CBSocketMultipleMessage = {\n            \n            messageData: groupedMessages,\n            identifier: MAKE_ID(),\n            \n            shouldGroupResponses: receiveResponsesTogether\n            \n        }\n        \n        //if (receiveResponsesTogether) {\n        \n        this._callbackHolder.socketWillSendMultipleMessage(messageObject, completion)\n        \n        //}\n        \n        this.socket.emit(CBSocketClient.multipleMessageKey, messageObject)\n        \n        \n        didSendFunctions.forEach((didSendFunction, index, array) => {\n            didSendFunction()\n        })\n        \n    }\n    \n    \n    \n    \n    \n    static completionPolicy = {\n        \n        \"all\": \"all\",\n        \"allDifferent\": \"allDifferent\",\n        \"first\": \"first\",\n        \"last\": \"last\",\n        \"firstAndLast\": \"firstAndLast\",\n        \"firstAndLastIfDifferent\": \"firstAndLastIfDifferent\",\n        \"directOnly\": \"directOnly\",\n        \"firstOnly\": \"firstOnly\",\n        \"storedOrFirst\": \"storedOrFirst\"\n        \n    }\n    \n    \n    sendUserBoundMessageForKeyWithPolicy(\n        key: string,\n        message: any,\n        completionPolicy: string,\n        completion?: CBSocketMessageCompletionFunction\n    ) {\n        \n        \n        this._sendMessageForKey(key, message, undefined, NO, completionPolicy, YES, nil, completion)\n        \n    }\n    \n    sendUserBoundMessageForKey(key: string, message: any, completion?: CBSocketMessageCompletionFunction) {\n        \n        this._sendMessageForKey(key, message, undefined, NO, undefined, YES, nil, completion)\n        \n    }\n    \n    sendMessageForKeyWithPolicy(\n        key: string,\n        message: any,\n        completionPolicy: string,\n        completion?: CBSocketMessageCompletionFunction\n    ) {\n        \n        \n        this._sendMessageForKey(key, message, undefined, NO, completionPolicy, NO, nil, completion)\n        \n    }\n    \n    sendMessageForKey(key: string, message: any, completion?: CBSocketMessageCompletionFunction) {\n        \n        this._sendMessageForKey(key, message, undefined, NO, undefined, NO, nil, completion)\n        \n    }\n    \n    \n    resultForMessageForKey(key: string, message: any, completionPolicy?: string, isUserBound = NO) {\n        \n        const result = new Promise<{\n            \n            responseMessage: any,\n            result: any,\n            errorResult: any,\n            \n            respondWithMessage: CBSocketMessageSendResponseFunction\n            \n        }>((resolve, reject) => {\n            \n            this._sendMessageForKey(\n                key,\n                message,\n                undefined,\n                NO,\n                completionPolicy,\n                isUserBound,\n                nil,\n                (responseMessage, respondWithMessage) => resolve({\n                    \n                    responseMessage: responseMessage,\n                    result: IF(IS_NOT_SOCKET_ERROR(responseMessage))(() => responseMessage).ELSE(RETURNER(undefined)),\n                    errorResult: IF(IS_SOCKET_ERROR(responseMessage))(() => responseMessage).ELSE(RETURNER(undefined)),\n                    \n                    respondWithMessage: respondWithMessage\n                    \n                })\n            )\n            \n        })\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    _sendMessageForKey(\n        key: string,\n        message: any,\n        inResponseToMessage: CBSocketMessage<any> = {} as any,\n        keepMessageConnectionOpen = NO,\n        completionPolicy = CBSocketClient.completionPolicy.directOnly,\n        isUserBound = NO,\n        didSendFunction: () => void = nil,\n        completion: CBSocketMessageCompletionFunction = nil\n    ) {\n        \n        if (IS_NIL(message)) {\n            \n            message = \"\"\n            \n        }\n        \n        if (this._isConnectionEstablished && !this._collectMessagesToSendLater) {\n            \n            const identifier = MAKE_ID()\n            \n            const messageObject: CBSocketMessage<any> = {\n                \n                messageData: message,\n                identifier: identifier,\n                keepWaitingForResponses: keepMessageConnectionOpen,\n                inResponseToIdentifier: inResponseToMessage.identifier\n                \n            }\n            \n            const shouldSendMessage = this._callbackHolder.socketShouldSendMessage(\n                key,\n                messageObject,\n                completionPolicy,\n                completion\n            )\n            \n            if (shouldSendMessage) {\n                \n                this.socket.emit(key, messageObject)\n                \n            }\n            \n            didSendFunction()\n            \n        }\n        else {\n            \n            this._messagesToBeSent.push({\n                \n                key: key,\n                message: message,\n                inResponseToMessage: inResponseToMessage,\n                keepWaitingForResponses: keepMessageConnectionOpen,\n                completionPolicy: completionPolicy,\n                isBoundToUserWithID: IF(isUserBound)(RETURNER(FIRST_OR_NIL(CBCore.sharedInstance.userProfile._id)))(),\n                didSendFunction: didSendFunction,\n                completion: completion\n                \n            })\n            \n            return this._messagesToBeSent.lastElement\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    sendMessagesAsGroup<FunctionReturnType extends object>(functionToCall: () => FunctionReturnType) {\n        \n        const collectMessagesToSendLater = this._collectMessagesToSendLater\n        \n        this._collectMessagesToSendLater = YES\n        \n        var result = functionToCall()\n        \n        this._collectMessagesToSendLater = collectMessagesToSendLater\n        \n        this.sendUnsentMessages()\n        \n        return result\n        \n    }\n    \n    sendAndReceiveMessagesAsGroup<FunctionReturnType extends object>(\n        functionToCall: () => FunctionReturnType,\n        completion?: CBSocketMultipleMessagecompletionFunction\n    ) {\n        \n        const collectMessagesToSendLater = this._collectMessagesToSendLater\n        \n        this._collectMessagesToSendLater = YES\n        \n        var result = functionToCall()\n        \n        this._collectMessagesToSendLater = collectMessagesToSendLater\n        \n        this.sendUnsentMessages(YES, completion)\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveMessageForKey(key: string, message: CBSocketMessage<any>) {\n        \n        \n        const sendResponseFunction: CBSocketMessageSendResponseFunction = function (\n            this: CBSocketClient,\n            responseMessage: any,\n            completion: CBSocketMessageCompletionFunction\n        ) {\n            \n            this._sendMessageForKey(\n                CBSocketClient.responseMessageKey,\n                responseMessage,\n                message,\n                NO,\n                undefined,\n                NO,\n                nil,\n                completion\n            )\n            \n        }.bind(this) as any\n        \n        sendResponseFunction.sendIntermediateResponse = function (\n            this: CBSocketClient,\n            updateMessage: any,\n            completion: CBSocketMessageCompletionFunction\n        ) {\n            \n            this._sendMessageForKey(\n                CBSocketClient.responseMessageKey,\n                updateMessage,\n                message,\n                YES,\n                undefined,\n                NO,\n                nil,\n                completion\n            )\n            \n        }.bind(this)\n        \n        const sendUserBoundResponseFunction: CBSocketMessageSendResponseFunction = function (\n            this: CBSocketClient,\n            responseMessage: any,\n            completion: CBSocketMessageCompletionFunction\n        ) {\n            \n            this._sendMessageForKey(\n                CBSocketClient.responseMessageKey,\n                responseMessage,\n                message,\n                NO,\n                undefined,\n                YES,\n                nil,\n                completion\n            )\n            \n        }.bind(this) as any\n        \n        sendUserBoundResponseFunction.sendIntermediateResponse = function (\n            this: CBSocketClient,\n            updateMessage: any,\n            completion: CBSocketMessageCompletionFunction\n        ) {\n            \n            this._sendMessageForKey(\n                CBSocketClient.responseMessageKey,\n                updateMessage,\n                message,\n                YES,\n                undefined,\n                YES,\n                nil,\n                completion\n            )\n            \n        }.bind(this)\n        \n        if (IS_SOCKET_ERROR(message.messageData)) {\n            \n            console.log(\"CBSocketClient did receive error message.\")\n            \n            console.log(message.messageData)\n            \n            \n            \n        }\n        \n        \n        this._callbackHolder.socketDidReceiveMessageForKey(key, message, sendResponseFunction)\n        \n    }\n    \n    \n    \n    \n    \n    addTargetForMessagesForKeys(keys: string[], handlerFunction: CBSocketMessageHandlerFunction) {\n        keys.forEach(function (this: CBSocketClient, key: string, index: number, array: string[]) {\n            this.addTargetForMessagesForKey(key, handlerFunction)\n        }.bind(this))\n    }\n    \n    \n    \n    \n    \n    addTargetForMessagesForKey(key: string, handlerFunction: CBSocketMessageHandlerFunction) {\n        \n        this._callbackHolder.registerHandler(key, handlerFunction)\n        \n        if (IS_NOT(this._subscribedKeys[key])) {\n            \n            this._socket.on(key, function (this: CBSocketClient, message: CBSocketMessage<any>) {\n                \n                this.didReceiveMessageForKey(key, message)\n                \n            }.bind(this))\n            \n            this._subscribedKeys[key] = true\n            \n        }\n        \n        \n        \n    }\n    \n    addTargetForOneMessageForKey(key: string, handlerFunction: CBSocketMessageHandlerFunction) {\n        \n        this._callbackHolder.registerOnetimeHandler(key, handlerFunction)\n        \n        if (IS_NOT(this._subscribedKeys[key])) {\n            \n            this._socket.on(key, function (this: CBSocketClient, message: CBSocketMessage<any>) {\n                \n                this.didReceiveMessageForKey(key, message)\n                \n            }.bind(this))\n            \n            this._subscribedKeys[key] = true\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\nexport const SocketClient: SocketClientInterface = new Proxy({ \"name\": \"SocketClient\" }, {\n    \n    get(target, key) {\n        \n        const result = (\n            messageData,\n            completionPolicy,\n            isUserBound\n        ) => CBCore.sharedInstance.socketClient.resultForMessageForKey(\n            key as string,\n            messageData,\n            completionPolicy,\n            isUserBound\n        )\n        \n        \n        \n        return result\n        \n    }\n    \n}) as any\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import {\n    FIRST,\n    FIRST_OR_NIL,\n    IS,\n    IS_NOT,\n    nil,\n    UICore,\n    UILink,\n    UIObject,\n    UIRoute,\n    UIViewBroadcastEvent,\n    YES\n} from \"../../uicore-ts\"\nimport { CBLanguageService } from \"./CBLanguageService\"\nimport { CBLocalizedTextObject, CBUserProfile } from \"./CBDataInterfaces\"\nimport { CBServerClient } from \"./CBServerClient\"\nimport { CBSocketClient } from \"./CBSocketClient\"\n\n\ndeclare interface CBDialogViewShower {\n    \n    alert(text: string, dismissCallback?: Function)\n    localizedAlert(textObject: CBLocalizedTextObject, dismissCallback?: Function)\n    \n    showActionIndicatorDialog(message: string, dismissCallback?: Function)\n    hideActionIndicatorDialog()\n    \n}\n\ndeclare const CBCoreInitializerObject: any\n\n\nexport class CBCore extends UIObject {\n    \n    private static _sharedInstance: CBCore\n    \n    viewCores: UICore[] = []\n    \n    _isUserLoggedIn: boolean = nil\n    _cachedMinimizedChatInquiryIDs: string[] = nil\n    _socketClient: CBSocketClient = new CBSocketClient(this)\n    _serverClient: CBServerClient = new CBServerClient(this)\n    \n    _functionsToCallForEachSocketClient: (() => void)[] = []\n    \n    _models: any[] = []\n    \n    dialogViewShowerClass: CBDialogViewShower = nil\n    \n    constructor() {\n        \n        super()\n        \n        if (CBCoreInitializerObject) {\n            \n            CBLanguageService.useStoredLanguageValues(CBCoreInitializerObject.languageValues)\n            \n        }\n        \n        \n        window.addEventListener(\"storage\", function (this: CBCore, event: StorageEvent) {\n            \n            if (event.newValue == event.oldValue) {\n                \n                return\n                \n            }\n            \n            //console.log(\"\" + event.key + \" changed to \" + event.newValue + \" from \" + event.oldValue);\n            \n            \n            \n            if (event.key == \"CBLanguageKey\") {\n                \n                this.didSetLanguageKey()\n                \n            }\n            \n        }.bind(this))\n    \n    \n        //this.checkIfUserIsAuthenticated();\n    \n        this.didSetLanguageKey()\n    \n    \n    }\n    \n    \n    static initIfNeededWithViewCore(viewCore: UICore) {\n        \n        CBCore.sharedInstance.viewCores.push(viewCore);\n        \n    }\n    \n    \n    \n    static get sharedInstance() {\n        if (!CBCore._sharedInstance) {\n            CBCore._sharedInstance = new CBCore()\n        }\n        return CBCore._sharedInstance\n    }\n    \n    \n    \n    \n    \n    static broadcastEventName = {\n        \n        \"userDidLogIn\": \"UserDidLogIn\",\n        \"userDidLogOut\": \"UserDidLogOut\"\n        \n    }\n    \n    broadcastMessageInRootViewTree(message: UIViewBroadcastEvent) {\n    \n        this.viewCores.everyElement.rootViewController.view.broadcastEventInSubtree(message)\n        \n    }\n    \n    \n    \n    \n    \n    get socketClient() {\n        return this._socketClient\n    }\n    \n    get serverClient() {\n        return this._serverClient\n    }\n    \n    \n    \n    \n    \n    set isUserLoggedIn(isUserLoggedIn: boolean) {\n        \n        const previousValue = this.isUserLoggedIn\n        \n        \n        localStorage.setItem(\"CBIsUserLoggedIn\", \"\" + isUserLoggedIn)\n        \n        \n        //this._isUserLoggedIn = isUserLoggedIn;\n        \n        this.didSetIsUserLoggedIn(previousValue)\n        \n    }\n    \n    didSetIsUserLoggedIn(previousValue: boolean) {\n        \n        const isUserLoggedIn = this.isUserLoggedIn\n        \n        if (isUserLoggedIn && previousValue != isUserLoggedIn) {\n            \n            // Send message to views\n            \n            this.broadcastMessageInRootViewTree({\n                \n                name: CBCore.broadcastEventName.userDidLogIn,\n                parameters: nil\n                \n            })\n            \n            this.updateLinkTargets()\n            \n            \n        }\n        else if (previousValue != isUserLoggedIn) {\n            \n            \n            this.performFunctionWithDelay(0.01, function (this: CBCore) {\n                \n                UIRoute.currentRoute.routeByRemovingComponentsOtherThanOnesNamed([\n                    \n                    \"settings\",\n                    \"inquiry\"\n                \n                ]).apply()\n                \n                this.broadcastMessageInRootViewTree({\n                    \n                    name: CBCore.broadcastEventName.userDidLogOut,\n                    parameters: nil\n                    \n                })\n                \n                this.updateLinkTargets()\n                \n                \n            }.bind(this))\n            \n        }\n        \n        \n    }\n    \n    private updateLinkTargets() {\n    \n        this.viewCores.everyElement.rootViewController.view.forEachViewInSubtree(function (view) {\n            if (view instanceof UILink) {\n                view.updateTarget()\n            }\n        })\n    \n    }\n    \n    get isUserLoggedIn() {\n        \n        const result = (localStorage.getItem(\"CBIsUserLoggedIn\") == \"true\")\n        \n        return result\n        \n    }\n    \n    \n    \n    get userProfile() {\n        \n        var result = nil\n        \n        \n        try {\n            result = JSON.parse(localStorage.getItem(\"CBUserProfile\"))\n        } catch (error) {\n            \n        }\n        \n        // if (IS_NOT(result)) {\n        \n        //     // Get userID from inquiryAccessKey if possible\n        //     var inquiryKey = this.inquiryAccessKey;\n        \n        //     if (IS(inquiryKey)) {\n        \n        //         result = FIRST_OR_NIL(this.inquiriesModel.inquiriesByCurrentUser.firstElement).inquirer\n        \n        //     }\n        \n        // }\n        \n        return FIRST_OR_NIL(result)\n        \n    }\n    \n    set userProfile(userProfile: CBUserProfile) {\n        \n        if (IS_NOT(userProfile)) {\n            \n            localStorage.removeItem(\"CBUserProfile\")\n            \n        }\n        \n        localStorage.setItem(\"CBUserProfile\", JSON.stringify(userProfile))\n        \n        this.didSetUserProfile()\n        \n    }\n    \n    didSetUserProfile() {\n        \n        this.isUserLoggedIn = IS(this.userProfile)\n        \n    }\n    \n    \n    set languageKey(languageKey: string) {\n        \n        if (IS_NOT(languageKey)) {\n            \n            localStorage.removeItem(\"CBLanguageKey\")\n            \n        }\n        \n        localStorage.setItem(\"CBLanguageKey\", JSON.stringify(languageKey))\n        \n        this.didSetLanguageKey()\n        \n    }\n    \n    get languageKey() {\n        \n        const result = FIRST(localStorage.getItem(\"CBLanguageKey\"), CBLanguageService.defaultLanguageKey).replace(\n            \"\\\"\",\n            \"\"\n        ).replace(\"\\\"\", \"\")\n        \n        \n        return result\n        \n    }\n    \n    didSetLanguageKey() {\n        \n        UIRoute.currentRoute.routeWithComponent(\n            \"settings\",\n            { \"language\": this.languageKey },\n            YES\n        ).applyByReplacingCurrentRouteInHistory()\n        \n    }\n    \n    \n    get externalServiceIdentifier(): { accessKey: string; serviceID: string; organizationID: string } {\n        \n        const result = JSON.parse(localStorage.getItem(\"CBExternalServiceIdentifier\"))\n        \n        return result\n        \n    }\n    \n    set externalServiceIdentifier(externalServiceIdentifier: { accessKey: string; serviceID: string; organizationID: string }) {\n        \n        localStorage.setItem(\"CBExternalServiceIdentifier\", JSON.stringify(externalServiceIdentifier))\n        \n    }\n    \n    \n    reloadSocketConnection() {\n        \n        // @ts-ignore\n        this.socketClient.socket.disconnect()\n        \n        const messagesToBeSent = this.socketClient._messagesToBeSent.filter(function (messageItem, index, array) {\n            \n            return (!messageItem.isBoundToUserWithID || messageItem.isBoundToUserWithID ==\n                CBCore.sharedInstance.userProfile._id)\n            \n        })\n        \n        this._socketClient = new CBSocketClient(this)\n        this._socketClient._messagesToBeSent = messagesToBeSent\n        \n        const socketClient = this._socketClient\n        \n        this._models.forEach(function (model, index, array) {\n            \n            model.setSocketClient(socketClient)\n            \n        })\n        \n        this._functionsToCallForEachSocketClient.forEach(function (functionToCall, index, array) {\n            \n            functionToCall()\n            \n        })\n        \n        \n        \n    }\n    \n    \n    callFunctionForEachSocketClient(functionToCall: () => void) {\n        this._functionsToCallForEachSocketClient.push(functionToCall)\n        functionToCall()\n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\nexport type CBReferenceID = string;\n\n\nexport interface CBLanguageItem {\n    \n    value: string;\n    languageKey: string;\n    itemKey: string;\n    \n}\n\n\nexport interface LanguagesData {\n    [key: string]: {\n        [key: string]: string;\n    };\n}\n\n\n\n\n\nexport interface CBFinancialAmount {\n    \n    amount: number;\n    currency: string;\n    \n}\n\n\nexport interface CBLocalizedTextObject {\n    \n    [key: string]: string\n    \n}\n\n\nexport interface CBDropdownData<T> {\n    \n    _id: CBReferenceID;\n    name?: CBLocalizedTextObject;\n    dropdownCode: string;\n    data: CBDropdownDataItem<T>[];\n    \n}\n\n\nexport interface CBDropdownDataItem<T> {\n    \n    _id: CBReferenceID;\n    title: CBLocalizedTextObject;\n    rowsData?: CBDropdownDataItem<T>[]\n    isADropdownDataSection: boolean;\n    isADropdownDataRow: boolean;\n    \n    attachedObject: T\n    \n    itemCode: string;\n    dropdownCode: string;\n    \n}\n\n\n\n\n\n\n\nexport interface CBFileAccessor {\n    \n    fileData: CBFileData;\n    createdAt: number;\n    \n}\n\n\nexport interface CBFileData {\n    \n    _id: string;\n    \n    name: string;\n    dataURL: string;\n    type: string;\n    isLimitedAccess?: boolean;\n    accessibleToUsers?: CBUserProfilePublic[];\n    \n}\n\nexport enum CBAuthenticationSource {\n    \n    google = 10,\n    facebook = 11,\n    emailAccessLink = 200,\n    password = 220,\n    inquiryAccessLink = 500\n    \n}\n\n// AsdAsd\n\nexport interface CBCoreInitializer {\n    \n    languageValues: LanguagesData;\n    defaultLanguageKey: string;\n    \n}\n\nexport interface CBLoginKey {\n    \n    key: string;\n    \n    accessToken: string;\n    \n    storeAccessTokenInClient: boolean;\n    \n    authenticationSource: CBAuthenticationSource;\n    \n    userID: CBReferenceID;\n    \n    isValid: boolean;\n    \n    loginDate?: Date;\n    logoutDate?: Date;\n    \n    createdAt: Date;\n    updatedAt: Date;\n    \n}\n\nexport interface CBUserPassword {\n    \n    passwordHash: string;\n    \n    userID: CBReferenceID;\n    \n    isValid: boolean;\n    \n    createdAt: Date;\n    updatedAt: Date;\n    \n}\n\nexport interface CBAdministratorRightsDescriptor {\n    \n    userProfile: CBUserProfile;\n    \n}\n\nexport interface CBSubscription {\n    \n    _id: CBReferenceID;\n    startDate: Date;\n    endDate?: Date;\n    \n    isIndefinite: boolean;\n    \n    subscriptionKind: number;// alternatiiv oleks string/objectId, mis viitaks t\u00FC\u00FCbi objektile eraldi tabelis\n    createdAt: Date;\n    updatedAt: Date;\n    \n}\n\n//Asdasd\n\nexport type CBUserProfilePublic = any;\nexport type CBUserProfile = any;\n\n\nexport interface SocketClientInterface {\n    \n    [x: string]: SocketClientFunction<any, any>;\n    \n    \n    \n}\n\n\nexport interface SocketClientResult<ResultType> {\n    \n    responseMessage: any;\n    result: ResultType;\n    errorResult: any;\n    respondWithMessage: CBSocketMessageSendResponseFunction;\n    \n}\n\n\nexport type SocketClientFunction<MessageType, ResultType> = (\n    messageData: MessageType,\n    completionPolicy?: string,\n    isUserBound?: boolean\n) => Promise<SocketClientResult<ResultType>>;\n\nexport type SocketClientNoMessageFunction<ResultType> = (\n    messageData?: null,\n    completionPolicy?: string,\n    isUserBound?: boolean\n) => Promise<SocketClientResult<ResultType>>;\n\n\n\n\n\nexport interface CBSocketMultipleMessageObject<MessageDataType = any> {\n    \n    key: string;\n    message: CBSocketMessage<MessageDataType>;\n    \n}\n\n\n// CBSocket communication messages\nexport interface CBSocketMessage<MessageDataType = any> {\n    \n    identifier: string;\n    inResponseToIdentifier?: string;\n    keepWaitingForResponses?: boolean;\n    \n    messageData: MessageDataType;\n    \n    // This is sent from client to server with requests\n    storedResponseHash?: string;\n    \n    // This is always present on messages sent from the server side\n    messageDataHash?: string;\n    \n    // This tells the client to store this message for future use\n    canBeStoredAsResponse?: boolean;\n    \n    // This tells the client to use the previously stored response\n    useStoredResponse?: boolean;\n    \n    // This tells the client that the response is valid for at least this long in ms\n    responseValidityDuration?: number;\n    \n}\n\n\nexport interface CBSocketMultipleMessage extends CBSocketMessage<CBSocketMultipleMessageObject[]> {\n    \n    shouldGroupResponses: boolean;\n    \n}\n\n\nexport type CBSocketMessageSendResponseFunctionBase<ResponseMessageType> = (\n    responseMessage: ResponseMessageType,\n    completion?: CBSocketMessageCompletionFunction\n) => Promise<string>;\n\nexport type CBSocketMessageCompletionFunction = (\n    responseMessage: any,\n    respondWithMessage: CBSocketMessageSendResponseFunction\n) => void;\nexport type CBSocketMessageHandlerFunction<ResponseMessageType = any> = (\n    message: any,\n    respondWithMessage: CBSocketMessageSendResponseFunction<ResponseMessageType>\n) => void;\n\nexport type CBSocketMultipleMessagecompletionFunction = (\n    responseMessages: any[],\n    callcompletionFunctions: () => void\n) => void;\n\n\nexport interface CBSocketMessageSendResponseFunction<ResponseMessageType = any> extends CBSocketMessageSendResponseFunctionBase<ResponseMessageType> {\n    respondingToMainResponse: boolean;\n    \n    excludeMessageFromAutomaticConnectionEvents: () => void;\n    \n    setResponseValidityDuration(duration: number);\n    \n    useStoredResponseWithErrorResponse();\n    \n    sendErrorResponse(message?: any, completion?: CBSocketMessageCompletionFunction);\n    \n    sendIntermediateResponse(updateMessage: any, completion?: CBSocketMessageCompletionFunction);\n    \n    // This tells the client to use the stored response if responseHash matches and also enables storing of responses\n    // in the client in the first place. Returns true if the hash matched.\n    confirmStoredResponseHash(responseHash: string, completion?: CBSocketMessageCompletionFunction): boolean;\n    \n}\n\n\n\n// Socket handshake messages\nexport interface CBSocketHandshakeInitMessage {\n    \n    accessToken?: string;\n    userID: CBReferenceID;\n    \n    loginKey?: string;\n    inquiryAccessKey?: string;\n    \n    instanceIdentifier: string;\n    \n}\n\n\nexport interface CBSocketHandshakeResponseMessage {\n    \n    accepted: boolean;\n    \n    userProfile?: CBUserProfile;\n    \n}\n\n\n\n\n\nexport type TypeWithoutKey<Type, Key> = Pick<Type, Exclude<keyof Type, Key>>;\n\nexport type TypeWithoutID<Type> = TypeWithoutKey<Type, \"_id\">;\n\nexport type Diff<T extends keyof any, U extends keyof any> =\n    ({ [P in T]: P } & { [P in U]: never } & { [x: string]: never })[T];\n\nexport type Overwrite<T, U> = Pick<T, Diff<keyof T, keyof U>> & U;\n\nexport type RecursivePartial<T> = {\n    [P in keyof T]?:\n    T[P] extends (infer U)[] ? RecursivePartial<U>[] :\n        T[P] extends object ? RecursivePartial<T[P]> :\n            T[P];\n};\n\n\n\n\n\n\n", "\nexport * from \"./CBCore\"\nexport * from \"./CBServerClient\"\nexport * from \"./CBSocketClient\"\nexport * from \"./CBSocketCallbackHolder\"\nexport * from \"./CBLanguageService\"\nexport * from \"./CBDataInterfaces\"\n\n\n\n\n\n\n\n\n\n\n\n", "import {\n    IS,\n    nil,\n    UICore,\n    UIRootViewController,\n    UIRoute,\n    UITextView,\n    UIView,\n    UIViewBroadcastEvent,\n    UIViewController,\n    YES\n} from \"uicore-ts\"\nimport { CBCore, SocketClient } from \"cbcore-ts\"\nimport { BottomBarView } from \"./BottomBarView\"\nimport { CBColor } from \"./Custom components/CBColor\"\nimport { InformationViewController } from \"./InformationViewController\"\nimport { InternalDropdownSettingsViewController } from \"./InternalDropdownSettingsViewController\"\nimport { InternalLanguageSettingsViewController } from \"./InternalLanguageSettingsViewController\"\nimport { LanguagesDialogView } from \"./LanguagesDialogView\"\nimport { LanguageService } from \"./LanguageService\"\nimport { SomeContentViewController } from \"./SomeContentViewController\"\nimport { TopBarView } from \"./TopBarView\"\n\n\nexport class RootViewController extends UIRootViewController {\n    \n    readonly bottomBarView: BottomBarView\n    readonly topBarView: TopBarView\n    \n    readonly languagesDialogViewController = new UIViewController(new LanguagesDialogView(\"LanguagesDialogView\"))\n    \n    contentViewControllers = {\n        \n        informationViewController: this.lazyViewControllerObjectWithClass(InformationViewController),\n        internalDropdownSettingsViewController: this.lazyViewControllerObjectWithClass(\n            InternalDropdownSettingsViewController,\n            async () =>\n                IS((await SocketClient.AreCBInternalSettingsAvailableForCurrentUser()).result) || YES\n        ),\n        internalLanguageSettingsViewController: this.lazyViewControllerObjectWithClass(\n            InternalLanguageSettingsViewController,\n            async () =>\n                IS((await SocketClient.AreCBInternalSettingsAvailableForCurrentUser()).result) || YES\n        ),\n        mainViewController: this.lazyViewControllerObjectWithClass(SomeContentViewController)\n        \n    }\n    \n    \n    constructor(view) {\n        \n        // Calling super\n        super(view)\n        \n        // Instance variables, initialize to nil or empty function, do not leave undefined to avoid excessive if blocks\n        // this._firstView = nil;\n        // this._secondView = nil;\n        // this._testView = nil;\n        // this._button = nil;\n        \n        // The nil object avoids unnecessary crashes by allowing you to call any function or access any variable on it, returning nil\n        // Define properties with get and set functions, so they can be accessed and set like variables\n        // Name variables that should be private, like property variables, with a _ sign, this also holds for private functions\n        // Avoid accessing variables and functions named with _ from outside as this creates strong coupling and hinders stability\n        \n        // Code for further setup if necessary\n        \n        UITextView.defaultTextColor = CBColor.primaryContentColor\n        \n        // Top bar\n        this.topBarView = new TopBarView(\"TopBarView\", nil)\n        this.topBarView.titleLabel.setText(\"topBarTitle\", \"UICore application\")\n        this.view.addSubview(this.topBarView)\n        \n        // Bottom bar\n        this.bottomBarView = new BottomBarView(\"BottomBarView\").configuredWithObject({\n            style: { overflow: \"hidden\" }\n        })\n        this.view.addSubview(this.bottomBarView)\n        \n        // Initializing CBCore if needed\n        CBCore.initIfNeededWithViewCore(this.view.core)\n        \n    }\n    \n    async viewDidAppear() {\n        \n        await super.viewDidAppear()\n        \n        this.topBarView.setNeedsLayout()\n        \n    }\n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        await super.handleRoute(route)\n        \n        LanguageService.updateCurrentLanguageKey(route)\n        \n        const currentURL = \"\" + window.location\n        if (IS(currentURL)) {\n            SocketClient.RouteDidChange(currentURL).then(nil)\n        }\n        \n    }\n    \n    \n    viewDidReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.viewDidReceiveBroadcastEvent(event)\n        \n        if ([CBCore.broadcastEventName.userDidLogIn, CBCore.broadcastEventName.userDidLogOut].contains(event.name)) {\n            \n            this.handleRoute(UIRoute.currentRoute).then(nil)\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged) {\n            \n            this.detailsViewController = nil\n            this._detailsDialogView.dismiss()\n            this._triggerLayoutViewSubviews()\n            \n        }\n        \n    }\n    \n    \n    updateViewStyles() {\n    \n    }\n    \n    viewDidLayoutSubviews() {\n        \n        super.viewDidLayoutSubviews()\n        \n    }\n    \n    \n    layoutViewSubviews() {\n        \n        super.layoutViewSubviews()\n        \n        this.updatePageScale()\n        \n        const contentViewMaxWidth = 1000\n        const topBarHeight = 65\n        const bottomBarMinHeight = 100\n        this.performDefaultLayout(\n            this.core.paddingLength,\n            contentViewMaxWidth,\n            topBarHeight,\n            bottomBarMinHeight\n        )\n        \n    }\n    \n}\n\n\n\n\n\n", "import { UIColor, UIView } from \"uicore-ts\"\n\n\n\n\n\nexport class BottomBarView extends UIView {\n    \n    //label: UITextView;\n    \n    constructor(elementID: string) {\n        \n        super(elementID)\n        \n    }\n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        this.backgroundColor = UIColor.colorWithRGBA(50, 50, 50)\n        \n        this.setInnerHTML(\"bottomBarContent\", \"bottomBarContent\")\n        \n        \n        \n        \n        \n        // this.label = new UITextView(\"BottomBarLabel\");\n        // this.label.setText(\"bottomBarLabelText\",\"Bottom bar for contact information and such\");\n        // this.label.textColor = UIColor.whiteColor;\n        // this.label.textAlignment = UITextView.textAlignment.center;\n        \n        // this.addSubview(this.label);\n        \n    }\n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        //this.label.centerInContainer();\n        \n    }\n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor } from \"uicore-ts\"\n\n\n\n\n\nexport class CBColor extends UIColor {\n    \n    \n    \n    \n    \n    constructor(stringValue: string) {\n        \n        super(stringValue)\n        \n    }\n    \n    \n    \n    \n    \n    static get primaryTintColor() {\n        \n        return new CBColor(\"rgba(52, 127, 230, 1)\")\n        \n    }\n    \n    static get secondaryTintColor() {\n        \n        return new CBColor(\"rgba(0, 196, 212, 1)\")\n        \n    }\n    \n    \n    static get primaryContentColor() {\n        \n        return new CBColor(\"rgb(35, 35, 35)\")\n        \n    }\n    \n    static get greenTintColor() {\n        \n        return new CBColor(\"rgba(51, 188, 125, 1)\");\n        \n    }\n    \n    static get redTintColor() {\n        \n        return new CBColor(\"rgba(236, 88, 111, 1)\");\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor, UIRoute, UIViewController } from \"uicore-ts\"\nimport { CBCore } from \"cbcore-ts\"\n\n\nexport class InformationViewController extends UIViewController {\n    \n    \n    constructor(view) {\n        \n        super(view)\n        \n        // Code for further setup if necessary\n    \n        this.view.backgroundColor = UIColor.whiteColor\n        \n    }\n    \n    \n    static readonly routeComponentName = \"information\"\n    \n    static readonly ParameterIdentifierName = {\n        \n        \"key\": \"key\"\n        \n    }\n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        \n        CBCore.sharedInstance.didSetLanguageKey()\n    \n        const inquiryComponent = route.componentWithName(InformationViewController.routeComponentName)\n    \n        const key = inquiryComponent.parameters[InformationViewController.ParameterIdentifierName.key]\n    \n        this.view.setInnerHTML(key, \"Failed to load data for key\")\n        \n        this.view.setNeedsLayoutUpToRootView()\n        \n        // @ts-ignore\n        const imgLoad = imagesLoaded(this.view.viewHTMLElement)\n    \n        const imagesDidLoad = function (this: InformationViewController, instance) {\n            \n            console.log(\"ALWAYS - all images have been loaded\")\n            this.view.setNeedsLayoutUpToRootView()\n            \n            imgLoad.off(\"always\", imagesDidLoad)\n            \n            \n        }.bind(this)\n        \n        imgLoad.on(\"always\", imagesDidLoad)\n        \n    }\n    \n    \n    \n    updateViewConstraints() {\n        \n        super.updateViewConstraints()\n        \n    }\n    \n    \n    \n    updateViewStyles() {\n        \n        super.updateViewStyles()\n        \n    }\n    \n    \n    \n    viewDidLayoutSubviews() {\n        \n        super.viewDidLayoutSubviews()\n        \n    }\n    \n    \n    \n    layoutViewSubviews() {\n        \n        super.layoutViewSubviews()\n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding\n    \n        // View bounds\n        const bounds = this.view.bounds.rectangleWithInset(padding)\n    \n    \n    \n    \n    \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import {\n    FIRST,\n    IS,\n    IS_DEFINED,\n    IS_NOT,\n    MAKE_ID,\n    nil,\n    NO,\n    UIButton,\n    UIColor,\n    UIRoute,\n    UITableView,\n    UITextArea,\n    UITextView,\n    UIView,\n    UIViewController,\n    YES\n} from \"uicore-ts\"\nimport { CBColor } from \"./Custom components/CBColor\"\nimport { CBCore } from \"cbcore-ts\"\nimport { CBDropdownData, CBDropdownDataItem } from \"../../../cbcore-ts/scripts/CBDataInterfaces\"\nimport { SocketClient } from \"cbcore-ts\"\nimport { CBButton } from \"./Custom components/CBButton\"\nimport { CBCheckbox } from \"./Custom components/CBCheckbox\"\nimport { CBDialogViewShower } from \"./Custom components/CBDialogViewShower\"\nimport { CBTextField } from \"./Custom components/CBTextField\"\nimport { LanguageService } from \"cbcore-ts\"\nimport { SearchableDropdown } from \"./Custom components/SearchableDropdown\"\n\n\n\n\n\nexport class InternalDropdownSettingsViewController extends UIViewController {\n    \n    \n    titleLabel: UITextView\n    loadButton: UIButton\n    dropdownCodeTextField: CBTextField\n    tableView: UITableView\n    textArea: UITextArea\n    dropdown: SearchableDropdown<undefined>\n    saveButton: CBButton\n    deleteButton: CBButton\n    addButton: CBButton\n    itemTitleOrAttachedObjectTextArea: UITextArea\n    isASectionCheckbox: CBCheckbox\n    downButton: CBButton\n    upButton: CBButton\n    itemTitleJSONLabel: UITextView\n    dropdownCodesTextArea: UITextArea\n    deleteDropdownButton: CBButton\n    \n    itemCodeTextField: CBTextField\n    clearDropdownButton: CBButton\n    dataTextArea: UITextArea\n    dataTextJSONLabel: UITextView\n    loadPlainDataButton: CBButton\n    loadJSONDataButton: CBButton\n    itemTitleCheckbox: CBCheckbox\n    itemAttachedObjectCheckbox: CBCheckbox\n    \n    \n    constructor(view) {\n        \n        super(view)\n        \n        // Code for further setup if necessary\n        \n        this.loadSubviews()\n        \n    }\n    \n    \n    static readonly routeComponentName = \"internal_dropdown_settings\"\n    \n    static readonly ParameterIdentifierName = {}\n    \n    \n    loadSubviews() {\n        \n        \n        this.view.backgroundColor = UIColor.whiteColor\n        \n        \n        this.titleLabel = new UITextView(this.view.elementID + \"TitleLabel\", UITextView.type.header2)\n        this.titleLabel.text = \"Internal dropdown settings\"\n        this.view.addSubview(this.titleLabel)\n        \n        \n        \n        this.dropdownCodeTextField = new CBTextField(this.view.elementID + \"DropdownCodeTextField\")\n        this.dropdownCodeTextField.placeholderText = \"Dropdown code\"\n        this.view.addSubview(this.dropdownCodeTextField)\n        \n        this.dropdownCodesTextArea = new UITextArea(this.view.elementID + \"DropdownCodesTextArea\")\n        this.dropdownCodesTextArea.placeholderText = \"Available dropdown codes\"\n        this.view.addSubview(this.dropdownCodesTextArea)\n        \n        \n        this.loadButton = new CBButton(this.view.elementID + \"LoadButton\")\n        this.loadButton.titleLabel.text = \"Load\"\n        this.view.addSubview(this.loadButton)\n        \n        this.saveButton = new CBButton(this.view.elementID + \"SaveButton\")\n        this.saveButton.titleLabel.setText(\"internalDropdownSettingsViewControllerSaveButton\", \"Save\")\n        this.view.addSubview(this.saveButton)\n        \n        \n        // this.textArea = new UITextArea(this.view.elementID + \"TextArea\")\n        // this.view.addSubview(this.textArea)\n        \n        \n        this.dropdown = new SearchableDropdown(this.view.elementID + \"SearchableDropdown\")\n        this.dropdown._controlEventTargets[UIView.controlEvent.PointerUpInside] = []\n        this.dropdown._controlEventTargets[UIView.controlEvent.EnterDown] = []\n        this.dropdown._dialogView = nil\n        this.dropdown.isSingleSelection = YES\n        this.dropdown._rightImageView.imageSource = nil\n        this.dropdown.keepFocusedRowVisible = NO\n        this.view.addSubview(this.dropdown)\n        \n        this.dropdown._tableView.style.borderWidth = \"1px\"\n        this.dropdown._tableView.style.borderStyle = \"solid\"\n        this.dropdown._tableView.style.borderColor = CBColor.primaryContentColor.stringValue\n        this.view.addSubview(this.dropdown._tableView)\n        \n        \n        this.addButton = new CBButton(this.view.elementID + \"AddButton\")\n        this.addButton.titleLabel.text = \"Add row\"\n        this.addButton.setBackgroundColorsWithNormalColor(UIColor.greenColor)\n        this.view.addSubview(this.addButton)\n        \n        this.deleteButton = new CBButton(this.view.elementID + \"DeleteButton\")\n        this.deleteButton.titleLabel.text = \"Delete row\"\n        this.deleteButton.setBackgroundColorsWithNormalColor(UIColor.redColor)\n        this.view.addSubview(this.deleteButton)\n        \n        \n        this.deleteDropdownButton = new CBButton(this.view.elementID + \"DeleteDropdownButton\")\n        this.deleteDropdownButton.titleLabel.text = \"Delete dropdown\"\n        this.deleteDropdownButton.setBackgroundColorsWithNormalColor(UIColor.redColor)\n        this.view.addSubview(this.deleteDropdownButton)\n        \n        this.clearDropdownButton = new CBButton(this.view.elementID + \"ClearDropdownButton\")\n        this.clearDropdownButton.titleLabel.text = \"Clear dropdown\"\n        this.clearDropdownButton.setBackgroundColorsWithNormalColor(UIColor.redColor)\n        this.view.addSubview(this.clearDropdownButton)\n        \n        \n        \n        // Selecting of purpose of itemtitleTextArea\n        this.itemTitleCheckbox = new CBCheckbox(this.view.elementID + \"ItemTitleCheckbox\")\n        this.itemAttachedObjectCheckbox = new CBCheckbox(this.view.elementID + \"ItemTitleCheckbox\")\n        \n        this.itemTitleCheckbox.titleLabel.text = \"Item title\"\n        this.itemAttachedObjectCheckbox.titleLabel.text = \"Attached object\"\n        \n        this.itemTitleCheckbox.selected = YES\n        \n        this.view.addSubviews([this.itemTitleCheckbox, this.itemAttachedObjectCheckbox])\n        \n        \n        \n        this.itemTitleOrAttachedObjectTextArea = new UITextArea(this.view.elementID +\n            \"ItemTitleOrAttachedObjectTextArea\")\n        this.itemTitleOrAttachedObjectTextArea.placeholderText = \"Title\"\n        this.view.addSubview(this.itemTitleOrAttachedObjectTextArea)\n        \n        this.itemTitleJSONLabel = new UITextView(this.view.elementID + \"ItemTitleJSONLabel\")\n        this.view.addSubview(this.itemTitleJSONLabel)\n        \n        this.itemTitleDidChange()\n        \n        \n        this.isASectionCheckbox = new CBCheckbox(this.view.elementID + \"IsASectionCheckbox\")\n        this.isASectionCheckbox.titleLabel.text = \"Is a section\"\n        this.view.addSubview(this.isASectionCheckbox)\n        \n        \n        \n        this.itemCodeTextField = new CBTextField(this.view.elementID + \"ItemCodeTextField\")\n        this.itemCodeTextField.placeholderText = \"Item code\"\n        this.view.addSubview(this.itemCodeTextField)\n        \n        \n        \n        this.downButton = new CBButton(this.view.elementID + \"DownButton\")\n        this.downButton.titleLabel.text = \"Down\"\n        this.view.addSubview(this.downButton)\n        \n        this.upButton = new CBButton(this.view.elementID + \"UpButton\")\n        this.upButton.titleLabel.text = \"Up\"\n        this.view.addSubview(this.upButton)\n        \n        \n        \n        this.dataTextJSONLabel = new UITextView(this.view.elementID + \"DataTextJSONLabel\")\n        this.dataTextJSONLabel.text = \"Data in JSON format\"\n        this.view.addSubview(this.dataTextJSONLabel)\n        \n        this.dataTextArea = new UITextArea(this.view.elementID + \"DataTextArea\")\n        this.dataTextArea.placeholderText = \"Data in JSON format\"\n        this.view.addSubview(this.dataTextArea)\n        \n        this.loadPlainDataButton = new CBButton(this.view.elementID + \"LoadPlainDataButton\")\n        this.loadPlainDataButton.titleLabel.text = \"Load plain data\"\n        this.view.addSubview(this.loadPlainDataButton)\n        \n        this.loadJSONDataButton = new CBButton(this.view.elementID + \"LoadJSONDataButton\")\n        this.loadJSONDataButton.titleLabel.text = \"Load JSON data\"\n        this.view.addSubview(this.loadJSONDataButton);\n        \n        \n        \n        \n        \n        [\n            this.itemTitleCheckbox, this.itemAttachedObjectCheckbox\n        ].forEach(function (\n            this: InternalDropdownSettingsViewController,\n            checkbox: CBCheckbox,\n            index: number,\n            array: CBCheckbox[]\n        ) {\n            \n            checkbox.addTargetForControlEvents([\n                CBCheckbox.controlEvent.EnterDown, CBCheckbox.controlEvent.SelectionChange\n            ], function (this: InternalDropdownSettingsViewController, sender: CBCheckbox, event: Event) {\n                \n                [\n                    this.itemTitleCheckbox, this.itemAttachedObjectCheckbox\n                ].forEach(function (checkboxObject, index, array) {\n                    \n                    checkboxObject.selected = (checkboxObject == sender)\n                    \n                })\n                \n                this.updateitemDetailsView()\n                \n            }.bind(this))\n            \n            \n            \n        }.bind(this))\n        \n        \n        \n        \n        \n        this.downButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n    \n                const data = this.dropdown.drawingData\n    \n                const rowIndex = this.dropdown.selectedIndices.firstElement\n    \n                if (this.dropdown.selectedData.firstElement && rowIndex < data.length - 1) {\n    \n                    const row = data[rowIndex]\n    \n                    data.removeElementAtIndex(rowIndex)\n                    \n                    data.insertElementAtIndex(rowIndex + 1, row)\n                    \n                    this.dropdown.selectedIndices[0] = rowIndex + 1\n                    \n                    this.dropdown._drawingData = data\n                    \n                    this.reloadTableData()\n                    \n                }\n                \n                \n            }.bind(this)\n        )\n        \n        this.upButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n    \n                const data = this.dropdown.drawingData\n    \n                const rowIndex = this.dropdown.selectedIndices.firstElement\n    \n                if (this.dropdown.selectedData.firstElement && rowIndex > 0) {\n    \n                    const row = data[rowIndex]\n    \n                    data.removeElementAtIndex(rowIndex)\n                    \n                    data.insertElementAtIndex(rowIndex - 1, row)\n                    \n                    this.dropdown.selectedIndices[0] = rowIndex - 1\n                    \n                    this.dropdown._drawingData = data\n                    \n                    this.reloadTableData()\n                    \n                }\n                \n                \n            }.bind(this)\n        )\n        \n        \n        this.dropdown.addTargetForControlEvent(\n            SearchableDropdown.controlEvent.SelectionDidChange,\n            function (\n                this: InternalDropdownSettingsViewController,\n                sender: SearchableDropdown<undefined>,\n                event: Event\n            ) {\n                \n                this.updateitemDetailsView()\n                \n            }.bind(this)\n        )\n        \n        this.isASectionCheckbox.addTargetForControlEvent(\n            CBCheckbox.controlEvent.SelectionChange,\n            function (this: InternalDropdownSettingsViewController, sender: CBCheckbox, event: Event) {\n    \n                const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n    \n                selectedItem.isADropdownDataSection = sender.selected\n                selectedItem.isADropdownDataRow = IS_NOT(sender.selected)\n                \n                \n                this.reloadTableData()\n                \n                \n            }.bind(this)\n        )\n        \n        this.itemCodeTextField.textField.addTargetForControlEvent(\n            UITextArea.controlEvent.TextChange,\n            function (this: InternalDropdownSettingsViewController, sender: CBTextField, event: Event) {\n    \n                const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n    \n                selectedItem.itemCode = this.itemCodeTextField.text\n                \n            }.bind(this)\n        )\n        \n        this.itemTitleOrAttachedObjectTextArea.addTargetForControlEvent(\n            UITextArea.controlEvent.TextChange,\n            function (this: InternalDropdownSettingsViewController, sender: CBTextField, event: Event) {\n                \n                if (this.itemTitleCheckbox.selected) {\n                    \n                    this.itemTitleDidChange()\n                    \n                }\n                else {\n                    \n                    this.itemAttachedObjectDidChange()\n                    \n                }\n                \n                \n                \n                this.reloadTableData()\n                \n                \n            }.bind(this)\n        )\n        \n        \n        //this.loadSubjectData()\n        \n        this.updateAvailableCodes()\n        \n        \n        this.loadButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n                \n                this.loadData()\n                \n            }.bind(this)\n        )\n        \n        this.saveButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n                \n                CBCore.sharedInstance.socketClient.sendMessageForKey(\n                    \"RetrieveDropdownCodes\",\n                    nil,\n                    function (this: InternalDropdownSettingsViewController, codes: string[]) {\n                        \n                        \n                        \n                        this.saveData()\n                        \n                        \n                    }.bind(this)\n                )\n                \n                \n                \n            }.bind(this)\n        )\n        \n        this.addButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n    \n                const title = JSON.parse(this.itemTitleOrAttachedObjectTextArea.text)\n    \n                if (IS_NOT(LanguageService.stringForCurrentLanguage(title))) {\n                    \n                    title[LanguageService.defaultLanguageKey] = \"<Title>\"\n                    \n                }\n    \n    \n                const itemID = MAKE_ID();\n    \n                const dataRow: CBDropdownDataItem<undefined> = {\n        \n                    _id: itemID,\n                    title: title,\n                    isADropdownDataRow: !this.isASectionCheckbox.selected,\n                    isADropdownDataSection: this.isASectionCheckbox.selected,\n        \n                    attachedObject: undefined,\n        \n                    itemCode: nil,\n                    dropdownCode: (this.dropdown.selectedData.firstElement || {} as any).dropdownCodes\n        \n                }\n    \n                const rowIndex = this.dropdown.selectedIndices.firstElement\n    \n                if (IS_DEFINED(rowIndex)) {\n                    \n                    this.dropdown.drawingData.insertElementAtIndex(rowIndex + 1, dataRow)\n                    \n                    this.reloadTableData()\n                    \n                }\n                else {\n                    \n                    this.dropdown.drawingData.push(dataRow)\n                    \n                    this.reloadTableData()\n                    \n                    this.dropdown._tableView.scrollToBottom()\n                    \n                }\n                \n                \n                \n                \n            }.bind(this)\n        )\n        \n        this.deleteButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n    \n                const rowIndex = this.dropdown.selectedIndices.firstElement\n    \n                if (IS_DEFINED(rowIndex)) {\n                    \n                    this.dropdown.drawingData.removeElementAtIndex(rowIndex)\n                    \n                    this.dropdown.selectedData.removeElementAtIndex(0)\n                    this.dropdown.selectedIndices.removeElementAtIndex(0)\n                    \n                    this.dropdown.selectionDidChange(this.dropdown.selectedData)\n                    \n                }\n                \n                this.reloadTableData()\n                \n            }.bind(this)\n        )\n        \n        this.deleteDropdownButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n                \n                \n                if (this.dropdownCodeTextField.text && confirm(\"Are you sure you want to delete this dropdown?\")) {\n                    \n                    if (this.dropdownCodeTextField.text &&\n                        confirm(\"This will REMOVE THE DROPDOWN FROM THE SERVER, are you definitely sure?\")) {\n                        \n                        CBCore.sharedInstance.socketClient.sendMessageForKey(\n                            \"DeleteDropdownDataForCode\",\n                            this.dropdownCodeTextField.text,\n                            function (this: InternalDropdownSettingsViewController) {\n                                \n                                this.updateAvailableCodes()\n                                \n                            }.bind(this)\n                        )\n                        \n                        this.dropdownCodeTextField.text = nil\n                        \n                        this.dropdown.data = []\n                        \n                        this.updateitemDetailsView()\n                        \n                    }\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        this.clearDropdownButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n                \n                \n                if (this.dropdownCodeTextField.text && confirm(\"Are you sure you want to clear this dropdown?\")) {\n                    \n                    this.dropdown.data = []\n                    \n                    this.dropdown.selectedData = []\n                    \n                    this.dropdown.selectedIndices = []\n                    \n                    this.updateitemDetailsView()\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        \n        this.loadPlainDataButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n                \n                this.loadPlainData()\n                \n            }.bind(this)\n        )\n        \n        this.loadJSONDataButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalDropdownSettingsViewController, sender: UIButton, event: Event) {\n                \n                this.loadJSONData()\n                \n            }.bind(this)\n        )\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    reloadTableData() {\n        \n        this.dropdown._tableView.reloadData()\n    \n    \n        const dataToShow = {}\n    \n    \n        this.dropdown.drawingData.forEach(function (dataItem, index, array) {\n            \n            dataToShow[FIRST(dataItem.itemCode, dataItem._id)] = dataItem.title\n            \n        })\n        \n        \n        this.dataTextArea.text = JSON.stringify(dataToShow, null, 2)\n        \n    }\n    \n    \n    \n    \n    \n    async updateAvailableCodes() {\n    \n    \n        var { result: codes } = await SocketClient.RetrieveDropdownCodes()\n    \n        this.dropdownCodesTextArea.text = \"Saved codes: \" + JSON.stringify(codes)\n        \n        if (codes.length && IS_NOT(this.dropdownCodeTextField.text)) {\n            \n            this.dropdownCodeTextField.text = codes.firstElement\n            \n            this.loadData()\n            \n        }\n        \n        \n        \n        \n    }\n    \n    \n    updateitemDetailsView() {\n    \n        const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n    \n    \n        if (IS(selectedItem)) {\n            \n            if (this.itemTitleCheckbox.selected) {\n                \n                this.itemTitleOrAttachedObjectTextArea.text = JSON.stringify(selectedItem.title, null, 2)\n                this.itemTitleDidChange()\n                \n            }\n            else {\n                \n                this.itemTitleOrAttachedObjectTextArea.text = JSON.stringify(selectedItem.attachedObject, null, 2)\n                this.itemAttachedObjectDidChange()\n                \n            }\n            \n            \n            \n            this.itemCodeTextField.text = selectedItem.itemCode\n            \n        }\n        \n        this.isASectionCheckbox.selected = IS(selectedItem.isADropdownDataSection)\n        \n        \n        \n    }\n    \n    async loadData() {\n        \n        if (IS_NOT(this.dropdownCodeTextField.text)) {\n            \n            this.loadSubjectData()\n            \n            return\n            \n        }\n    \n        var { result: responseMessage } = await SocketClient.RetrieveDropdownDataForCode(this.dropdownCodeTextField.text)\n    \n        this._triggerLayoutViewSubviews()\n        \n        if (IS(responseMessage)) {\n            \n            CBDialogViewShower.alert(\"Loaded data.\")\n            \n        }\n        else {\n            \n            CBDialogViewShower.alert(\"Failed to load data.\")\n            \n            return\n            \n        }\n    \n        const dropdownData: CBDropdownDataItem<undefined>[] = []\n    \n        responseMessage.data.forEach(function (sectionOrRow, index, array) {\n            \n            if (sectionOrRow.isADropdownDataSection) {\n    \n    \n                const dataSection: CBDropdownDataItem<undefined> = {\n        \n                    _id: sectionOrRow._id,\n                    title: sectionOrRow.title,\n                    rowsData: [],\n                    isADropdownDataSection: YES,\n                    isADropdownDataRow: NO,\n        \n                    attachedObject: sectionOrRow.attachedObject,\n        \n                    itemCode: sectionOrRow.itemCode,\n                    dropdownCode: sectionOrRow.dropdownCode\n        \n                }\n    \n                const rowsData = dataSection.rowsData\n    \n                sectionOrRow.rowsData.forEach(function (rowData, index, array) {\n                    \n                    rowsData.push({\n                        \n                        _id: rowData._id,\n                        title: rowData.title,\n                        isADropdownDataSection: NO,\n                        isADropdownDataRow: YES,\n                        \n                        attachedObject: rowData.attachedObject,\n                        \n                        itemCode: rowData.itemCode,\n                        dropdownCode: rowData.dropdownCode\n                        \n                    })\n                    \n                })\n                \n                dataSection.rowsData = rowsData\n                \n                dropdownData.push(dataSection)\n                \n            }\n            else {\n                \n                dropdownData.push({\n                    \n                    _id: sectionOrRow._id,\n                    title: sectionOrRow.title,\n                    attachedObject: sectionOrRow.attachedObject,\n                    isADropdownDataRow: YES,\n                    \n                    itemCode: sectionOrRow.itemCode,\n                    dropdownCode: sectionOrRow.dropdownCode\n                    \n                } as any)\n                \n            }\n            \n            \n            \n            \n            \n        })\n        \n        this.dropdown.selectedData.removeElementAtIndex(0)\n        this.dropdown.selectedIndices.removeElementAtIndex(0)\n        \n        this.dropdown.data = dropdownData\n        \n        this.reloadTableData()\n        \n        this.updateitemDetailsView()\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    async saveData() {\n    \n    \n        const uploadData: CBDropdownData<undefined> = {\n        \n            dropdownCode: this.dropdownCodeTextField.text,\n            data: []\n        \n        } as any\n    \n        var currentRowsTarget = uploadData.data\n    \n        this.dropdown.drawingData.forEach(function (\n            this: InternalDropdownSettingsViewController,\n            item: CBDropdownDataItem<undefined>,\n            index: number,\n            array: CBDropdownDataItem<undefined>[]\n        ) {\n            \n            \n            \n            if ((item as CBDropdownDataItem<undefined>).isADropdownDataSection) {\n                \n                \n                currentRowsTarget = []\n                \n                uploadData.data.push({\n                    \n                    title: item.title,\n                    attachedObject: item.attachedObject,\n                    rowsData: currentRowsTarget,\n                    isADropdownDataSection: YES,\n                    isADropdownDataRow: NO,\n                    \n                    itemCode: FIRST(item.itemCode, item._id),\n                    dropdownCode: uploadData.dropdownCode\n                    \n                } as any)\n                \n                \n                \n            }\n            else {\n                \n                \n                currentRowsTarget.push({\n                    \n                    \n                    title: item.title,\n                    attachedObject: item.attachedObject,\n                    isADropdownDataSection: NO,\n                    isADropdownDataRow: YES,\n                    \n                    itemCode: FIRST(item.itemCode, item._id),\n                    dropdownCode: uploadData.dropdownCode\n                    \n                } as any)\n                \n                \n            }\n            \n            \n        }.bind(this))\n        \n        \n        // Send the data to server to be saved\n    \n        var { result: response } = await SocketClient.SaveDropdownData(uploadData)\n    \n        this.updateAvailableCodes()\n        \n        if (IS(response)) {\n            \n            CBDialogViewShower.alert(\"Saved successfully.\")\n            \n            this.loadData()\n            \n        }\n        else {\n            \n            CBDialogViewShower.alert(\"Failed to save dropdown data.\")\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    loadPlainData() {\n    \n    \n        const drawingData: CBDropdownDataItem<undefined>[] = []\n    \n        const lines = this.dataTextArea.text.split(\"\\n\")\n    \n    \n    \n        lines.forEach(function (\n            this: InternalDropdownSettingsViewController,\n            line: string,\n            index: number,\n            array: string[]\n        ) {\n    \n    \n    \n            const lineItems = line.trim().split(\" \")\n    \n    \n    \n            drawingData.push({\n                \n                _id: \"\" + index,\n                title: {\n                    \n                    \"en\": lineItems.lastElement\n                    \n                },\n                \n                isADropdownDataRow: YES,\n                isADropdownDataSection: NO,\n                \n                attachedObject: undefined,\n                \n                itemCode: lineItems.firstElement,\n                \n                dropdownCode: this.dropdownCodeTextField.text\n                \n            })\n            \n            \n        }.bind(this))\n        \n        \n        this.dropdown._drawingData = drawingData\n        this.dropdown._isDrawingDataValid = YES\n        \n        this.reloadTableData()\n        \n        if (this.dropdown.selectedIndices.length) {\n            \n            this.dropdown._selectedData = [this.dropdown.drawingData[this.dropdown.selectedIndices.firstElement]]\n            \n        }\n        \n        \n        \n        this.updateitemDetailsView()\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    loadJSONData() {\n    \n    \n        const drawingData: CBDropdownDataItem<undefined>[] = []\n    \n    \n        var itemTitles: {\n        \n            [x: string]: {\n            \n                [x: string]: string;\n            \n            }\n        \n        } = {}\n    \n    \n    \n        try {\n            \n            itemTitles = JSON.parse(this.dataTextArea.text)\n            \n        } catch (exception) {\n            \n            CBDialogViewShower.alert(exception)\n            \n            return\n            \n        }\n    \n    \n    \n    \n        var index = 0\n    \n        itemTitles.forEach(function (this: InternalDropdownSettingsViewController, itemTitle: {\n            \n            [x: string]: string;\n            \n        }, itemCode: string) {\n            \n            drawingData.push({\n                \n                _id: \"\" + index,\n                title: itemTitle,\n                \n                isADropdownDataRow: YES,\n                isADropdownDataSection: NO,\n                \n                attachedObject: undefined,\n                \n                itemCode: itemCode,\n                \n                dropdownCode: this.dropdownCodeTextField.text\n                \n            })\n            \n            index = index + 1\n            \n        }.bind(this))\n        \n        \n        this.dropdown._drawingData = drawingData\n        this.dropdown._isDrawingDataValid = YES\n        \n        this.reloadTableData()\n        \n        if (this.dropdown.selectedIndices.length) {\n            \n            this.dropdown._selectedData = [this.dropdown.drawingData[this.dropdown.selectedIndices.firstElement]]\n            \n        }\n        \n        this.updateitemDetailsView()\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    itemTitleDidChange() {\n    \n        const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n    \n        if (IS_NOT(this.itemTitleOrAttachedObjectTextArea.text) || this.itemTitleOrAttachedObjectTextArea.text ==\n            \"undefined\") {\n            \n            \n            this.itemTitleOrAttachedObjectTextArea.text = \"{  }\"\n            \n            \n        }\n        \n        \n        \n        try {\n    \n            const selectedItemTitle = JSON.parse(this.itemTitleOrAttachedObjectTextArea.text)\n    \n            if (selectedItemTitle instanceof Object && !(selectedItemTitle instanceof Array)) {\n                \n                this.itemTitleJSONLabel.textColor = CBColor.primaryContentColor\n                this.itemTitleJSONLabel.text = \"No issues detected\"\n                \n                //this.itemtitleTextArea.text = JSON.stringify(selectedItemTitle, null, 2)\n                \n                selectedItem.title = selectedItemTitle\n                \n            }\n            else {\n                \n                this.itemTitleJSONLabel.textColor = UIColor.redColor\n                this.itemTitleJSONLabel.text = \"JSON has to describe a CBLocalizedTextObject.\"\n                \n            }\n            \n            \n            \n        } catch (error) {\n            \n            this.itemTitleJSONLabel.text = error.message\n            this.itemTitleJSONLabel.textColor = UIColor.redColor\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    itemAttachedObjectDidChange() {\n    \n        const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n    \n        if (IS_NOT(this.itemTitleOrAttachedObjectTextArea.text) || this.itemTitleOrAttachedObjectTextArea.text ==\n            \"undefined\") {\n            \n            \n            this.itemTitleOrAttachedObjectTextArea.text = \"{ undefined }\"\n            \n            \n        }\n        \n        \n        \n        try {\n    \n            var selectedItemAttachedObject\n    \n            if (this.itemTitleOrAttachedObjectTextArea.text != \"{ undefined }\") {\n                \n                selectedItemAttachedObject = JSON.parse(this.itemTitleOrAttachedObjectTextArea.text)\n                \n            }\n            \n            \n            \n            if (selectedItemAttachedObject == null ||\n                (selectedItemAttachedObject instanceof Object && !(selectedItemAttachedObject instanceof Array))) {\n                \n                this.itemTitleJSONLabel.textColor = CBColor.primaryContentColor\n                this.itemTitleJSONLabel.text = \"No issues detected\"\n                \n                //this.itemtitleTextArea.text = JSON.stringify(selectedItemTitle, null, 2)\n                \n                selectedItem.attachedObject = selectedItemAttachedObject\n                \n            }\n            else {\n                \n                this.itemTitleJSONLabel.textColor = UIColor.redColor\n                this.itemTitleJSONLabel.text = \"JSON has to describe an object.\"\n                \n            }\n            \n            \n            \n        } catch (error) {\n            \n            this.itemTitleJSONLabel.text = error.message\n            this.itemTitleJSONLabel.textColor = UIColor.redColor\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    loadSubjectData() {\n        \n    \n        \n    }\n    \n    \n    \n    \n    \n    async viewDidAppear() {\n        \n    \n        \n    }\n    \n    \n    async viewWillDisappear() {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        const inquiryComponent = route.componentWithName(InternalDropdownSettingsViewController.routeComponentName)\n    \n    \n        this.reloadTableData()\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    updateViewConstraints() {\n        \n        super.updateViewConstraints()\n        \n    }\n    \n    \n    \n    updateViewStyles() {\n        \n        super.updateViewStyles()\n        \n    }\n    \n    \n    \n    viewDidLayoutSubviews() {\n        \n        super.viewDidLayoutSubviews()\n        \n    }\n    \n    \n    \n    \n    \n    layoutViewSubviews() {\n        \n        super.layoutViewSubviews()\n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding\n    \n        // View bounds\n        const bounds = this.view.bounds.rectangleWithInset(padding)\n    \n        this.titleLabel.frame = bounds.rectangleWithHeight(labelHeight * 2)\n    \n        var rowFrame = this.titleLabel.frame.rectangleForNextRow(padding)\n        rowFrame.distributeViewsAlongWidth([this.dropdownCodeTextField, this.loadButton, this.saveButton], [\n            2, 1, 1\n        ], padding)\n        \n        rowFrame = rowFrame.rectangleForNextRow(padding, labelHeight * 5)\n        this.dropdownCodesTextArea.frame = rowFrame\n        \n        rowFrame = rowFrame.rectangleForNextRow(padding, labelHeight * 2)\n        this.dropdown.frame = rowFrame.rectangleWithWidth(bounds.width * 0.5 - padding * 0.5)\n        \n        this.dropdown._tableView.frame = this.dropdown.frame.rectangleForNextRow(padding, 500)\n        \n        this.dropdown._tableView.setMargins(0, 0, padding, 0)\n        \n        \n        \n        \n        var deleteAddFrame = this.dropdown.frame.rectangleForNextColumn(padding * 0.5, this.dropdown.frame.width +\n            padding * 0.5)\n        \n        deleteAddFrame.distributeViewsAlongWidth([this.deleteButton, this.addButton], 1, padding)\n        \n        this.itemCodeTextField.frame = deleteAddFrame.rectangleForNextRow(padding)\n        \n        var itemTextAreaPurposesFrame = this.itemCodeTextField.frame.rectangleForNextRow(padding, labelHeight * 2)\n        \n        itemTextAreaPurposesFrame.distributeViewsEquallyAlongWidth([\n            this.itemTitleCheckbox, this.itemAttachedObjectCheckbox\n        ], padding)\n        \n        this.itemTitleOrAttachedObjectTextArea.frame = itemTextAreaPurposesFrame.rectangleForNextRow(\n            padding,\n            labelHeight *\n            11\n        )\n        \n        this.itemTitleJSONLabel.frame = this.itemTitleOrAttachedObjectTextArea.frame.rectangleForNextRow(\n            padding,\n            labelHeight\n        )\n        \n        this.isASectionCheckbox.frame = this.itemTitleJSONLabel.frame.rectangleForNextRow(padding, labelHeight)\n    \n    \n        const downUpFrame = this.isASectionCheckbox.frame.rectangleForNextRow(padding, labelHeight * 2)\n    \n        downUpFrame.distributeViewsAlongWidth([this.downButton, this.upButton], 1, padding)\n        \n        \n        downUpFrame.rectangleForNextRow(padding).distributeViewsEquallyAlongWidth([\n            this.deleteDropdownButton, this.clearDropdownButton\n        ], padding)\n        \n        \n        this.dataTextJSONLabel.frame = this.dropdownCodesTextArea.frame.rectangleWithY(this.dropdown._tableView.frame.max.y +\n            padding).rectangleWithHeight(labelHeight)\n        \n        this.dataTextArea.frame = this.dataTextJSONLabel.frame.rectangleForNextRow(padding, 500)\n        \n        this.dataTextArea.frame.rectangleForNextRow(padding, labelHeight *\n            2).distributeViewsEquallyAlongWidth([this.loadPlainDataButton, this.loadJSONDataButton], padding)\n        \n        this.loadPlainDataButton.setMargins(0, 0, padding, 0)\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS_NOT, UIButton, UIColor } from \"uicore-ts\"\nimport { CBColor } from \"./CBColor\"\n\n\nexport class CBButton extends UIButton {\n    \n    \n    constructor(elementID?: string, elementType?: string) {\n        \n        super(elementID, elementType)\n        \n    }\n    \n\n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        this.style.outline = \"none\"\n        \n        this.colors.titleLabel.normal = CBColor.whiteColor\n        this.setBackgroundColorsWithNormalColor(CBColor.primaryTintColor)\n        \n        this.colors.titleLabel.selected = CBColor.primaryTintColor\n        \n        \n    }\n    \n    \n    \n    \n    \n    setBackgroundColorsWithNormalColor(normalBackgroundColor: UIColor) {\n        \n        this.colors.background.normal = normalBackgroundColor\n        \n        this.colors.background.hovered = UIColor.colorWithRGBA(40, 168, 183) // normalBackgroundColor.colorByMultiplyingRGB(0.85)\n        \n        this.colors.background.focused = normalBackgroundColor // normalBackgroundColor.colorByMultiplyingRGB(0.5)\n        \n        this.colors.background.highlighted = UIColor.colorWithRGBA(48, 196, 212) // normalBackgroundColor.colorByMultiplyingRGB(0.7)\n        \n        this.colors.background.selected = UIColor.whiteColor\n        \n        this.updateContentForCurrentState()\n        \n    }\n    \n    \n    \n    updateContentForNormalState() {\n        \n        super.updateContentForNormalState()\n        \n        this.setBorder(0, 0)\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.24)\"\n        \n    }\n    \n    \n    updateContentForHoveredState() {\n        \n        super.updateContentForHoveredState()\n        \n        this.setBorder(0, 0)\n        \n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.85);\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.18)\"\n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        super.updateContentForFocusedState()\n        \n        this.setBorder(0, 1, CBColor.primaryContentColor)\n        \n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.85);\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.18)\"\n        \n    }\n    \n    \n    \n    updateContentForHighlightedState() {\n        \n        super.updateContentForHighlightedState()\n        \n        this.setBorder(0, 0)\n        \n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.7);\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.12)\"\n        \n    }\n    \n    \n    \n    \n    \n    updateContentForCurrentEnabledState() {\n        \n        super.updateContentForCurrentEnabledState()\n        \n        if (IS_NOT(this.enabled)) {\n            \n            this.titleLabel.textColor = new UIColor(\"#adadad\")\n            \n            this.backgroundColor = new UIColor(\"#e5e5e5\")\n            \n            this.alpha = 1\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil, NO, UITextView, UIView } from \"uicore-ts\"\n\n\nexport class CBCheckbox extends UIView {\n    \n    checkbox: UIView\n    titleLabel: UITextView\n    \n    constructor(elementID: string) {\n        \n        super(elementID, nil, \"label\")\n        \n    }\n    \n\n    initView(elementID: string, viewHTMLElement: HTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        this.checkbox = new UIView(elementID + \"Checkbox\", nil, \"input\")\n        this.checkbox.viewHTMLElement.setAttribute(\"type\", \"checkbox\")\n        \n        this.addSubview(this.checkbox)\n        \n        this.titleLabel = new UITextView(elementID + \"TitleLabel\", UITextView.type.span)\n        \n        this.addSubview(this.titleLabel)\n        \n        \n        this.checkbox.userInteractionEnabled = NO\n        this.titleLabel.userInteractionEnabled = NO\n        \n        this.titleLabel.style.overflow = \"visible\"\n        this.titleLabel.style.lineHeight = \"1.5\"\n        \n        \n        this.style.cursor = \"pointer\"\n        \n        this.viewHTMLElement.onchange = (event) => {\n            this.sendControlEventForKey(CBCheckbox.controlEvent.SelectionChange, event)\n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \n        \"SelectionChange\": \"SelectionChange\"\n        \n        \n    })\n    \n    \n    \n    \n    \n    get isStatic() {\n        \n        const result = this.checkbox.viewHTMLElement.classList.contains(\"staticCheckbox\")\n        \n        return result\n        \n    }\n    \n    set isStatic(isStatic: boolean) {\n        \n        if (isStatic) {\n            \n            this.checkbox.viewHTMLElement.classList.add(\"staticCheckbox\")\n            \n        }\n        else {\n            \n            this.checkbox.viewHTMLElement.classList.remove(\"staticCheckbox\")\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    get selected() {\n        \n        return (this.checkbox.viewHTMLElement as HTMLInputElement).checked\n        \n    }\n    \n    set selected(selected: boolean) {\n        \n        (this.checkbox.viewHTMLElement as HTMLInputElement).checked = selected\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        const titleWidth = this.bounds.width - 35\n        this.titleLabel.setMaxSizes(nil, titleWidth)\n        \n        this.titleLabel.textPrefix = \"<span style=\\\"position: absolute; overflow: hidden; left: 0; top: 0;text-overflow: ellipsis; white-space: pre; padding-left: 35px; width: \" +\n            titleWidth + \"px;\\\">\"\n        \n        this.titleLabel.textSuffix = \"</span>\"\n        \n        this.hoverText = this.titleLabel.text.replace(\n            this.titleLabel.textPrefix,\n            \"\"\n        ).replace(this.titleLabel.textSuffix, \"\")\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import {\n    IS,\n    nil,\n    NO,\n    UIActionIndicator,\n    UIButton,\n    UIColor,\n    UICore,\n    UIDialogView,\n    UIImageView,\n    UIObject,\n    UIRectangle,\n    UITextView,\n    UIView,\n    YES\n} from \"uicore-ts\"\nimport { CBColor } from \"./CBColor\"\nimport { CBLocalizedTextObject } from \"cbcore-ts/compiledScripts/CBDataInterfaces\"\nimport { CBDialogView } from \"./CBDialogView\"\nimport { LanguageService } from \"cbcore-ts\"\n\n\nexport class CBDialogViewShower extends UIObject {\n    \n    dialogView: UIDialogView<CBDialogView>\n    static currentDialogViewShower: CBDialogViewShower\n    static nextShowDialogFunctions: Function[] = []\n    static currentActionIndicatorDialogViewShower: CBDialogViewShower = nil\n    \n    constructor(elementID?: string, core?: UICore) {\n        \n        super()\n        \n        this.dialogView = new UIDialogView<CBDialogView>()\n        this.dialogView.view = new CBDialogView(elementID)\n        this.dialogView.view.backgroundColor = UIColor.whiteColor\n        \n        this.dialogView.core = this.dialogView.core || core\n        \n        const dialogLayoutFunction = this.dialogView.layoutSubviews.bind(this.dialogView)\n        this.dialogView.layoutSubviews = function (this: CBDialogViewShower) {\n            \n            dialogLayoutFunction()\n            \n            this.dialogView.view.frame = new UIRectangle(\n                0,\n                0,\n                window.innerHeight,\n                window.innerWidth\n            ).rectangleWithHeight(\n                this.dialogView.view.intrinsicContentHeight(this.getDialogWidth()),\n                0.5\n            ).rectangleWithWidth(this.getDialogWidth(), 0.5)\n            \n            this.dialogView.frame = this.dialogView.core.rootViewController.view.bounds\n            \n            \n        }.bind(this)\n        \n        \n        this.dialogView.view.yesButton.addTargetForControlEvents([\n            UIButton.controlEvent.PointerUpInside, UIButton.controlEvent.EnterDown\n        ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n            \n            this.yesButtonWasPressed()\n            \n            \n        }.bind(this))\n        \n        this.dialogView.view.noButton.addTargetForControlEvents([\n            UIButton.controlEvent.PointerUpInside, UIButton.controlEvent.EnterDown\n        ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n            \n            this.noButtonWasPressed()\n            \n        }.bind(this))\n        \n    }\n    \n    \n    getDialogWidth() {\n    \n        const padding = this.dialogView.core.paddingLength\n        const labelHeight = padding * 0.75\n        \n        \n        var result = 250\n        \n        const width = this.dialogView.view.titleLabel.intrinsicContentWidth() + padding * 2\n        \n        result = Math.max(result, this.dialogView.view.view.intrinsicContentWidth(this.dialogView.view.view.viewHTMLElement.naturalHeight || 1000000000))\n        \n        result = Math.max(result, width)\n        \n        result = Math.min(result, 1000)\n        \n        const dialogMaxWidth = (this.dialogView.superview ||\n            { \"bounds\": new UIRectangle(0, 0, 0, result) }).bounds.width\n        \n        result = Math.min(result, dialogMaxWidth)\n        \n        return result\n        \n        \n        \n    }\n    \n    \n    yesButtonWasPressed() {\n        \n        \n        \n    }\n    \n    noButtonWasPressed() {\n        \n        \n        \n    }\n    \n    \n    cancelButtonWasPressed() {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    showQuestionDialogInRootView(titleTextObject?: CBLocalizedTextObject, questionTextObject?: CBLocalizedTextObject) {\n        \n        \n        this.dialogView.view.initTitleLabelIfNeeded()\n        \n        this.dialogView.view.titleLabel.localizedTextObject = titleTextObject\n        \n        \n        \n        this.dialogView.view.initQuestionLabelIfNeeded()\n        \n        if (IS(questionTextObject)) {\n            \n            this.dialogView.view.questionLabel.localizedTextObject = questionTextObject\n            \n        }\n        \n        \n        this.dialogView.view.initYesNoButtonsIfNeeded()\n        \n        \n        this.dialogView.view.noButton.addTargetForControlEvents([\n            UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n        ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n            \n            this.noButtonWasPressed()\n            \n            \n        }.bind(this))\n        \n        this.dialogView.view.yesButton.addTargetForControlEvents([\n            UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n        ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n            \n            this.yesButtonWasPressed()\n            \n            \n        }.bind(this))\n        \n        \n        this.dialogView.showInRootView(YES)\n        \n        \n    }\n    \n    showMessageDialogInRootView(titleTextObject?: CBLocalizedTextObject) {\n        \n        \n        this.dialogView.view.initTitleLabelIfNeeded()\n        \n        this.dialogView.view.titleLabel.localizedTextObject = titleTextObject\n        \n        \n        this.dialogView.view.initCancelButtonIfNeeded()\n        \n        \n        this.dialogView.view.cancelButton.addTargetForControlEvents([\n            UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n        ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n            \n            this.cancelButtonWasPressed()\n            \n            \n        }.bind(this))\n        \n        \n        this.dialogView.showInRootView(YES)\n        \n        this.dialogView.view.cancelButton.focus()\n        \n        \n    }\n    \n    showDialogInRootView(view: UIView) {\n        \n        \n        this.dialogView.view.view = view\n        \n        this.dialogView.view.initCancelButtonIfNeeded()\n        \n        \n        this.dialogView.view.cancelButton.addTargetForControlEvents([\n            UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n        ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n            \n            this.cancelButtonWasPressed()\n            \n            \n        }.bind(this))\n        \n        \n        this.dialogView.showInRootView(YES)\n        \n        this.dialogView.view.cancelButton.focus()\n        \n        \n    }\n    \n    \n    \n    \n    \n    showImageDialogInRootView(imageURL: string, deleteImageCallback?: Function) {\n        \n        \n        var loadingLabel = new UITextView()\n        \n        loadingLabel.text = \"Loading image.\"\n        \n        loadingLabel.textAlignment = UITextView.textAlignment.center\n        \n        this.dialogView.view.view = loadingLabel\n        \n        \n        const imageView = new UIImageView()\n        \n        imageView.imageSource = imageURL\n        \n        imageView.viewHTMLElement.onload = (event) => {\n            this.dialogView.view.view = imageView\n            \n            imageView.setNeedsLayoutUpToRootView()\n        }\n        \n        imageView.fillMode = UIImageView.fillMode.aspectFitIfLarger\n        \n        \n        if (IS(deleteImageCallback)) {\n            \n            this.dialogView.view.initYesNoButtonsIfNeeded()\n            \n            this.dialogView.view.yesButton.titleLabel.text = \"Close\"\n            \n            this.dialogView.view.noButton.titleLabel.text = \"Delete\"\n            \n            this.dialogView.view.noButtonDismissesDialog = NO\n            \n            this.dialogView.view.noButton.addTargetForControlEvents([\n                UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n            ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n                \n                const dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(function (this: CBDialogViewShower) {\n                    \n                    //this.dialogView.dismiss()\n                    \n                }.bind(this))\n                \n                var textObject = LanguageService.localizedTextObjectForText(\"Delete this image.\")\n                \n                dialogShower.showQuestionDialogInRootView(textObject)\n                \n                dialogShower.yesButtonWasPressed = function () {\n                    \n                    deleteImageCallback()\n                    \n                    dialogShower.dialogView.dismiss()\n                    \n                }\n                \n                \n            }.bind(this))\n            \n            \n            this.dialogView.view.yesButton.addTargetForControlEvents([\n                UIButton.controlEvent.EnterDown, UIButton.controlEvent.PointerUpInside\n            ], function (this: CBDialogViewShower, sender: UIButton, event: Event) {\n                \n                \n                this.dialogView.dismiss()\n                \n                \n            }.bind(this))\n            \n        }\n        else {\n            \n            this.dialogView.view.initCancelButtonIfNeeded()\n            \n            this.dialogView.view.cancelButton.titleLabel.text = \"Close\"\n            \n        }\n        \n        \n        \n        \n        this.dialogView.showInRootView(YES)\n        \n        this.dialogView.view.cancelButton.focus()\n        \n        \n    }\n    \n    showActionIndicatorDialogInRootView(message: string) {\n        \n        \n        \n        const actionIndicator = new UIActionIndicator()\n        \n        \n        this.dialogView.zIndex = 150\n        \n        this.dialogView.view.view = actionIndicator\n        \n        actionIndicator.style.minHeight = \"100px\"\n        \n        this.dialogView.view.initQuestionLabelIfNeeded()\n        \n        this.dialogView.view.questionLabel.text = message\n        \n        \n        actionIndicator.start()\n        \n        this.dialogView.view.backgroundColor = CBColor.primaryContentColor.colorWithAlpha(0.5)\n        \n        this.dialogView.view.questionLabel.textColor = UIColor.whiteColor\n        \n        \n        \n        this.dialogView.dismissesOnTapOutside = NO\n        \n        \n        \n        \n        \n        CBDialogViewShower.currentActionIndicatorDialogViewShower = this\n        \n        \n        this.dialogView.showInRootView(NO)\n        \n        this.dialogView.view.cancelButton.focus()\n        \n        \n    }\n    \n    \n    \n    \n    \n    static showNextDialog() {\n        \n        (CBDialogViewShower.nextShowDialogFunctions.firstElement || nil)()\n        CBDialogViewShower.nextShowDialogFunctions.removeElementAtIndex(0)\n        \n    }\n    \n    \n    \n    static alert(text: string, dismissCallback: Function = nil) {\n        \n        const dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(dismissCallback)\n        const textObject = LanguageService.localizedTextObjectForText(text)\n        const showDialogFunction = dialogShower.showMessageDialogInRootView.bind(dialogShower, textObject)\n        CBDialogViewShower._showDialogWithFunction(showDialogFunction, dialogShower)\n        \n    }\n    \n    \n    \n    static localizedAlert(textObject: CBLocalizedTextObject, dismissCallback: Function = nil) {\n        \n        const dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(dismissCallback)\n        const showDialogFunction = dialogShower.showMessageDialogInRootView.bind(dialogShower, textObject)\n        CBDialogViewShower._showDialogWithFunction(showDialogFunction, dialogShower)\n        \n    }\n    \n    \n    static showQuestionDialog(questionText: string, dismissCallback: Function = nil) {\n        \n        const dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(dismissCallback)\n        const textObject = LanguageService.localizedTextObjectForText(questionText)\n        const showDialogFunction = dialogShower.showQuestionDialogInRootView.bind(dialogShower, textObject)\n        CBDialogViewShower._showDialogWithFunction(showDialogFunction, dialogShower)\n        \n        return dialogShower\n        \n    }\n    \n    \n    static showImageDialog(imageURL: string, deleteImageCallback: Function = nil, dismissCallback: Function = nil) {\n        \n        var dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(dismissCallback)\n        \n        var showDialogFunction = dialogShower.showImageDialogInRootView.bind(\n            dialogShower,\n            imageURL,\n            deleteImageCallback\n        )\n        CBDialogViewShower._showDialogWithFunction(showDialogFunction, dialogShower)\n        \n        return dialogShower\n        \n        \n    }\n    \n    static showDialog(view: UIView, dismissCallback: Function = nil) {\n        \n        const dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(dismissCallback)\n        const showDialogFunction = dialogShower.showDialogInRootView.bind(dialogShower, view)\n        CBDialogViewShower._showDialogWithFunction(showDialogFunction, dialogShower)\n    \n        return dialogShower;\n    \n    }\n    \n    static showActionIndicatorDialog(message: string, dismissCallback: Function = nil) {\n        \n        \n        if (IS(CBDialogViewShower.currentActionIndicatorDialogViewShower)) {\n            \n            \n            CBDialogViewShower.currentActionIndicatorDialogViewShower.dialogView.view.questionLabel.text = message\n            \n            CBDialogViewShower.currentActionIndicatorDialogViewShower.dialogView.view.setNeedsLayoutUpToRootView()\n            \n            return\n            \n        }\n        \n        \n        const dialogShower = CBDialogViewShower._dialogShowerWithDismissCallback(dismissCallback)\n        \n        dialogShower.showActionIndicatorDialogInRootView(message)\n        \n        return dialogShower\n        \n        \n    }\n    \n    \n    static hideActionIndicatorDialog() {\n        \n        CBDialogViewShower.currentActionIndicatorDialogViewShower.dialogView.dismiss()\n        \n        CBDialogViewShower.currentActionIndicatorDialogViewShower = nil\n        \n    }\n    \n    \n    \n    private static _dialogShowerWithDismissCallback(dismissCallback: Function) {\n        \n        const dialogShower = new CBDialogViewShower()\n        const dismissFunction = dialogShower.dialogView.dismiss.bind(dialogShower.dialogView)\n        \n        dialogShower.dialogView.dismiss = function () {\n            dismissFunction()\n            dismissCallback()\n            CBDialogViewShower.currentDialogViewShower = null\n            CBDialogViewShower.showNextDialog()\n        }\n        \n        return dialogShower\n        \n    }\n    \n    \n    private static _showDialogWithFunction(showDialogFunction: any, dialogShower: CBDialogViewShower) {\n        \n        if (IS(CBDialogViewShower.currentDialogViewShower)) {\n            \n            CBDialogViewShower.nextShowDialogFunctions.push(showDialogFunction)\n            \n        }\n        else {\n            \n            CBDialogViewShower.currentDialogViewShower = dialogShower\n            showDialogFunction()\n            \n        }\n        \n    }\n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { FIRST_OR_NIL, IF, IS, IS_NOT, nil, NO, RETURNER, UIButton, UIColor, UITextView, UIView, YES } from \"uicore-ts\"\nimport { CBFlatButton } from \"./CBFlatButton\"\nimport { LanguageService } from \"cbcore-ts\"\nimport { RowView } from \"./RowView\"\n\n\nexport class CBDialogView extends UIView {\n    \n    titleLabel: UITextView = nil\n    titleRow: RowView = nil\n    placeholderLabel: UITextView = nil\n    \n    _view: UIView = nil\n    \n    questionLabel: UITextView = nil\n    yesButton: CBFlatButton = nil\n    noButton: CBFlatButton = nil\n    cancelButton: CBFlatButton = nil\n    \n    noButtonDismissesDialog = YES\n    \n    constructor(elementID?: string) {\n        \n        super(elementID)\n        \n        this.updateContent()\n        \n    }\n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement) {\n        super.initView(elementID, viewHTMLElement)\n        this.style.borderRadius = \"5px\"\n    }\n    \n    \n    set view(view: UIView) {\n        this.view.removeFromSuperview()\n        this._view = view\n        this.addSubview(view)\n    }\n    \n    get view() {\n        return this._view\n    }\n    \n    \n    initCancelButtonIfNeeded() {\n        \n        if (IS_NOT(this.cancelButton)) {\n            \n            this.cancelButton = new CBFlatButton(this.elementID + \"CancelButton\")\n            this.cancelButton.titleLabel.text = \"OK\"\n            this.cancelButton.titleLabelColor = UIColor.greenColor\n            this.cancelButton.titleLabel.style.fontWeight = \"600\"\n            this.addSubview(this.cancelButton)\n            \n            this.cancelButton.addTargetForControlEvents([\n                UIButton.controlEvent.PointerUpInside, UIButton.controlEvent.EnterDown\n            ], function (this: CBDialogView, sender: UIButton, event: Event) {\n                this.dialogView.dismiss()\n            }.bind(this))\n            \n        }\n        \n    }\n    \n    initYesNoButtonsIfNeeded() {\n        \n        if (IS_NOT(this.yesButton)) {\n            \n            this.yesButton = new CBFlatButton(this.elementID + \"YesButton\")\n            this.yesButton.titleLabel.setText(\"cBDDialogViewYES\", \"YES\")\n            this.yesButton.titleLabelColor = UIColor.greenColor\n            this.yesButton.titleLabel.style.fontWeight = \"600\"\n            this.addSubview(this.yesButton)\n            \n            this.noButton = new CBFlatButton(this.elementID + \"NoButton\")\n            this.noButton.titleLabel.setText(\"cBDDialogViewNO\", \"NO\")\n            this.noButton.titleLabelColor = UIColor.redColor\n            this.noButton.titleLabel.style.fontWeight = \"600\"\n            this.addSubview(this.noButton)\n            \n            // this.yesButton.addTargetForControlEvents([UIButton.controlEvent.PointerUpInside, UIButton.controlEvent.EnterDown], function (this: CBDialogView, sender: UIButton, event: Event) {\n            //     this.dialogView.dismiss()\n            // }.bind(this))\n            \n            this.noButton.addTargetForControlEvents([\n                UIButton.controlEvent.PointerUpInside, UIButton.controlEvent.EnterDown\n            ], function (this: CBDialogView, sender: UIButton, event: Event) {\n                if (this.noButtonDismissesDialog) {\n                    this.dialogView.dismiss()\n                }\n            }.bind(this))\n            \n        }\n        \n        \n        \n    }\n    \n    initQuestionLabelIfNeeded() {\n        \n        if (IS_NOT(this.questionLabel)) {\n            \n            this.questionLabel = new UITextView(this.elementID + \"QuestionLabel\", UITextView.type.header3)\n            this.questionLabel.text = LanguageService.stringForKey(\n                \"cBDDialogViewAreYouSure\",\n                LanguageService.currentLanguageKey,\n                \"Are you sure?\"\n            )\n            this.questionLabel.textAlignment = UITextView.textAlignment.center\n            this.addSubview(this.questionLabel)\n            \n        }\n        \n    }\n    \n    initTitleRow() {\n        \n        if (IS_NOT(this.titleRow)) {\n            \n            this.titleRow = new RowView(this.elementID + \"TitleRow\")\n            this.addSubview(this.titleRow)\n            \n        }\n        \n    }\n    \n    initTitleLabelIfNeeded() {\n        \n        if (IS_NOT(this.titleLabel)) {\n            \n            this.titleLabel = new UITextView(this.elementID + \"TitleLabel\", UITextView.type.header4)\n            this.titleLabel.text = \"Accept offer\"\n            this.titleLabel.style.fontSize = \"24\"\n            this.addSubview(this.titleLabel)\n            \n        }\n        \n    }\n    \n    initPlaceholderLabelIfNeeded() {\n        \n        if (IS_NOT(this.placeholderLabel)) {\n            \n            this.placeholderLabel = new UITextView(this.elementID + \"PlaceholderLabel\", UITextView.type.header4)\n            this.placeholderLabel.text = \"No offers have been made yet.\"\n            this.addSubview(this.placeholderLabel)\n            \n        }\n        \n    }\n    \n    updateContent() {\n        \n        function stringFromValue(value) {\n            if (IS(value)) {\n                return value\n            }\n            return \"-\"\n        }\n        \n        \n        \n        this.layoutSubviews()\n        \n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding * 0.75\n    \n        const bounds = this.bounds.rectangleWithInsets(padding * 0.5, padding * 0.5, 0, 0)\n    \n        const topObject = { frame: bounds.rectangleWithHeight(0) }\n    \n    \n        this.titleLabel.frame = bounds.rectangleWithHeight(this.titleLabel.intrinsicContentHeight(bounds.width)).rectangleWithY(\n            bounds.y +\n            padding * 0.5)\n        this.titleLabel.style.marginLeft = \"\" + (padding * 0.5) + \"px\"\n        \n        this.titleRow.frame = FIRST_OR_NIL(this.titleLabel, topObject).frame.rectangleForNextRow(\n            0,\n            this.titleRow.intrinsicContentHeight(bounds.width)\n        )\n        \n        \n        \n        \n        \n        this.view.frame = FIRST_OR_NIL(this.titleRow, this.titleLabel, topObject).frame.rectangleForNextRow(\n            padding,\n            this.view.intrinsicContentHeight(bounds.width)\n        ).rectangleWithWidth(bounds.width).rectangleWithX(bounds.x)\n        \n        \n        \n        this.questionLabel.frame = FIRST_OR_NIL(\n            this.view,\n            this.titleRow,\n            this.titleLabel,\n            topObject\n        ).frame.rectangleForNextRow(\n            padding,\n            this.questionLabel.intrinsicContentHeight(bounds.width)\n        ).rectangleWithWidth(bounds.width).rectangleWithX(bounds.x)\n    \n    \n    \n\n        const buttons = [this.yesButton, this.noButton]\n    \n        const buttonsFrame = FIRST_OR_NIL(\n            this.questionLabel,\n            this.view,\n            this.titleRow,\n            this.titleLabel,\n            topObject\n        ).frame.rectangleForNextRow(padding, labelHeight *\n            2)\n            .rectangleWithWidth([(buttons.everyElement.titleLabel.intrinsicContentWidth() as any as number[]).max(), 120].max() * 2 + padding * 3, 0.5)\n        \n        buttonsFrame.distributeViewsAlongWidth(buttons)\n        \n        this.cancelButton.frame = buttonsFrame.rectangleWithWidth(150, 0.5)\n        \n        \n        \n        \n        this.placeholderLabel.frame = bounds.rectangleWithInsets(padding * 0.5, padding * 0.5, 0, 0)\n        \n        \n        \n        if (IS(this.view)) {\n            \n            this.placeholderLabel.hidden = YES\n            \n            // this.titleLabel.hidden = NO\n            // this.titleRow.hidden = NO\n            \n        }\n        else {\n            \n            \n            this.placeholderLabel.hidden = NO\n            \n            // this.titleLabel.hidden = YES\n            // this.titleRow.hidden = YES\n            \n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    intrinsicContentHeight(constrainingWidth: number = 0) {\n    \n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding * 0.75\n    \n        function addPaddingIfNeeded(value: number) {\n            \n            return IF<number>(value)(function () {\n                return value + padding\n            })()\n            \n        }\n    \n        var result = padding\n    \n        result = result + addPaddingIfNeeded(this.titleLabel.intrinsicContentHeight(constrainingWidth))\n        \n        result = result + addPaddingIfNeeded(this.titleRow.intrinsicContentHeight(constrainingWidth))\n        \n        result = result + addPaddingIfNeeded(this.view.intrinsicContentHeight(constrainingWidth) + padding)\n        \n        result = result + addPaddingIfNeeded(this.questionLabel.intrinsicContentHeight(constrainingWidth))\n        \n        result = result + IF<number>(FIRST_OR_NIL(this.yesButton, this.cancelButton))(RETURNER(labelHeight))()\n        \n        \n        \n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIButton, UIColor } from \"uicore-ts\"\nimport { CBColor } from \"./CBColor\"\nimport { CBButton } from \"./CBButton\"\n\n\nexport class CBFlatButton extends CBButton {\n    \n    static colors = {\n        \n        titleLabel: {\n            \n            normal: CBColor.primaryTintColor,\n            highlighted: CBColor.primaryTintColor,\n            selected: CBColor.primaryTintColor\n            \n        },\n        background: {\n            \n            normal: CBColor.transparentColor,\n            hovered: new UIColor(\"#F8F8F8\"),\n            highlighted: new UIColor(\"#ebebeb\"),\n            selected: new UIColor(\"#ebebeb\")\n            \n        }\n        \n    }\n    \n    \n    constructor(elementID?: string, elementType?: string) {\n        \n        super(elementID, elementType)\n        \n    }\n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        this.colors = {\n            \n            titleLabel: {\n                \n                normal: CBColor.primaryTintColor,\n                highlighted: CBColor.primaryTintColor,\n                selected: CBColor.primaryTintColor\n                \n            },\n            background: {\n                \n                normal: CBColor.transparentColor,\n                hovered: new UIColor(\"#F8F8F8\"),\n                highlighted: new UIColor(\"#ebebeb\"),\n                selected: new UIColor(\"#ebebeb\")\n                \n            }\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    set titleLabelColor(titleLabelColor: UIColor) {\n        \n        \n        this.colors.titleLabel.normal = titleLabelColor\n        this.colors.titleLabel.highlighted = titleLabelColor\n        this.colors.titleLabel.selected = titleLabelColor\n        \n        \n        this.updateContentForCurrentState()\n        \n    }\n    \n    get titleLabelColor() {\n    \n        const result = this.colors.titleLabel.normal\n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    updateContentForNormalState() {\n        \n        UIButton.prototype.updateContentForNormalState.call(this)\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.24)\"\n        \n    }\n    \n    \n    updateContentForHoveredState() {\n        \n        UIButton.prototype.updateContentForHoveredState.call(this)\n        \n        \n        \n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.85);\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.18)\";\n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        UIButton.prototype.updateContentForFocusedState.call(this)\n        \n        \n        \n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.85);\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.18)\"\n        \n    }\n    \n    \n    \n    updateContentForHighlightedState() {\n        \n        UIButton.prototype.updateContentForHighlightedState.call(this)\n        \n        \n        \n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.7);\n        \n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.12)\"\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IF, IS, IS_NOT_NIL, nil, UIRectangle, UIView } from \"uicore-ts\"\n\n\nexport class RowView<CellType extends UIView = UIView> extends UIView {\n    \n    _previousLayoutBounds: UIRectangle\n    _cells: CellType[]\n    _cellWeights: number[]\n    \n    padding = 0\n    _cellWidths: number[]\n    _rowHeight = 50\n    \n    \n    constructor(elementID?: string, cells: CellType[] = [], cellWidths: number[] = []) {\n        \n        super(elementID)\n        \n        this._cells = cells\n        this._cellWeights = cellWidths\n        \n    }\n    \n    \n    \n    get cells() {\n        return this._cells\n    }\n    \n    \n    set cells(cells: CellType[]) {\n        \n        const previousCells = this.cells\n        \n        const cellWeights = this.cellWeights.copy();\n    \n    \n        // The cells are added to this._cells in this.addCell()\n        \n        previousCells.copy().forEach(function (this: RowView, cell: CellType, index: number, array: CellType[]) {\n            \n            if (!cells.contains(cell)) {\n                \n                cell.removeFromSuperview()\n                this._cells.removeElement(cell)\n                \n                cellWeights[index] = nil;\n                \n            }\n            \n        }.bind(this))\n        \n        this.cellWeights = cellWeights.filter((value, index, array) => IS_NOT_NIL(value))\n        \n        cells.copy().forEach(function (this: RowView, cell: CellType, index: number, array: CellType[]) {\n            if (!IS(cell.superview)) {\n                this.addCell(cell, 1, index)\n            }\n        }, this)\n        \n        this._previousLayoutBounds = nil\n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    removeCellAtIndex(index: number) {\n        const remainingCells = this.cells.copy()\n        remainingCells.removeElementAtIndex(index)\n        this.cellWeights.removeElementAtIndex(index)\n        this.cells = remainingCells\n    }\n    \n    removeFirstCell() {\n        this.removeCellAtIndex(0)\n    }\n    \n    removeLastCell() {\n        this.removeCellAtIndex(this.cells.length - 1)\n    }\n    \n    \n    \n    addCell(cell: CellType, weight: number = 1, index = this.cells.length) {\n        \n        if (this.cells.contains(cell) && IS_NOT_NIL(cell)) {\n            return\n        }\n        \n        this.cells.insertElementAtIndex(index, cell)\n        this.cellWeights.insertElementAtIndex(index, weight)\n        this.addSubview(cell)\n        this.setNeedsLayout()\n        \n    }\n    \n    \n    get cellWeights() {\n        return this._cellWeights\n    }\n    \n    set cellWeights(widths: number[]) {\n        this._cellWeights = widths\n        this._previousLayoutBounds = nil\n        this.setNeedsLayout()\n    }\n    \n    get cellWidths() {\n        return this._cellWidths\n    }\n    \n    set cellWidths(widths: number[]) {\n        this._cellWidths = widths\n        this._previousLayoutBounds = nil\n        this.setNeedsLayout()\n    }\n    \n    \n    \n    get rowHeight() {\n        \n        var result = IF(this._rowHeight)(() => this._rowHeight)\n        .ELSE(() => this.cells.map((value, index, array) => value.intrinsicContentHeight(this.bounds.width)).max())\n        \n        \n        \n        \n        return result //this.bounds.height\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        const bounds = this.bounds\n        \n        if (bounds.isEqualTo(this._previousLayoutBounds)) {\n            \n            return\n            \n        }\n        \n        super.layoutSubviews()\n        \n        \n        this._previousLayoutBounds = bounds\n        \n        bounds.distributeViewsAlongWidth(this._cells, this._cellWeights, this.padding, this._cellWidths)\n        \n        this.cells.forEach(function (this: RowView, cell: UIView, index: number, array: UIView[]) {\n            \n            cell.frame = cell.frame.rectangleWithHeight(this.rowHeight)\n            \n        }.bind(this))\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { IS, IS_NOT, UIColor, UITextField, UITextView, UIView } from \"uicore-ts\"\nimport { CBColor } from \"./CBColor\"\n\n\nexport class CBTextField extends UIView {\n    \n    titleLabel: UITextView\n    textField: UITextField\n    \n    constructor(elementID?: string) {\n        \n        super(elementID)\n        \n    }\n    \n\n    initView(elementID: string, viewHTMLElement: HTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        \n        viewHTMLElement.classList.add(\"input\")\n        \n        this.textField = new UITextField(elementID + \"TextField\")\n        this.addSubview(this.textField)\n        \n        this.titleLabel = new UITextView(elementID + \"TitleLabel\", UITextView.type.label)\n        this.titleLabel.textColor = UIColor.greyColor\n        this.titleLabel.style.fontStyle = \"italic\"\n        this.addSubview(this.titleLabel)\n        \n        \n        this.titleLabel.viewHTMLElement.setAttribute(\"for\", this.textField.elementID)\n        \n        \n        this.textField.addTargetForControlEvent(UIView.controlEvent.Focus, (event) => {\n            this.titleLabel.viewHTMLElement.classList.add(\"active\")\n            this.titleLabel.textColor = CBColor.primaryTintColor\n        })\n        \n        this.textField.addTargetForControlEvent(UIView.controlEvent.Blur, (event) => {\n            if (IS_NOT(this.text)) {\n                \n                this.titleLabel.viewHTMLElement.classList.remove(\"active\")\n                \n            }\n            \n            this.titleLabel.textColor = UIColor.greyColor\n        })\n        \n        this.textField.style.webkitUserSelect = \"text\"\n        \n    }\n    \n    \n    \n    \n    \n    setPlaceholderText(key: string, defaultString: string, parameters?: { [x: string]: string }) {\n        \n        this.titleLabel.setText(key, defaultString, parameters)\n        \n    }\n    \n    \n    set placeholderText(placeholderText: string) {\n        \n        this.titleLabel.text = placeholderText\n        \n    }\n    \n    get placeholderText() {\n        \n        return this.titleLabel.text\n        \n    }\n    \n    \n    \n    \n    \n    get text() {\n        \n        return this.textField.text\n        \n    }\n    \n    set text(text: string) {\n        \n        if (IS_NOT(text)) {\n            \n            text = \"\"\n            \n        }\n        \n        this.textField.text = text\n        \n        if (IS(this.text)) {\n            \n            this.titleLabel.viewHTMLElement.classList.add(\"active\")\n            \n        }\n        else {\n            \n            this.titleLabel.viewHTMLElement.classList.remove(\"active\")\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    updateContentForCurrentEnabledState() {\n        \n        \n        this.userInteractionEnabled = this.enabled\n        \n        if (this.enabled) {\n            \n            this.alpha = 1\n            \n        }\n        else {\n            \n            this.alpha = 0.5\n            \n        }\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    didMoveToSuperview(superview: UIView) {\n        \n        super.didMoveToSuperview(superview)\n        \n        this.text = this.text\n        \n    }\n    \n    \n    \n    \n    \n    set enabled(enabled: boolean) {\n        \n        super.enabled = enabled\n        \n        \n        \n        if (IS_NOT(enabled)) {\n            \n            this.textField.viewHTMLElement.setAttribute(\"readonly\", \"\" + !enabled)\n            \n        }\n        else {\n            \n            this.textField.viewHTMLElement.removeAttribute(\"readonly\")\n            \n        }\n        \n        \n        \n        \n    }\n    \n    get enabled() {\n        \n        return super.enabled\n        \n    }\n    \n    \n    \n    \n    \n    focus() {\n        \n        this.textField.focus()\n        \n    }\n    \n    blur() {\n        \n        this.textField.blur()\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import {\n    IS,\n    IS_NOT,\n    IS_UNDEFINED,\n    MAKE_ID,\n    nil,\n    NO,\n    UIButton,\n    UIColor,\n    UIDialogView,\n    UIImageView,\n    UIKeyValueStringFilter,\n    UILocalizedTextObject,\n    UITableView,\n    UITextField,\n    UITextView,\n    UIView,\n    YES\n} from \"uicore-ts\"\nimport { CBColor } from \"./CBColor\"\nimport { CBCore } from \"cbcore-ts\"\nimport { CBDropdownData, CBDropdownDataItem } from \"cbcore-ts/compiledScripts/CBDataInterfaces\"\nimport { CBSocketClient } from \"cbcore-ts\"\nimport { CBCheckbox } from \"./CBCheckbox\"\nimport { LanguageService } from \"cbcore-ts\"\nimport { SearchableDropdownRow } from \"./SearchableDropdownRow\"\nimport { SearchTextField } from \"./SearchTextField\"\n\n\nexport class SearchableDropdown<T> extends UIButton {\n    \n    _keyValueStringFilter: UIKeyValueStringFilter\n    _containerView: UIView\n    _searchTextField: SearchTextField\n    _dialogView: UIDialogView\n    _tableView: UITableView\n    _rightImageView: UIImageView\n    \n    highlightLabel: UITextView\n    \n    _data: CBDropdownDataItem<T>[] = []\n    _filteredData: CBDropdownDataItem<T>[] = []\n    \n    _excludedData: string[] = []\n    \n    tintColor: UIColor = CBColor.primaryTintColor\n    \n    overflowLabel: UITextView\n    selectedIndices: number[] = []\n    _selectedData: CBDropdownDataItem<T>[] = []\n    _drawingData: CBDropdownDataItem<T>[] = []\n    \n    _isDrawingDataValid = NO\n    _placeholderText: string\n    _expandedContainerViewHeight: number\n    \n    isSingleSelection = NO\n    showsSelectedSectionInMultipleSelectionMode = NO\n    _dropdownCode: string\n    \n    allowsCustomItem = NO\n    _customItem: CBDropdownDataItem<any>\n    _focusedRowIndex: number\n    \n    keepFocusedRowVisible = YES\n    _placeholderLocalizedTextObject: UILocalizedTextObject\n    \n    constructor(elementID: string) {\n        \n        super(elementID)\n        \n    }\n    \n\n    initView(elementID, viewHTMLElement, initViewData) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        \n        //this.style.borderRadius = \"2px\";\n        \n        \n        this._titleLabel.text = \"Current value\"\n        this._titleLabel.textAlignment = UITextView.textAlignment.left\n        \n        this.overflowLabel = new UITextView(elementID + \"OverflowLabel\")\n        this.overflowLabel.textColor = CBColor.primaryContentColor\n        this.overflowLabel.textAlignment = UITextView.textAlignment.right\n        this.addSubview(this.overflowLabel)\n        \n        \n        this._rightImageView = new UIImageView(this.elementID + \"RightImageView\")\n        this._rightImageView.imageSource = \"images/baseline-arrow_drop_down-24px.svg\"\n        this._rightImageView.userInteractionEnabled = NO\n        this.addSubview(this._rightImageView)\n        \n        \n        this.setNeedsLayout()\n        \n        \n        this._containerView = new UIView(elementID + \"ContainerView\")\n        this._containerView.style.boxShadow = \"0 9px 13px 0 rgba(0,0,0,0.26)\"\n        this._containerView.style.borderRadius = \"2px\"\n        \n        this._searchTextField = new SearchTextField(elementID + \"SearchTextField\")\n        this._searchTextField.placeholderText = LanguageService.stringForKey(\n            \"searchableDropdownSearch\",\n            LanguageService.currentLanguageKey,\n            \"Search\"\n        )\n        this._containerView.addSubview(this._searchTextField)\n        \n        this._searchTextField._textField.addTargetForControlEvent(\n            UITextField.controlEvent.TextChange,\n            function (this: SearchableDropdown<T>, sender, event) {\n                \n                this.updateFilteredData(this._searchTextField.text)\n                \n            }.bind(this)\n        )\n        \n        this._searchTextField._textField.addTargetForControlEvent(\n            UIView.controlEvent.EscDown,\n            function (this: SearchableDropdown<T>, sender, event) {\n                \n                if (IS(this._searchTextField.text)) {\n                    \n                    this._searchTextField.text = \"\"\n                    this.updateFilteredData(\"\")\n                    \n                }\n                else {\n                    \n                    this._dialogView.dismiss(YES)\n                    \n                }\n                \n                \n            }.bind(this)\n        )\n        \n        this._searchTextField._textField.addTargetForControlEvent(\n            UIView.controlEvent.DownArrowDown,\n            function (this: SearchableDropdown<T>, sender: UITextField, event: Event) {\n                \n                if (this.focusedRowIndex < (this.drawingData.length - 1)) {\n                    \n                    this.focusedRowIndex = this.focusedRowIndex + 1\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        this._searchTextField._textField.addTargetForControlEvent(\n            UIView.controlEvent.UpArrowDown,\n            function (this: SearchableDropdown<T>, sender: UITextField, event: Event) {\n                \n                if (this.focusedRowIndex > 0) {\n                    \n                    this.focusedRowIndex = this.focusedRowIndex - 1\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        this._searchTextField._textField.addTargetForControlEvent(\n            UIView.controlEvent.EnterDown,\n            function (this: SearchableDropdown<T>, sender, event) {\n    \n                const isTouchDevice = \"ontouchstart\" in document.documentElement\n    \n                if (isTouchDevice) {\n                    \n                    this._searchTextField.blur()\n                    \n                    return\n                    \n                }\n    \n    \n                const datapoint = this.drawingData[this.focusedRowIndex]\n    \n    \n                const alreadySelected = this.selectedDataContains(datapoint)\n    \n                if (alreadySelected) {\n                    \n                    this.selectedData.removeElement(datapoint)\n                    \n                }\n                else if (this.isSingleSelection) {\n                    \n                    \n                    this.selectedIndices = [this.focusedRowIndex]\n                    \n                    this.selectedData = [datapoint]\n                    \n                    // view.selected = YES;\n                    \n                    this.selectionDidChange(this.selectedData)\n                    \n                    this.updateContentForCurrentSelection()\n                    \n                    this._dialogView.dismiss()\n                    \n                    \n                }\n                else {\n                    \n                    this.selectedData.push(datapoint)\n                    \n                }\n                \n                \n                \n                \n                \n            }.bind(this)\n        )\n        \n        this._tableView = new UITableView(elementID + \"TableView\")\n        this._containerView.addSubview(this._tableView)\n        this._tableView.backgroundColor = UIColor.whiteColor\n        \n        this._dialogView = new UIDialogView(elementID + \"DialogView\")\n        this._dialogView.view = this._containerView\n        this._dialogView.backgroundColor = UIColor.transparentColor\n        \n        this.addTargetForControlEvents([\n            UIView.controlEvent.PointerUpInside, UIView.controlEvent.EnterDown\n        ], function (this: SearchableDropdown<T>, sender, event) {\n            if (this._dialogView.isVisible) {\n                this.closeDropdown()\n            }\n            else {\n                this.openDropdown()\n            }\n        }.bind(this))\n        \n        \n        this._dialogView.addTargetForControlEvent(\n            UIView.controlEvent.PointerDown,\n            function (sender: UIDialogView, event: Event) {\n                \n                if (sender.viewHTMLElement == event.target) {\n                    sender.dismiss()\n                }\n                \n            }\n        )\n    \n    \n        const dialogLayoutFunction = this._dialogView.layoutSubviews\n    \n        this._dialogView.layoutSubviews = function (this: SearchableDropdown<T>) {\n            \n            //dialogLayoutFunction.call(this._dialogView);\n            \n            this._dialogView.frame = this.rootView.bounds //this.superview.rectangleInView(this.superview.bounds, this.rootView);\n    \n            const padding = this.core.paddingLength\n            const labelHeight = padding\n    \n            const searchTextFieldHeight = this.bounds.height\n    \n            this._containerView.frame = this.superview.rectangleInView(this.frame, this.rootView)\n                .rectangleWithHeight(this.expandedContainerViewHeight)\n            \n            this._searchTextField.frame = this._containerView.bounds.rectangleWithHeight(searchTextFieldHeight).rectangleWithInsets(\n                0,\n                16,\n                0,\n                0\n            )\n            \n            this._tableView.frame = this._containerView.bounds.rectangleWithInsets(0, 0, 0, searchTextFieldHeight)\n            \n            //this._tableView.style.maxHeight = \"\" + this._tableView.intrinsicContentHeight() + \"px\";\n            \n            \n        }.bind(this)\n        \n        \n        // var animateDialogAppearing = this._dialogView.animateAppearing;\n        // this._dialogView.animateAppearing = function (this: SearchableDropdown) {\n        //     animateDialogAppearing.call(this._dialogView);\n        //     this.style.zIndex = \"101\";\n        //     if (this.highlightLabel) {\n        //         this.highlightLabel.textColor = UIColor.whiteColor;\n        //         this.highlightLabel.style.zIndex = \"101\";\n        //         this.highlightLabel.userInteractionEnabled = NO;\n        //     }\n        \n        //     this._searchTextField.focus();\n        \n        // }.bind(this)\n        \n        // var animateDialogDisappearing = this._dialogView.animateDisappearing;\n        // this._dialogView.animateDisappearing = function (this: SearchableDropdown) {\n        //     animateDialogDisappearing.call(this._dialogView);\n        //     this.style.zIndex = \"0\";\n        //     if (this.highlightLabel) {\n        //         this.highlightLabel.textColor = CBColor.primaryContentColor;\n        //         this.highlightLabel.style.zIndex = \"0\";\n        //         this.highlightLabel.userInteractionEnabled = YES;\n        //     }\n        \n        //     this._searchTextField.blur();\n        \n        // }.bind(this)\n        \n        \n        \n        \n        \n        this._tableView.numberOfRows = function (this: SearchableDropdown<T>) {\n    \n            var result = this.drawingData.length\n    \n            if (IS_NOT(this.isSingleSelection) && this.showsSelectedSectionInMultipleSelectionMode) {\n                \n                result = result + this.selectedData.length\n                \n            }\n            \n            \n            return result\n            \n        }.bind(this)\n    \n    \n        const newReusableViewForIdentifierFunction = this._tableView.newReusableViewForIdentifier.bind(this._tableView)\n    \n        this._tableView.newReusableViewForIdentifier = function (\n            this: SearchableDropdown<T>,\n            identifier: string,\n            rowIndex: number\n        ) {\n            \n            //if (identifier == \"SelectedItemRow\") {\n    \n            const view = new SearchableDropdownRow(elementID + identifier + rowIndex)\n    \n            view.stopsPointerEventPropagation = NO\n            view.pausesPointerEvents = NO\n            \n            return view\n            \n            // }\n            \n            // return newReusableViewForIdentifierFunction(identifier, rowIndex);\n            \n        }.bind(this)\n    \n    \n        const viewForSelectedItemRow = function (this: SearchableDropdown<T>, index: number) {\n        \n            const view = this._tableView.reusableViewForIdentifier(\"SelectedItemRow\", index) as CBCheckbox\n        \n            view.titleLabel.text = LanguageService.stringForCurrentLanguage(this.selectedData[index].title)\n        \n            view.selected = YES\n        \n            return view\n        \n        }.bind(this)\n    \n    \n    \n    \n    \n        this._tableView.viewForRowWithIndex = function (this: SearchableDropdown<T>, index: number) {\n    \n    \n    \n    \n            const view = this._tableView.reusableViewForIdentifier(\"SubjectView\", index) as SearchableDropdownRow\n    \n    \n            view.style.borderBottomColor = \"\"\n            view.style.borderBottomStyle = \"\"\n            view.style.borderBottomWidth = \"\"\n    \n    \n    \n    \n            const rowWasHovered = function (this: SearchableDropdown<T>, sender: SearchableDropdownRow, event: Event) {\n        \n                this.focusedRowIndex = index\n        \n            }.bind(this)\n    \n            view.addTargetForControlEvent(UIButton.controlEvent.PointerHover, rowWasHovered)\n            \n            view.removeTargetForControlEvent(\n                UIButton.controlEvent.PointerHover,\n                view._SearchableDropdownRowWasHoveredFunction\n            )\n            \n            view._SearchableDropdownRowWasHoveredFunction = rowWasHovered\n            \n            view.focused = (this.focusedRowIndex == index)\n            \n            \n            \n            if (!this.isSingleSelection && this.showsSelectedSectionInMultipleSelectionMode) {\n                \n                if (index < this.selectedData.length) {\n                    \n                    \n                    view.type = SearchableDropdownRow.type.selectedItem\n                    \n                    view.titleText = LanguageService.stringForCurrentLanguage(this.selectedData[index].title)\n                    \n                    view.selected = YES\n                    \n                    view.updateContentForCurrentState()\n                    \n                    \n                    if (index == this.selectedData.length - 1) {\n                        \n                        view.style.borderBottomColor = UIColor.colorWithRGBA(100, 100, 100).stringValue\n                        \n                        view.style.borderBottomStyle = \"solid\"\n                        \n                        view.style.borderBottomWidth = \"1px\"\n                        \n                    }\n                    \n                    var viewWasTapped = function (this: SearchableDropdown<T>, sender, event) {\n                        \n                        \n                        this.selectedIndices.removeElementAtIndex(index)\n    \n                        const selectedItem = this.selectedData[index]\n    \n                        this.selectedData.removeElement(selectedItem)\n                        \n                        \n                        view.selected = NO\n                        \n                        this.selectionDidChange(this.selectedData)\n                        \n                        //this.performFunctionWithDelay(0.15, function (this: SearchableDropdown<T>) {\n                        \n                        this.updateContentForCurrentSelection()\n                        \n                        //}.bind(this))\n                        \n                        // // Unselecting main body item if possible\n                        // var visibleRows = this._tableView._visibleRows as SearchableDropdownRow[]\n                        \n                        // var visibleIndices = this._tableView.indexesForVisibleRows()\n                        \n                        // visibleRows.forEach(function (this: SearchableDropdown<T>, visibleRow: SearchableDropdownRow, visibleRowIndex: number, visibleRowsArray: SearchableDropdownRow[]) {\n                        \n                        //     var rowDataIndex = visibleIndices[visibleRowIndex]\n                        \n                        //     visibleRow.selected = this.selectedData.contains(this.drawingData[rowDataIndex])\n                        \n                        // }.bind(this))\n                        \n                        \n                        \n                        \n                        this._searchTextField.focus()\n                        \n                        \n                        if ((view as any).viewWasTappedFunction) {\n                            view.removeTargetForControlEvents([\n                                UIView.controlEvent.EnterDown, UIView.controlEvent.PointerTap\n                            ], (view as any).viewWasTappedFunction)\n                        }\n                        \n                        \n                    }.bind(this)\n                    \n                    \n                    // Removing previous event target if possible\n                    if ((view as any).viewWasTappedFunction) {\n                        view.removeTargetForControlEvents([\n                            UIView.controlEvent.EnterDown, UIView.controlEvent.PointerTap\n                        ], (view as any).viewWasTappedFunction)\n                    }\n                    \n                    \n                    // Adding event target\n                    view.addTargetForControlEvents([\n                        UIView.controlEvent.EnterDown, UIView.controlEvent.PointerTap\n                    ], viewWasTapped);\n                    (view as any).viewWasTappedFunction = viewWasTapped\n                    \n                    \n                    return view\n                    \n                    \n                    \n                }\n                \n                index = index - this.selectedData.length\n                \n            }\n            \n            \n            \n            // Datapoint\n            const datapoint = this.drawingData[index]\n    \n            if (IS_NOT(datapoint)) {\n                return\n            }\n            \n            // Setting different style for section title rows\n            if (datapoint.isADropdownDataSection) {\n                \n                view.type = SearchableDropdownRow.type.sectionTitle\n                \n                view.userInteractionEnabled = NO\n                \n            }\n            else {\n                \n                view.type = SearchableDropdownRow.type.selectableItem\n                \n                view.userInteractionEnabled = YES\n                \n            }\n            \n            if (datapoint._id == (this._customItem || nil)._id) {\n                \n                view.type = SearchableDropdownRow.type.customItem\n                \n            }\n            \n            view.updateContentForNormalState()\n            \n            view.updateContentForCurrentState()\n            \n            \n            // Setting row title\n            view.titleText = LanguageService.stringForCurrentLanguage(datapoint.title)\n            view.titleLabel.textAlignment = UITextView.textAlignment.left\n            \n            \n            // Highlighting of row\n            //view.highlighted = (this.highlightedRowIndex == index);\n            \n            \n            // Selecting of rows\n            \n            view.selected = this.selectedRowIdentifiers.contains(datapoint._id) //this.selectedIndices.contains(index); //this.selectedDataContains(datapoint);\n            \n            var viewWasTapped = function (this: SearchableDropdown<T>, sender, event) {\n                \n                if (view.selected) {\n                    \n                    this.selectedIndices.removeElement(index)\n                    \n                    this.selectedData.removeElement(datapoint)\n                    \n                }\n                else {\n                    \n                    \n                    if (this.isSingleSelection) {\n                        \n                        this.selectedIndices = [index]\n                        \n                        this.selectedData = [datapoint]\n                        \n                        // view.selected = YES;\n                        \n                        this.selectionDidChange(this.selectedData)\n                        \n                        this.updateContentForCurrentSelection()\n                        \n                        this._dialogView.dismiss()\n                        \n                        return\n                        \n                    }\n                    else {\n                        \n                        this.selectedIndices.push(index)\n                        \n                        this.selectedData.push(datapoint)\n                        \n                        \n                        \n                    }\n                    \n                    \n                    \n                }\n                \n                //view.selected = !view.selected;\n    \n                const selectedData = this.selectedData\n    \n                if (!view.selected) {\n                    \n                    \n                    view.selected = YES\n                    \n                    this.performFunctionWithDelay(0.25, function (this: SearchableDropdown<T>) {\n                        \n                        \n                        this.selectionDidChange(selectedData)\n                        \n                        this.updateContentForCurrentSelection()\n                        \n                        if (this.showsSelectedSectionInMultipleSelectionMode) {\n                            \n                            this._tableView.contentOffset = this._tableView.contentOffset.pointByAddingY(view.frame.height)\n                            \n                        }\n                        \n                        \n                    }.bind(this))\n                    \n                    \n                }\n                else {\n                    \n                    view._checkbox.selected = NO\n                    \n                    this.selectionDidChange(selectedData)\n                    \n                    this.performFunctionWithDelay(0.15, function (this: SearchableDropdown<T>) {\n                        \n                        \n                        view.selected = NO\n                        \n                        this.updateContentForCurrentSelection()\n                        \n                        if (this.showsSelectedSectionInMultipleSelectionMode) {\n                            \n                            this._tableView.contentOffset = this._tableView.contentOffset.pointByAddingY(-view.frame.height)\n                            \n                        }\n                        \n                        \n                        \n                    }.bind(this))\n                    \n                    \n                    \n                }\n                \n                \n                \n                this._searchTextField.focus()\n                \n            }.bind(this)\n            \n            // Removing previous event target if possible\n            if ((view as any).viewWasTappedFunction) {\n                view.removeTargetForControlEvents([\n                    UIView.controlEvent.EnterDown, UIView.controlEvent.PointerUpInside\n                ], (view as any).viewWasTappedFunction)\n            }\n            \n            // Adding event target\n            view.addTargetForControlEvents([\n                UIView.controlEvent.EnterDown, UIView.controlEvent.PointerUpInside\n            ], viewWasTapped);\n            (view as any).viewWasTappedFunction = viewWasTapped\n            \n            return view\n            \n        }.bind(this)\n        \n        this._keyValueStringFilter = new UIKeyValueStringFilter()\n        \n    }\n    \n    \n    \n    \n    \n    openDropdown() {\n        this._dialogView.showInView(this.rootView, YES)\n        this._searchTextField.focus()\n    }\n    \n    closeDropdown() {\n        this._dialogView.dismiss(YES)\n    }\n    \n    boundsDidChange() {\n        \n        super.boundsDidChange()\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    set dropdownCode(dropdownCode: string) {\n        \n        this._dropdownCode = dropdownCode\n        \n        this.fetchDropdownDataForCode(dropdownCode)\n        \n    }\n    \n    \n    get dropdownCode() {\n        \n        return this._dropdownCode\n        \n    }\n    \n    \n    fetchDropdownDataForCode(dropdownCode: string) {\n        \n        CBCore.sharedInstance.socketClient.sendMessageForKeyWithPolicy(\n            \"RetrieveDropdownDataForCode\",\n            dropdownCode,\n            CBSocketClient.completionPolicy.storedOrFirst,\n            function (this: SearchableDropdown<T>, responseMessage: CBDropdownData<T>) {\n                \n                if (IS(responseMessage)) {\n                    \n                    //alert(\"Loaded data.\")\n                    \n                }\n                else {\n                    \n                    //alert(\"Failed to load data.\")\n                    return\n                    \n                }\n    \n                const dropdownData: CBDropdownDataItem<T>[] = []\n    \n                responseMessage.data.forEach(function (sectionOrRow, index, array) {\n                    \n                    if (sectionOrRow.isADropdownDataSection) {\n    \n    \n                        const dataSection: CBDropdownDataItem<T> = {\n        \n                            _id: sectionOrRow._id,\n                            title: sectionOrRow.title,\n                            rowsData: [],\n                            isADropdownDataSection: YES,\n                            isADropdownDataRow: NO,\n        \n                            attachedObject: sectionOrRow.attachedObject,\n        \n                            itemCode: sectionOrRow.itemCode,\n                            dropdownCode: sectionOrRow.dropdownCode\n        \n                        }\n    \n                        const rowsData = dataSection.rowsData\n    \n                        sectionOrRow.rowsData.forEach(function (rowData, index, array) {\n                            \n                            rowsData.push({\n                                \n                                _id: rowData._id,\n                                title: rowData.title,\n                                isADropdownDataSection: NO,\n                                isADropdownDataRow: YES,\n                                \n                                attachedObject: rowData.attachedObject,\n                                \n                                itemCode: rowData.itemCode,\n                                dropdownCode: rowData.dropdownCode\n                                \n                            })\n                            \n                        })\n                        \n                        dataSection.rowsData = rowsData\n                        \n                        dropdownData.push(dataSection)\n                        \n                    }\n                    else {\n                        \n                        dropdownData.push({\n                            \n                            _id: sectionOrRow._id,\n                            title: sectionOrRow.title,\n                            isADropdownDataRow: YES,\n                            \n                            itemCode: sectionOrRow.itemCode,\n                            dropdownCode: sectionOrRow.dropdownCode,\n                            \n                            attachedObject: sectionOrRow.attachedObject\n                            \n                        } as any)\n                        \n                    }\n                    \n                })\n                \n                this.data = dropdownData\n                \n                this.didLoadDataForDropdownCode()\n                \n            }.bind(this)\n        )\n        \n    }\n    \n    \n    \n    \n    \n    didLoadDataForDropdownCode() {\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get focusedRowIndex() {\n        \n        return this._focusedRowIndex\n        \n    }\n    \n    set focusedRowIndex(focusedRowIndex: number) {\n    \n        const previousFocusedRowIndex = this.focusedRowIndex\n    \n        this._focusedRowIndex = focusedRowIndex\n        \n        \n        if (previousFocusedRowIndex != focusedRowIndex) {\n            \n            (this._tableView.visibleRowWithIndex(previousFocusedRowIndex) as SearchableDropdownRow).focused = NO\n    \n            const focusedRow = this._tableView.visibleRowWithIndex(this.focusedRowIndex) as SearchableDropdownRow\n    \n            focusedRow.focused = YES\n            \n            if (!this.keepFocusedRowVisible) {\n                \n                return\n                \n            }\n    \n            var contentOffset = this._tableView.contentOffset\n    \n            if (focusedRow.frame.y < contentOffset.y) {\n                \n                contentOffset.y = focusedRow.frame.y\n                \n            }\n            \n            if (focusedRow.frame.max.y > (contentOffset.y + this._tableView.bounds.height)) {\n                \n                contentOffset = contentOffset.pointByAddingY(-(contentOffset.y + this._tableView.bounds.height -\n                    focusedRow.frame.max.y))\n                \n            }\n    \n            const animationDuration = this._tableView.animationDuration\n    \n            this._tableView.animationDuration = 0\n            \n            this._tableView.contentOffset = contentOffset\n            \n            this._tableView.animationDuration = animationDuration\n            \n        }\n        \n        \n    }\n    \n    \n    set expandedContainerViewHeight(expandedContainerViewHeight: number) {\n        \n        \n        this._expandedContainerViewHeight = expandedContainerViewHeight\n        \n        this._dialogView.setNeedsLayout()\n        \n        \n    }\n    \n    \n    get expandedContainerViewHeight() {\n        \n        if (IS(this._expandedContainerViewHeight)) {\n            \n            return this._expandedContainerViewHeight\n            \n        }\n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding\n    \n        const result = this.superview.bounds.height - this.frame.max.y - padding\n    \n    \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    selectedDataContains(datapoint: CBDropdownDataItem<T>) {\n        for (var i = 0; i < this.selectedData.length; i++) {\n            const value = this.selectedData[i]\n            if (value._id == datapoint._id) {\n                return YES\n            }\n        }\n        return NO\n    }\n    \n    \n    \n    \n    \n    updateContentForNormalState() {\n        \n        \n        this.style.borderBottom = \"1px solid rgba(0,0,0,0.12)\"\n        \n        this.titleLabel.textColor = CBColor.primaryContentColor\n        this.backgroundColor = UIColor.transparentColor\n        \n        this.style.borderBottomColor = CBColor.primaryContentColor.colorWithAlpha(0.12).stringValue\n        \n        \n    }\n    \n    updateContentForHighlightedState() {\n        \n        this.style.borderBottomWidth = \"2px\"\n        \n        this.style.borderBottomColor = this.tintColor.stringValue\n        \n    }\n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \"SelectionDidChange\": \"SelectionDidChange\"\n        \n    })\n    \n    \n    \n    selectionDidChange(selectedRows: CBDropdownDataItem<T>[]) {\n        \n        // Update title to indicate the selection\n        this.updateTitleWithSelection(selectedRows)\n        \n        this.sendControlEventForKey(SearchableDropdown.controlEvent.SelectionDidChange, nil)\n        \n    }\n    \n    updateContentForCurrentSelection() {\n        \n        // Update selected rows in the top of the table view\n        this._tableView.reloadData()\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    get placeholderText() {\n        \n        if (IS_UNDEFINED(this._placeholderText)) {\n            \n            \n            this._placeholderText = \"Not selected\"\n            \n            \n        }\n        \n        return this._placeholderText\n        \n    }\n    \n    set placeholderText(placeholderText: string) {\n        \n        this._placeholderText = placeholderText\n        \n        this.updateTitleWithSelection(this.selectedData)\n        \n    }\n    \n    \n    setPlaceholderText(key: string, defaultString: string, parameters?: { [x: string]: string }) {\n        \n        this.placeholderLocalizedTextObject = LanguageService.localizedTextObjectForKey(key, defaultString, parameters)\n        \n        //this.titleLabel.setText(key, defaultString, parameters);\n        \n    }\n    \n    get placeholderLocalizedTextObject() {\n        \n        if (IS_UNDEFINED(this._placeholderLocalizedTextObject)) {\n            \n            \n            this._placeholderLocalizedTextObject = LanguageService.localizedTextObjectForKey(\n                \"searchableDropdownNotSelected\")\n            \n            \n        }\n        \n        return this._placeholderLocalizedTextObject\n        \n    }\n    \n    set placeholderLocalizedTextObject(placeholderText: UILocalizedTextObject) {\n        \n        this._placeholderLocalizedTextObject = placeholderText\n        \n        this.updateTitleWithSelection(this.selectedData)\n        \n    }\n    \n    \n    updateTitleWithSelection(selectedRows: CBDropdownDataItem<T>[]) {\n        \n        \n        this.titleLabel.localizedTextObject = this.placeholderLocalizedTextObject\n        \n        if (selectedRows && selectedRows.length) {\n    \n            const maxWidth = this.titleLabel.bounds.width\n            this.titleLabel.localizedTextObject = nil\n            this.titleLabel.text = \"\"\n            var stopLooping = NO\n    \n            selectedRows.forEach(function (this: SearchableDropdown<T>, selectedDatapoint, index, array) {\n                \n                if (stopLooping) {\n                    return\n                }\n    \n                var selectedString = LanguageService.stringForCurrentLanguage(selectedDatapoint.title)\n                if (index) {\n                    selectedString = \", \" + selectedString\n                }\n                const previousText = this.titleLabel.text\n                this.titleLabel.text = this.titleLabel.text + selectedString\n                \n                this.overflowLabel.text = \"+\" + (array.length - index - 1)\n                if (index == array.length - 1) {\n                    this.overflowLabel.text = \"\"\n                }\n                \n                if (index && (this.bounds.width -\n                    (this.overflowLabel.intrinsicContentWidth() + this.titleLabel.intrinsicContentWidth()) - 20) < 0) {\n                    \n                    this.titleLabel.text = previousText\n                    this.overflowLabel.text = \"+\" + (array.length - index - 2 * 0)\n                    \n                    stopLooping = YES\n                }\n                \n            }, this)\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    updateFilteredData(filteringString: string) {\n        \n        this._filteredData = []\n        \n        this.data.forEach(function (\n            this: SearchableDropdown<T>,\n            sectionOrRow: CBDropdownDataItem<T>,\n            index: number,\n            array: CBDropdownDataItem<T>[]\n        ) {\n            \n            if (LanguageService.stringForCurrentLanguage(sectionOrRow.title).toLowerCase().contains(filteringString.toLowerCase())) {\n                \n                this.filteredData.push(sectionOrRow)\n                \n            }\n            else if (sectionOrRow.isADropdownDataSection) {\n                \n                this._keyValueStringFilter.filterData(\n                    filteringString,\n                    sectionOrRow.rowsData,\n                    this._excludedData,\n                    \"title.\" + LanguageService.currentLanguageKey,\n                    sectionOrRow,\n                    function (\n                        this: SearchableDropdown<T>,\n                        filteredData,\n                        filteredIndexes,\n                        sectionFromThread: CBDropdownDataItem<T>\n                    ) {\n                        \n                        if (filteredData.length) {\n                            \n                            this.filteredData.push({\n                                \n                                _id: sectionFromThread._id,\n                                title: sectionFromThread.title,\n                                rowsData: filteredData,\n                                isADropdownDataSection: sectionFromThread.isADropdownDataSection,\n                                isADropdownDataRow: sectionFromThread.isADropdownDataRow,\n                                \n                                attachedObject: sectionFromThread.attachedObject,\n                                \n                                itemCode: sectionFromThread.itemCode,\n                                dropdownCode: sectionFromThread.dropdownCode\n                                \n                            })\n                            \n                            if (this.allowsCustomItem && this._searchTextField.text && this._customItem) {\n                                \n                                this.filteredData.removeElement(this._customItem)\n                                \n                                this.filteredData.push(this._customItem)\n                                \n                            }\n                            \n                            this._isDrawingDataValid = NO\n                            \n                            this._tableView.reloadData()\n                            \n                        }\n                        \n                    }.bind(this)\n                )\n                \n            }\n            \n        }.bind(this))\n        \n        \n        if (this.allowsCustomItem && this._searchTextField.text) {\n            \n            this.filteredData.removeElement(this._customItem)\n            \n            this.initCustomItemWithTitle(this._searchTextField.text)\n            \n            this.filteredData.push(this._customItem)\n            \n        }\n        \n        \n        if (this.filteredData.length) {\n            \n            this.focusedRowIndex = 0\n            \n        }\n        else {\n            \n            this.focusedRowIndex = null\n            \n        }\n        \n        this._isDrawingDataValid = NO\n        \n        this._tableView.reloadData()\n        \n    }\n    \n    \n    \n    \n    \n    initCustomItemWithTitle(title: string) {\n        \n        if (IS_NOT(title)) {\n            \n            this._customItem = undefined\n            \n        }\n        else {\n            \n            this._customItem = {\n                \n                _id: \"\" + MAKE_ID(),\n                title: LanguageService.localizedTextObjectForText(title),\n                rowsData: [],\n                isADropdownDataSection: NO,\n                isADropdownDataRow: YES,\n                \n                attachedObject: undefined,\n                \n                itemCode: \"custom_item\",\n                dropdownCode: this.dropdownCode\n                \n            }\n            \n        }\n        \n    }\n    \n    \n    selectItemOrCustomItemWithTitle(title: string) {\n        \n        if (IS_NOT(title)) {\n            \n            this._customItem = undefined\n            \n            \n            \n        }\n        else {\n    \n            var item = this.drawingData.find(function (dataItem, index, array) {\n        \n                return (LanguageService.stringForCurrentLanguage(dataItem.title) == title)\n        \n            })\n    \n    \n            if (this.allowsCustomItem && IS_NOT(item)) {\n                \n                this._searchTextField.text = title\n                \n                this.updateFilteredData(title)\n                \n                item = this._customItem\n                \n            }\n            \n            \n            if (IS_NOT(this.isSingleSelection)) {\n                \n                if (IS_NOT(this.selectedDataContains(item))) {\n    \n                    const selectedItemCodes = this.selectedItemCodes.copy()\n    \n                    selectedItemCodes.push(item.itemCode)\n                    \n                    this.selectedItemCodes = selectedItemCodes\n                    \n                    \n                }\n                \n                return\n                \n            }\n            \n            this.selectedItemCodes = [item.itemCode]\n            \n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    set data(data: CBDropdownDataItem<T>[]) {\n        \n        this._data = data\n        \n        this.updateFilteredData(this._searchTextField.text)\n        \n    }\n    \n    get data() {\n        \n        return this._data\n        \n    }\n    \n    set filteredData(data: CBDropdownDataItem<T>[]) {\n        \n        this._filteredData = data\n        \n        this._isDrawingDataValid = NO\n        \n    }\n    \n    get filteredData() {\n        return this._filteredData\n    }\n    \n    get drawingData(): CBDropdownDataItem<T>[] {\n        \n        if (this._isDrawingDataValid) {\n            return this._drawingData\n        }\n    \n        const result: CBDropdownDataItem<T>[] = []\n    \n        this._filteredData.forEach(function (this: SearchableDropdown<T>, section: CBDropdownDataItem<T>) {\n            \n            result.push({\n                \n                _id: section._id,\n                title: section.title,\n                \n                // @ts-ignore\n                rowsData: null,\n                isADropdownDataSection: section.isADropdownDataSection,\n                isADropdownDataRow: NO,\n                \n                attachedObject: section.attachedObject,\n                \n                itemCode: section.itemCode,\n                dropdownCode: section.dropdownCode\n                \n                \n            })\n            \n            if (section.rowsData) {\n                \n                section.rowsData.forEach(function (this: SearchableDropdown<T>, row) {\n                    result.push(row)\n                }.bind(this))\n                \n            }\n            \n        }.bind(this))\n        \n        \n        this._drawingData = result\n        this._isDrawingDataValid = YES\n        \n        return result\n        \n    }\n    \n    get selectedData() {\n        \n        return this._selectedData\n        \n    }\n    \n    set selectedData(selectedData: CBDropdownDataItem<T>[]) {\n        \n        this._selectedData = selectedData\n        \n    }\n    \n    \n    \n    \n    \n    clearSelection() {\n        \n        this.selectedData = []\n        this.selectedIndices = []\n        \n        this.updateTitleWithSelection(this.selectedData)\n        this.updateContentForCurrentSelection()\n        this.selectionDidChange(this.selectedData)\n        \n    }\n    \n    \n    \n    \n    \n    get selectedItemCodes() {\n        return this.selectedData.map(function (item) {\n            return item.itemCode\n        })\n    }\n    \n    set selectedItemCodes(selectedItemCodes: string[]) {\n    \n        const selectedData = []\n        const selectedIndices = []\n    \n        this._drawingData.forEach(function (item, index, array) {\n            \n            if (selectedItemCodes.contains(item.itemCode)) {\n                \n                selectedData.push(item)\n                selectedIndices.push(index)\n                \n            }\n            \n        })\n        \n        \n        this.selectedData = selectedData\n        this.selectedIndices = selectedIndices\n        \n        this.updateTitleWithSelection(this.selectedData)\n        this.updateContentForCurrentSelection()\n        this.selectionDidChange(this.selectedData)\n        \n        \n    }\n    \n    \n    \n    \n    \n    get selectedRowIdentifiers(): string[] {\n        const result = []\n        this.selectedData.forEach(function (this: SearchableDropdown<T>, selectedDatapoint: CBDropdownDataItem<T>) {\n            result.push(selectedDatapoint._id)\n        }.bind(this))\n        return result\n    }\n    \n    \n    \n    wasAddedToViewTree() {\n        \n        super.wasAddedToViewTree()\n        \n        this.setNeedsLayout()\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding\n    \n        this.updateTitleWithSelection(this.selectedData)\n        \n        if (this._rightImageView) {\n            \n            // var imageHeight = bounds.height - padding;\n            // this._rightImageView.frame = new UIRectangle(bounds.width - imageHeight - padding * 0.5, padding * 0.5, imageHeight, imageHeight);\n            \n            this._rightImageView.frame = bounds.rectangleWithInsets(0, padding *\n                0.5, 0, 0).rectangleWithWidth(24, 1).rectangleWithHeight(24, 0.5)\n            \n        }\n        \n        if (this.overflowLabel) {\n            \n            //this.overflowLabel.frame = bounds.rectangleWithInsets(padding, padding, 0, 0).rectangleWithInsets(0, this._rightImageView.bounds.width || 0, 0, 0).rectangleWithWidth(36, 1);\n            \n            //this.titleLabel.style.maxWidth = \"\" + (bounds.width - (bounds.width - this.titleLabel.viewHTMLElement.offsetLeft - (this.overflowLabel.frame.x || 0)))\n            \n            this.overflowLabel.style.width = \"36px\"\n            this.overflowLabel.style.right = \"32px\"\n            \n            this.overflowLabel.centerYInContainer()\n            \n            \n            this.titleLabel.style.marginRight = \"60px\"\n            \n            //this.overflowLabel.centerYInContainer();\n            //this.titleLabel.frame = this.titleLabel.frame.rectangleWithWidth(bounds.width - (bounds.width - this.titleLabel.frame.x - (this.overflowLabel.frame.x || 0)))\n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { NO, UIButton, UIColor, YES } from \"uicore-ts\"\nimport { CBColor } from \"./CBColor\"\nimport { CBCheckbox } from \"./CBCheckbox\"\nimport { LanguageService } from \"cbcore-ts\"\n\n\nexport class SearchableDropdownRow extends UIButton {\n    \n    _checkbox: CBCheckbox\n    \n    type = SearchableDropdownRow.type.selectableItem\n    _SearchableDropdownRowWasHoveredFunction: any\n    \n    constructor(elementID: string) {\n        \n        super(elementID)\n        \n    }\n    \n\n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData) {\n        \n        super.initView(elementID, viewHTMLElement, initViewData)\n        \n        \n        \n        this._checkbox = new CBCheckbox(elementID + \"Checkbox\")\n        this._checkbox.userInteractionEnabled = NO\n        \n        this.addSubview(this._checkbox)\n        \n        \n        \n        \n        \n        this.style.outline = \"none\"\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    set titleText(titleText: string) {\n        \n        this.titleLabel.text = titleText\n        this._checkbox.titleLabel.text = titleText\n        \n    }\n    \n    get titleText() {\n        \n        return this.titleLabel.text\n        \n    }\n    \n    \n    \n    set selected(selected: boolean) {\n        \n        super.selected = selected\n        \n        this._checkbox.selected = selected\n        \n        \n        \n    }\n    \n    get selected() {\n        \n        return super.selected\n        \n    }\n    \n    \n    \n    \n    \n    set focused(focused: boolean) {\n        \n        this._focused = focused\n        \n        this.updateContentForCurrentState()\n        \n        \n        \n        \n    }\n    \n    get focused() {\n        \n        return this._focused\n        \n    }\n    \n    \n    \n    \n    \n    static type = {\n        \n        \"sectionTitle\": \"SectionTitle\",\n        \"selectedItem\": \"SelectedItem\",\n        \"selectableItem\": \"SelectableItem\",\n        \"customItem\": \"CustomItem\"\n        \n    }\n    \n    \n    \n    \n    \n    updateContentForNormalState() {\n        \n        \n        if (this.type == SearchableDropdownRow.type.sectionTitle) {\n            \n            \n            \n            this.backgroundColor = UIColor.transparentColor\n            this.titleLabel.textColor = CBColor.primaryContentColor.colorWithAlpha(0.5)\n            \n            this.style.borderTop = \"1px solid rgba(0, 0, 0, 0.3)\"\n            \n            this.titleLabel.style.marginLeft = \"\"\n            \n            this.textSuffix = \"\"\n            \n            if (this._checkbox) {\n                \n                this._checkbox.hidden = YES\n                \n            }\n            \n            this.titleLabel.hidden = NO\n            \n            \n            \n            \n        }\n        else if (this.type == SearchableDropdownRow.type.selectedItem) {\n            \n            this.backgroundColor = UIColor.transparentColor\n            this.titleLabel.textColor = CBColor.primaryTintColor\n            \n            this.style.borderTop = \"\"\n            \n            //this.titleLabel.style.marginLeft = \"20px\"\n            \n            this.textSuffix = \"\"\n            \n            if (this._checkbox) {\n                \n                this._checkbox.hidden = NO\n                \n                this._checkbox.titleLabel.textColor = CBColor.primaryContentColor\n                \n            }\n            \n            this.titleLabel.hidden = YES\n            \n            \n        }\n        else if (this.type == SearchableDropdownRow.type.customItem) {\n            \n            this.backgroundColor = UIColor.transparentColor\n            this.titleLabel.textColor = CBColor.primaryTintColor\n            \n            this.style.borderTop = \"1px solid rgba(0, 0, 0, 0.3)\"\n            \n            this.titleLabel.style.marginLeft = \"\"\n            \n            this.textSuffix = LanguageService.stringForKey(\n                \"searchableDropdownCustomItem\",\n                LanguageService.currentLanguageKey,\n                \"-Custom item\"\n            )\n            \n            if (this._checkbox) {\n                \n                this._checkbox.hidden = YES\n                \n            }\n            \n            this.titleLabel.hidden = NO\n            \n            \n        }\n        else {\n            \n            \n            \n            this.backgroundColor = UIColor.transparentColor\n            this.titleLabel.textColor = CBColor.primaryTintColor\n            \n            this.style.borderTop = \"\"\n            \n            this.titleLabel.style.marginLeft = \"20px\"\n            \n            this.textSuffix = \"\"\n            \n            if (this._checkbox) {\n                \n                this._checkbox.hidden = YES\n                \n            }\n            \n            this.titleLabel.hidden = NO\n            \n            \n        }\n        \n        this.userInteractionEnabled = YES\n        \n        \n        \n        \n    }\n    \n    \n    get textSuffix() {\n        \n        return this.titleLabel.textSuffix\n        \n    }\n    \n    set textSuffix(textSuffix: string) {\n        \n        this.titleLabel.textSuffix = textSuffix\n        \n        this._checkbox.titleLabel.textSuffix = textSuffix\n        \n    }\n    \n    \n    updateContentForHoveredState() {\n        \n        \n        this.backgroundColor = CBColor.primaryContentColor.colorWithAlpha(0.05)\n        \n        \n    }\n    \n    \n    updateContentForHighlightedState() {\n        \n        \n        this.backgroundColor = CBColor.primaryContentColor.colorWithAlpha(0.08)\n        \n        \n    }\n    \n    updateContentForFocusedState() {\n        \n        \n        this.backgroundColor = CBColor.primaryContentColor.colorWithAlpha(0.08)\n        \n        \n    }\n    \n    \n    \n    updateContentForSelectedState() {\n        \n        \n        this.updateContentForNormalState()\n        \n        if (this.type == SearchableDropdownRow.type.selectableItem || this.type ==\n            SearchableDropdownRow.type.customItem) {\n            \n            this._checkbox.hidden = NO\n            //this._checkbox.titleLabel.hidden = YES;\n            \n            this._checkbox.titleLabel.textColor = CBColor.primaryTintColor\n            \n            this._titleLabel.hidden = YES\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    wasRemovedFromViewTree() {\n        \n        super.wasRemovedFromViewTree()\n        \n        this.highlighted = NO\n        this.hovered = NO\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        \n        if (this._checkbox) {\n            \n            \n            \n            this._checkbox.style.top = \"25%\"\n            this._checkbox.style.height = \"30px\"\n            \n            \n            this._checkbox.style.left = \"\" + this.contentPadding + \"px\"\n            this._checkbox.style.right = \"\" + this.contentPadding + \"px\"\n            \n            \n        }\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil, UITextField, UIView } from \"uicore-ts\"\n\n\nexport class SearchTextField extends UIView {\n    \n    _textField: UIView\n    _searchButton: UIView\n    \n    constructor(elementID: string) {\n        \n        super(elementID)\n        \n    }\n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        \n        viewHTMLElement.classList.add(\"input\", \"input--search\")\n        \n        \n        viewHTMLElement.innerHTML = \"\\\n            <button type=\\\"button\\\" class=\\\"input__button\\\">\\\n                <i class=\\\"material-icons\\\">search</i>\\\n            </button>\\\n            <input type=\\\"search\\\" class=\\\"input__field\\\" placeholder=\\\"Search\\\">\"\n        \n        \n        \n        \n        this._textField = new UIView(nil, this.textFieldElement)\n        this._searchButton = new UIView(nil, this.searchButtonElement)\n        \n        \n        \n        this._searchButton.addTargetForControlEvents([\n            UIView.controlEvent.EnterDown, UIView.controlEvent.PointerUpInside\n        ], function (this: SearchTextField, sender: UIView, event: Event) {\n            \n            this.performSearch()\n            \n        }.bind(this))\n        \n        this._textField.addTargetForControlEvent(\n            UIView.controlEvent.EnterDown,\n            function (this: SearchTextField, sender: UIView, event: Event) {\n                \n                this.performSearch()\n                \n            }.bind(this)\n        )\n        \n        \n        \n        this._textField.viewHTMLElement.oninput = function (this: SearchTextField, event) {\n            \n            \n            this._textField.sendControlEventForKey(UITextField.controlEvent.TextChange, event)\n            \n            \n        }.bind(this)\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    get searchButtonElement() {\n        \n        return this.viewHTMLElement.querySelector(\"button\") as HTMLButtonElement\n        \n        \n    }\n    \n    get textFieldElement() {\n        \n        return this.viewHTMLElement.querySelector(\"input\") as HTMLInputElement\n        \n        \n    }\n    \n    \n    \n    set placeholderText(placeholderText: string) {\n        \n        this.textFieldElement.setAttribute(\"placeholder\", placeholderText)\n        \n    }\n    \n    get placeholderText() {\n        \n        \n        return this.textFieldElement.getAttribute(\"placeholder\")\n        \n        \n    }\n    \n    \n    \n    \n    \n    get text() {\n        \n        return this.textFieldElement.value\n        \n    }\n    \n    set text(text: string) {\n        \n        this.textFieldElement.value = text\n        \n    }\n    \n    \n    \n    focus() {\n        \n        this.textFieldElement.focus()\n        \n    }\n    \n    blur() {\n        \n        this.textFieldElement.blur()\n        \n    }\n    \n    \n    \n    \n    \n    performSearch(): any {\n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import {\n    FIRST,\n    IS,\n    IS_DEFINED,\n    IS_NOT,\n    MAKE_ID,\n    nil,\n    NO,\n    UIButton,\n    UIColor,\n    UIRoute,\n    UITableView,\n    UITextArea,\n    UITextView,\n    UIView,\n    UIViewController,\n    YES\n} from \"uicore-ts\"\nimport { CBColor } from \"./Custom components/CBColor\"\nimport { CBCore } from \"cbcore-ts\"\nimport { CBDropdownDataItem, CBSocketMessageSendResponseFunction } from \"../../../cbcore-ts/scripts/CBDataInterfaces\"\nimport { IS_NOT_SOCKET_ERROR } from \"cbcore-ts\"\nimport { CBButton } from \"./Custom components/CBButton\"\nimport { CBDialogViewShower } from \"./Custom components/CBDialogViewShower\"\nimport { CBTextField } from \"./Custom components/CBTextField\"\nimport { LanguageService } from \"cbcore-ts\"\nimport { SearchableDropdown } from \"./Custom components/SearchableDropdown\"\nimport { SearchableDropdownRow } from \"./Custom components/SearchableDropdownRow\"\n\n\n\n\n\nexport class InternalLanguageSettingsViewController extends UIViewController {\n    \n    \n    titleLabel: UITextView\n    loadButton: UIButton\n    languageKeyTextField: CBTextField\n    tableView: UITableView\n    textArea: UITextArea\n    dropdown: SearchableDropdown<string>\n    saveButton: CBButton\n    deleteButton: CBButton\n    addButton: CBButton\n    itemKeyTextField: CBTextField\n    itemTitleOrAttachedObjectTextArea: UITextArea\n    \n    languageKeysTextArea: UITextArea\n    deleteLanguageButton: CBButton\n    \n    \n    clearLanguageButton: CBButton\n    dataTextArea: UITextArea\n    dataTextJSONLabel: UITextView\n    loadJSONDataButton: CBButton\n    \n    constructor(view) {\n        \n        super(view)\n        \n        // Code for further setup if necessary\n        \n        this.loadSubviews()\n        \n    }\n    \n    \n    static readonly routeComponentName = \"internal_language_settings\"\n    \n    static readonly ParameterIdentifierName = {}\n    \n    \n    loadSubviews() {\n        \n        \n        this.view.backgroundColor = UIColor.whiteColor\n        \n        \n        this.titleLabel = new UITextView(this.view.elementID + \"TitleLabel\", UITextView.type.header2)\n        this.titleLabel.text = \"Internal language settings\"\n        this.view.addSubview(this.titleLabel)\n        \n        \n        \n        \n        \n        this.languageKeyTextField = new CBTextField(this.view.elementID + \"LanguageKeyTextField\")\n        this.languageKeyTextField.placeholderText = \"Language key\"\n        this.view.addSubview(this.languageKeyTextField)\n        \n        this.languageKeysTextArea = new UITextArea(this.view.elementID + \"LanguageKeysTextArea\")\n        this.languageKeysTextArea.placeholderText = \"Available language keys\"\n        this.view.addSubview(this.languageKeysTextArea)\n        \n        \n        this.loadButton = new CBButton(this.view.elementID + \"LoadButton\")\n        this.loadButton.titleLabel.text = \"Load\"\n        this.view.addSubview(this.loadButton)\n        \n        this.saveButton = new CBButton(this.view.elementID + \"SaveButton\")\n        this.saveButton.titleLabel.setText(\"internalLanguageSettingsViewControllerSaveButton\", \"Save\")\n        this.view.addSubview(this.saveButton)\n        \n        \n        // this.textArea = new UITextArea(this.view.elementID + \"TextArea\")\n        // this.view.addSubview(this.textArea)\n        \n        \n        this.dropdown = new SearchableDropdown(this.view.elementID + \"SearchableDropdown\")\n        this.dropdown._controlEventTargets[UIView.controlEvent.PointerUpInside] = []\n        this.dropdown._controlEventTargets[UIView.controlEvent.EnterDown] = []\n        this.dropdown._dialogView = nil\n        this.dropdown.isSingleSelection = YES\n        this.dropdown._rightImageView.imageSource = nil\n        this.dropdown.keepFocusedRowVisible = NO\n        this.view.addSubview(this.dropdown)\n        \n        this.dropdown._tableView.style.borderWidth = \"1px\"\n        this.dropdown._tableView.style.borderStyle = \"solid\"\n        this.dropdown._tableView.style.borderColor = CBColor.primaryContentColor.stringValue\n        this.view.addSubview(this.dropdown._tableView)\n        \n        \n        \n        \n        this.addButton = new CBButton(this.view.elementID + \"AddButton\")\n        this.addButton.titleLabel.text = \"Add text\"\n        this.addButton.setBackgroundColorsWithNormalColor(UIColor.greenColor)\n        this.view.addSubview(this.addButton)\n        \n        this.deleteButton = new CBButton(this.view.elementID + \"DeleteButton\")\n        this.deleteButton.titleLabel.text = \"Delete text\"\n        this.deleteButton.setBackgroundColorsWithNormalColor(UIColor.redColor)\n        this.view.addSubview(this.deleteButton)\n        \n        \n        this.deleteLanguageButton = new CBButton(this.view.elementID + \"DeleteLanguageButton\")\n        this.deleteLanguageButton.titleLabel.text = \"Delete language\"\n        this.deleteLanguageButton.setBackgroundColorsWithNormalColor(UIColor.redColor)\n        this.view.addSubview(this.deleteLanguageButton)\n        \n        this.clearLanguageButton = new CBButton(this.view.elementID + \"ClearLanguageButton\")\n        this.clearLanguageButton.titleLabel.text = \"Clear language\"\n        this.clearLanguageButton.setBackgroundColorsWithNormalColor(UIColor.redColor)\n        this.view.addSubview(this.clearLanguageButton)\n        \n        \n        \n        \n        \n        this.itemKeyTextField = new CBTextField(this.view.elementID + \"ItemKeyTextField\")\n        this.itemKeyTextField.placeholderText = \"Item key\"\n        this.view.addSubview(this.itemKeyTextField)\n        \n        this.itemTitleOrAttachedObjectTextArea = new UITextArea(this.view.elementID +\n            \"ItemTitleOrAttachedObjectTextArea\")\n        this.itemTitleOrAttachedObjectTextArea.placeholderText = \"Title\"\n        this.view.addSubview(this.itemTitleOrAttachedObjectTextArea)\n        \n        this.itemTitleDidChange()\n        \n        \n        \n        \n        \n        this.dataTextJSONLabel = new UITextView(this.view.elementID + \"DataTextJSONLabel\")\n        this.dataTextJSONLabel.text = \"Data in JSON format\"\n        this.view.addSubview(this.dataTextJSONLabel)\n        \n        this.dataTextArea = new UITextArea(this.view.elementID + \"DataTextArea\")\n        this.dataTextArea.placeholderText = \"Data in JSON format\"\n        this.view.addSubview(this.dataTextArea)\n        \n        \n        this.loadJSONDataButton = new CBButton(this.view.elementID + \"LoadJSONDataButton\")\n        this.loadJSONDataButton.titleLabel.text = \"Load JSON data\"\n        this.view.addSubview(this.loadJSONDataButton)\n        \n        \n        this.dropdown.addTargetForControlEvent(\n            SearchableDropdown.controlEvent.SelectionDidChange,\n            function (\n                this: InternalLanguageSettingsViewController,\n                sender: SearchableDropdown<undefined>,\n                event: Event\n            ) {\n                \n                this.updateitemDetailsView()\n                \n            }.bind(this)\n        )\n        \n        const dropdownViewForRowWithIndexFunction = this.dropdown._tableView.viewForRowWithIndex.bind(this.dropdown._tableView)\n        \n        this.dropdown._tableView.viewForRowWithIndex = function (\n            this: InternalLanguageSettingsViewController,\n            rowIndex: number\n        ) {\n            \n            const row = dropdownViewForRowWithIndexFunction(rowIndex)\n            const dataItem = this.dropdown.drawingData[rowIndex]\n            const key = dataItem.itemCode\n            const value = dataItem.attachedObject\n            \n            if (LanguageService.languageValues[this.languageKeyTextField.text][key] == value) {\n                \n                (row as SearchableDropdownRow).titleText = (row as SearchableDropdownRow).titleText + \" - static\"\n                row.alpha = 0.5\n                \n            }\n            else {\n                \n                row.alpha = 1\n                \n            }\n            \n            return row\n            \n        }.bind(this)\n        \n        \n        \n        \n        \n        this.itemKeyTextField.textField.addTargetForControlEvent(\n            UITextArea.controlEvent.TextChange,\n            function (this: InternalLanguageSettingsViewController, sender: CBTextField, event: Event) {\n                \n                const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n                const previousKey = selectedItem.itemCode\n                const languageObject = LanguageService.languages[this.languageKeyTextField.text]\n                const languageValuesValue = languageObject[previousKey]\n                \n                if (IS_NOT(languageValuesValue)) {\n                    delete languageObject[previousKey]\n                }\n                \n                languageObject[this.itemKeyTextField.text] = selectedItem.attachedObject\n                \n                selectedItem.title = LanguageService.localizedTextObjectForText(this.itemKeyTextField.text)\n                selectedItem.itemCode = this.itemKeyTextField.text\n                selectedItem._id = this.itemKeyTextField.text\n                \n                this.reloadTableData()\n                \n            }.bind(this)\n        )\n        \n        this.itemTitleOrAttachedObjectTextArea.addTargetForControlEvent(\n            UITextArea.controlEvent.TextChange,\n            function (this: InternalLanguageSettingsViewController, sender: CBTextField, event: Event) {\n                \n                this.itemTitleDidChange()\n                this.reloadTableData()\n                \n            }.bind(this)\n        )\n        \n        //this.loadSubjectData()\n        \n        this.updateAvailableKeys()\n        \n        this.loadButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                this.loadData()\n                \n            }.bind(this)\n        )\n        \n        this.saveButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                CBCore.sharedInstance.socketClient.sendMessageForKey(\n                    \"RetrieveLanguageData\",\n                    nil,\n                    function (this: InternalLanguageSettingsViewController, codes: string[]) {\n                        \n                        this.saveData()\n                        \n                    }.bind(this)\n                )\n                \n            }.bind(this)\n        )\n        \n        \n        this.addButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                const title = LanguageService.localizedTextObjectForText(this.itemKeyTextField.text)\n                const itemID = MAKE_ID()\n                \n                const dataRow: CBDropdownDataItem<undefined> = {\n                    \n                    _id: itemID,\n                    title: title,\n                    isADropdownDataRow: YES,\n                    isADropdownDataSection: NO,\n                    \n                    attachedObject: undefined,\n                    \n                    itemCode: nil,\n                    dropdownCode: (this.dropdown.selectedData.firstElement || {} as any).dropdownCodes\n                    \n                }\n                \n                const rowIndex = this.dropdown.selectedIndices.firstElement\n                \n                if (IS_DEFINED(rowIndex)) {\n                    \n                    this.dropdown.drawingData.insertElementAtIndex(rowIndex + 1, dataRow)\n                    this.reloadTableData()\n                    \n                }\n                else {\n                    \n                    this.dropdown.drawingData.push(dataRow)\n                    this.reloadTableData()\n                    this.dropdown._tableView.scrollToBottom()\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        this.deleteButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                const rowIndex = this.dropdown.selectedIndices.firstElement\n                \n                if (IS_DEFINED(rowIndex)) {\n                    \n                    var selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n                    var key = LanguageService.stringForCurrentLanguage(selectedItem.title)\n                    \n                    delete LanguageService.languages[this.languageKeyTextField.text][key]\n                    \n                    this.dropdown.drawingData.removeElementAtIndex(rowIndex)\n                    \n                    this.dropdown.selectedData.removeElementAtIndex(0)\n                    this.dropdown.selectedIndices.removeElementAtIndex(0)\n                    \n                    this.dropdown.selectionDidChange(this.dropdown.selectedData)\n                    \n                }\n                \n                this.reloadTableData()\n                \n            }.bind(this)\n        )\n        \n        this.deleteLanguageButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                if (this.languageKeyTextField.text && confirm(\"Are you sure you want to delete this language?\")) {\n                    \n                    if (confirm(\"This will REMOVE THE LANGUAGE FROM THE SERVER, are you definitely sure?\")) {\n                        \n                        CBCore.sharedInstance.socketClient.sendMessageForKey(\n                            \"DeleteLanguageWithKey\",\n                            this.languageKeyTextField.text,\n                            function (\n                                this: InternalLanguageSettingsViewController,\n                                responseMessage: any,\n                                respondWithMessage: CBSocketMessageSendResponseFunction\n                            ) {\n                                \n                                LanguageService.useStoredLanguageValues(responseMessage)\n                                this.updateAvailableKeys()\n                                this.languageKeyTextField.text = nil\n                                this.dropdown.data = []\n                                this.updateitemDetailsView()\n                                \n                            }.bind(this)\n                        )\n                        \n                    }\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        this.clearLanguageButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                if (this.languageKeyTextField.text && confirm(\"Are you sure you want to clear this language?\")) {\n                    \n                    LanguageService.languages[this.languageKeyTextField.text] = {}\n                    this.dropdown.data = []\n                    this.dropdown.selectedData = []\n                    this.dropdown.selectedIndices = []\n                    this.updateitemDetailsView()\n                    \n                }\n                \n            }.bind(this)\n        )\n        \n        \n        this.loadJSONDataButton.addTargetForControlEvent(\n            UIView.controlEvent.PointerUpInside,\n            function (this: InternalLanguageSettingsViewController, sender: UIButton, event: Event) {\n                \n                this.loadJSONData()\n                \n            }.bind(this)\n        )\n        \n        \n    }\n    \n    \n    reloadTableData() {\n        this.dropdown._tableView.reloadData()\n        const dataToShow = {}\n        this.dropdown.drawingData.forEach(function (dataItem, index, array) {\n            \n            dataToShow[FIRST(dataItem.itemCode, dataItem._id)] = dataItem.attachedObject\n            \n        })\n        this.dataTextArea.text = JSON.stringify(dataToShow, null, 2)\n    }\n    \n    \n    updateAvailableKeys() {\n        const codes = LanguageService.languages.allKeys\n        this.languageKeysTextArea.text = \"Saved keys: \" + JSON.stringify(codes)\n        if (codes.length && IS_NOT(this.languageKeyTextField.text)) {\n            this.languageKeyTextField.text = codes.firstElement\n            this.loadData()\n        }\n    }\n    \n    \n    updateitemDetailsView() {\n        const selectedItem: CBDropdownDataItem<undefined> = this.dropdown.selectedData.firstElement || nil\n        if (IS(selectedItem)) {\n            this.itemKeyTextField.text = LanguageService.stringForCurrentLanguage(selectedItem.title)\n            this.itemTitleOrAttachedObjectTextArea.text = selectedItem.attachedObject\n            this.itemTitleDidChange()\n        }\n    }\n    \n    loadData() {\n        \n        this._triggerLayoutViewSubviews()\n        const dropdownData: CBDropdownDataItem<string>[] = []\n        \n        LanguageService.languages[this.languageKeyTextField.text].forEach(function (value, key) {\n            \n            dropdownData.push({\n                \n                _id: key,\n                title: LanguageService.localizedTextObjectForText(key),\n                itemCode: key,\n                dropdownCode: \"Aasdasdasdasdasdasdasd\",\n                isADropdownDataRow: YES,\n                isADropdownDataSection: NO,\n                \n                attachedObject: value\n                \n            })\n            \n        })\n        \n        this.dropdown.selectedData.removeElementAtIndex(0)\n        this.dropdown.selectedIndices.removeElementAtIndex(0)\n        this.dropdown.data = dropdownData\n        \n        this.reloadTableData()\n        this.updateitemDetailsView()\n        \n    }\n    \n    \n    saveData() {\n        \n        const languageObject = {}\n        const languageKey = this.languageKeyTextField.text\n        this.dropdown.drawingData.forEach(function (dataItem, index, array) {\n            const staticLanguageObject = LanguageService.languageValues[languageKey]\n            if (IS_NOT(staticLanguageObject[dataItem.itemCode] == dataItem.attachedObject)) {\n                languageObject[dataItem.itemCode] = dataItem.attachedObject\n            }\n        })\n        \n        CBCore.sharedInstance.socketClient.sendMessageForKey(\n            \"RetrieveLanguageData\",\n            nil,\n            function (\n                this: InternalLanguageSettingsViewController,\n                responseMessage: any,\n                respondWithMessage: CBSocketMessageSendResponseFunction\n            ) {\n                \n                responseMessage[this.languageKeyTextField.text] = languageObject\n                \n                // Send the data to server to be saved\n                CBCore.sharedInstance.socketClient.sendMessageForKey(\n                    \"SaveLanguagesData\",\n                    responseMessage,\n                    function (this: InternalLanguageSettingsViewController, response) {\n                        \n                        if (IS_NOT_SOCKET_ERROR(response)) {\n                            CBDialogViewShower.alert(\"Saved successfully.\")\n                            LanguageService.useStoredLanguageValues(response)\n                            this.loadData()\n                            LanguageService.broadcastLanguageChangeEvent()\n                            this.view.rootView.setNeedsLayout()\n                        }\n                        else {\n                            CBDialogViewShower.alert(\"Failed to save dropdown data.\")\n                        }\n                        \n                        this.updateAvailableKeys()\n                        \n                    }.bind(this)\n                )\n                \n            }.bind(this)\n        )\n        \n    }\n    \n    \n    loadJSONData() {\n        \n        let itemTitles: {\n            \n            [x: string]: string\n            \n        } = {}\n        \n        try {\n            itemTitles = JSON.parse(this.dataTextArea.text)\n        } catch (exception) {\n            CBDialogViewShower.alert(exception)\n            return\n        }\n        \n        LanguageService.languages[this.languageKeyTextField.text] = JSON.parse(JSON.stringify(\n            LanguageService.languageValues[this.languageKeyTextField.text]\n        )).objectByCopyingValuesRecursivelyFromObject(itemTitles)\n        \n        this.loadData()\n        this.reloadTableData()\n        \n        if (this.dropdown.selectedIndices.length) {\n            this.dropdown._selectedData = [this.dropdown.drawingData[this.dropdown.selectedIndices.firstElement]]\n        }\n        \n        this.updateitemDetailsView()\n        \n    }\n    \n    \n    itemTitleDidChange() {\n        \n        const selectedItem: CBDropdownDataItem<string> = this.dropdown.selectedData.firstElement || nil\n        selectedItem.attachedObject = this.itemTitleOrAttachedObjectTextArea.text\n        \n        const languageObject = LanguageService.languages[this.languageKeyTextField.text] || {}\n        languageObject[selectedItem.itemCode] = this.itemTitleOrAttachedObjectTextArea.text\n        \n    }\n    \n    \n    loadSubjectData() {\n        \n    \n        \n    }\n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        const inquiryComponent = route.componentWithName(InternalLanguageSettingsViewController.routeComponentName)\n        \n        this.reloadTableData()\n        \n    }\n    \n    \n    layoutViewSubviews() {\n        \n        super.layoutViewSubviews()\n    \n        const padding = this.core.paddingLength\n        const labelHeight = padding\n        \n        // View bounds\n        const bounds = this.view.bounds.rectangleWithInset(padding)\n        \n        this.titleLabel.frame = bounds.rectangleWithHeight(labelHeight * 2)\n        \n        let rowFrame = this.titleLabel.frame.rectangleForNextRow(padding)\n        rowFrame.distributeViewsAlongWidth([this.languageKeyTextField, this.loadButton, this.saveButton], [\n            2, 1, 1\n        ], padding)\n        \n        rowFrame = rowFrame.rectangleForNextRow(padding, labelHeight * 5)\n        this.languageKeysTextArea.frame = rowFrame\n        \n        rowFrame = rowFrame.rectangleForNextRow(padding, labelHeight * 2)\n        this.dropdown.frame = rowFrame.rectangleWithWidth(bounds.width * 0.5 - padding * 0.5)\n        this.dropdown._tableView.frame = this.dropdown.frame.rectangleForNextRow(padding, 500)\n        this.dropdown._tableView.setMargins(0, 0, padding, 0)\n        \n        const deleteAddFrame = this.dropdown.frame.rectangleForNextColumn(padding * 0.5, this.dropdown.frame.width +\n            padding * 0.5)\n        deleteAddFrame.distributeViewsAlongWidth([this.deleteButton, this.addButton], 1, padding)\n        \n        this.itemKeyTextField.frame = deleteAddFrame.rectangleForNextRow(padding)\n        \n        this.itemTitleOrAttachedObjectTextArea.frame = this.itemKeyTextField.frame.rectangleForNextRow(\n            padding,\n            labelHeight *\n            11\n        )\n        \n        this.itemTitleOrAttachedObjectTextArea.frame.rectangleForNextRow(padding, labelHeight *\n            2).distributeViewsEquallyAlongWidth([this.deleteLanguageButton, this.clearLanguageButton], padding)\n        \n        this.dataTextJSONLabel.frame = this.languageKeysTextArea.frame.rectangleWithY(this.dropdown._tableView.frame.max.y +\n            padding).rectangleWithHeight(labelHeight)\n        \n        this.dataTextArea.frame = this.dataTextJSONLabel.frame.rectangleForNextRow(padding, 500)\n        \n        this.dataTextArea.frame.rectangleForNextRow(padding, labelHeight *\n            2).distributeViewsEquallyAlongWidth([this.loadJSONDataButton], padding)\n        \n        this.loadJSONDataButton.setMargins(0, 0, padding, 0)\n        \n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { CBCore } from \"cbcore-ts\"\nimport {\n    IS,\n    nil,\n    NO,\n    UIButton,\n    UIColor,\n    UICore,\n    UIImageView,\n    UIRectangle,\n    UIRoute,\n    UITextView,\n    UIView,\n    UIViewBroadcastEvent,\n    YES\n} from \"uicore-ts\"\nimport { CBColor } from \"./Custom components/CBColor\"\nimport { LanguageService } from \"./LanguageService\"\n\n\n\n\n\nexport class LanguagesDialogView extends UIView {\n    \n    \n    \n    titleLabel: UITextView\n    buttons: UIButton[]\n    _previousLanguageKey: string\n    \n    constructor(elementID: string, element?: HTMLElement) {\n        \n        super(elementID, element)\n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID, viewHTMLElement) {\n        \n        super.initView(elementID, viewHTMLElement)\n        \n        // Adding a title label\n        this.titleLabel = new UITextView(\"LanguagesDialogTitleLabel\", UITextView.type.header1)\n        this.titleLabel.setText(\"selectLanguageTitle\", \"Select language\")\n        this.titleLabel.textAlignment = UITextView.textAlignment.center\n        this.titleLabel.textColor = UIColor.whiteColor\n        this.addSubview(this.titleLabel)\n        \n        // Initializing the buttons array\n        this.buttons = []\n        \n        const languageKeys = Object.keys(LanguageService.languages)\n        \n        languageKeys.forEach(function (this: LanguagesDialogView, languageKey: string, index: number, array: string[]) {\n            \n            const language = LanguageService.languages[languageKey]\n            \n            // Creating a language button\n            const languageButton = new UIButton(\"LeftBarLanguageButton\" + language.languageNameShort)\n            languageButton.titleLabel.text = language.languageName\n            this.buttons.push(languageButton)\n            this.addSubview(languageButton)\n            \n            // Adding a selected image view to the button\n            const selectedImageView = new UIImageView(\"SelectedImage\" + language.languageNameShort)\n            selectedImageView.imageSource = \"images/baseline-check-24px.svg\"\n            selectedImageView.style.filter = \"invert(0.35) sepia(1) saturate(5) hue-rotate(175deg)\"\n            languageButton.addSubview(selectedImageView)\n            \n            // Augmenting button layout function\n            const buttonLayoutFunction = languageButton.layoutSubviews\n            languageButton.layoutSubviews = function () {\n                \n                // Setting frame for the imageView\n                const bounds = languageButton.bounds\n                const padding = 10\n                const imageHeight = bounds.height - 2 * padding\n                selectedImageView.frame = new UIRectangle(bounds.width - imageHeight -\n                    padding, padding, imageHeight, imageHeight)\n                \n                // Calling original function\n                buttonLayoutFunction.call(languageButton)\n                \n            }\n            \n            languageButton.setNeedsLayout()\n            \n            // Setting up button visual dynamics\n            languageButton.updateContentForNormalState = function () {\n                languageButton.titleLabel.textColor = CBColor.primaryContentColor\n                languageButton.backgroundColor = UIColor.whiteColor\n                selectedImageView.hidden = YES\n            }\n            languageButton.updateContentForHighlightedState = function () {\n                languageButton.titleLabel.textColor = CBColor.primaryContentColor\n                languageButton.backgroundColor = UIColor.colorWithRGBA(200, 200, 200)\n            }\n            languageButton.updateContentForSelectedAndHighlightedState = languageButton.updateContentForHighlightedState\n            languageButton.updateContentForSelectedState = function () {\n                languageButton.titleLabel.textColor = CBColor.primaryContentColor\n                languageButton.backgroundColor = UIColor.whiteColor\n                selectedImageView.hidden = NO\n            }\n            languageButton.updateContentForCurrentState()\n            \n            // Setting initial button selected state\n            const currentLanguageKey = UIRoute.currentRoute.componentWithName(\"settings\").parameters.language\n            if (IS(currentLanguageKey)) {\n                if (currentLanguageKey == languageKey) {\n                    languageButton.selected = YES\n                }\n            }\n            else if (languageKey == \"en\") {\n                languageButton.selected = YES\n            }\n            \n            // Adding the button press action\n            languageButton.addTargetForControlEvents([\n                UIView.controlEvent.EnterDown, UIView.controlEvent.PointerUpInside\n            ], function (this: LanguagesDialogView, sender: UIButton, event: Event) {\n                \n                CBCore.sharedInstance.languageKey = languageKey\n                \n                this.buttons.forEach(function (button, index, array) {\n                    button.selected = NO\n                })\n                languageButton.selected = YES\n                \n                LanguageService.updateCurrentLanguageKey()\n                \n                this.rootView.broadcastEventInSubtree({\n                    \n                    name: UIView.broadcastEventName.LanguageChanged,\n                    parameters: nil\n                    \n                })\n                \n                \n                \n                \n            }.bind(this))\n            \n            \n        }, this)\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    wasAddedToViewTree() {\n        \n        super.wasAddedToViewTree()\n        \n        this._previousLanguageKey = LanguageService.currentLanguageKey\n        \n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n    \n    \n        if (event.name == UICore.broadcastEventName.RouteDidChange && this._previousLanguageKey !=\n            LanguageService.currentLanguageKey) {\n        \n            this._previousLanguageKey = LanguageService.currentLanguageKey\n        \n            this.rootView.broadcastEventInSubtree({\n            \n                name: UIView.broadcastEventName.LanguageChanged,\n                parameters: nil\n            \n            })\n            \n            \n            \n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        if (this.hidden) {\n            return\n        }\n        \n        const maxWidth = 350\n        if (this.bounds.width > maxWidth) {\n            this.bounds = this.bounds.rectangleWithWidth(maxWidth)\n        }\n        \n        // Variables\n        const bounds = this.bounds\n        const sidePadding = 20 * 0\n        \n        this.titleLabel.frame = new UIRectangle(sidePadding, sidePadding, 50, bounds.width - sidePadding * 2)\n        \n        var previousFrame = this.titleLabel.frame\n        this.buttons.forEach(function (button, index, array) {\n            \n            button.frame = previousFrame.rectangleWithY(previousFrame.max.y + 1).rectangleWithWidth(bounds.width -\n                sidePadding * 2)\n            previousFrame = button.frame\n            \n        })\n        \n        \n        this.bounds = bounds.rectangleWithHeight(this.intrinsicContentHeight(bounds.width))\n        \n        this.style.maxHeight = \"\" + bounds.height.integerValue + \"px\"\n        \n        this.centerInContainer()\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { CBLanguageService } from \"cbcore-ts\"\nimport { UICore } from \"uicore-ts\"\n\n\nexport class LanguageService extends CBLanguageService {\n    \n    static languageValues = {\n        \n        en: {\n            \n            languageName: \"English\",\n            languageNameShort: \"ENG\",\n            \n            topBarTitle: \"UICore application\",\n            \n            selectLanguageTitle: \"Select language\",\n            leftBarTitle: \"Title\"\n            \n            \n        },\n        est: {\n            \n            languageName: \"Eesti keel\",\n            languageNameShort: \"EST\",\n            \n            topBarTitle: \"UICore rakendus\",\n            \n            selectLanguageTitle: \"Vali keel\",\n            leftBarTitle: \"Pealkiri\"\n            \n            \n        }\n        \n        \n    }\n    \n    \n}\n\n\nUICore.languageService = LanguageService\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { UIColor, UIRoute, UITextView, UIViewController } from \"uicore-ts\"\n\n\nexport class SomeContentViewController extends UIViewController {\n    \n    readonly titleLabel: UITextView\n    \n    constructor(view) {\n        \n        super(view)\n        \n        // Code for further setup if necessary\n        \n        this.view.backgroundColor = UIColor.whiteColor\n        \n        this.titleLabel = new UITextView(this.view.elementID + \"TitleLabel\", UITextView.type.header2)\n        this.titleLabel.localizedTextObject = { en: \"Some content\", est: \"Mingi sisu\" }\n        this.view.addSubview(this.titleLabel)\n        \n    }\n    \n    \n    static readonly routeComponentName = \"somecontent\"\n    \n    static readonly ParameterIdentifierName = {}\n    \n    async viewDidAppear() {\n    \n    }\n    \n    \n    async viewWillDisappear() {\n    \n    }\n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        const inquiryComponent = route.componentWithName(SomeContentViewController.routeComponentName)\n        \n    }\n    \n    \n    updateViewConstraints() {\n        \n        super.updateViewConstraints()\n        \n    }\n    \n    \n    updateViewStyles() {\n        \n        super.updateViewStyles()\n        \n    }\n    \n    \n    viewDidLayoutSubviews() {\n        \n        super.viewDidLayoutSubviews()\n        \n    }\n    \n    \n    layoutViewSubviews() {\n        \n        super.layoutViewSubviews()\n        \n        const padding = this.core.paddingLength\n        const labelHeight = padding\n        \n        // View bounds\n        const bounds = this.view.bounds.rectangleWithInset(padding)\n        \n        this.titleLabel.frame = bounds.rectangleWithHeight(labelHeight * 2)\n        \n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { nil, UIColor, UITextView, UIView } from \"uicore-ts\"\nimport { CBColor } from \"./Custom components/CBColor\"\n\n\n\n\n\nexport class TopBarView extends UIView {\n    \n    \n    titleLabel: UITextView\n    \n    constructor(elementID, element) {\n        \n        super(elementID, element)\n        \n    }\n    \n    \n    \n    initView() {\n        \n        super.initView(nil, nil)\n        \n        this.backgroundColor = CBColor.whiteColor\n        this.initStyleSelector(\".\" + this.styleClassName, \"position: static; left: 0; right: 0; top: 0; height: 50px;\")\n        this.addStyleClass(\"TopBarView\")\n        \n        this.setBorder(nil, 0, CBColor.primaryContentColor)\n        this.style.borderBottomWidth = \"1px\"\n        \n        this.style.fontSize = \"15pt\"\n        \n        \n        this.titleLabel = new UITextView(\"TopBarTitleLabel\")\n        this.titleLabel.setText(\"topBarTitle\", \"TestPage\")\n        this.titleLabel.textColor = CBColor.primaryContentColor\n        this.titleLabel.fontSize = 25\n        this.addSubview(this.titleLabel);\n        \n        this.style.zIndex = \"10\"\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        // Variables\n        const bounds = this.bounds\n        const sidePadding = 10\n        \n        \n        // Title\n        this.titleLabel.centerInContainer()\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": ["__export", "__toCommonJS", "__export", "__toCommonJS", "YES", "NO", "__export", "FIRST", "FIRST_OR_NIL", "IF", "IS", "IS_DEFINED", "IS_NOT", "IS_NOT_NIL", "IS_UNDEFINED", "MAKE_ID", "NO", "RETURNER", "UIObject", "YES", "nil", "__toCommonJS", "sourceValue", "__export", "__toCommonJS", "__export", "UIColor", "__toCommonJS", "__export", "__toCommonJS", "YES", "NO", "__async", "result", "promisedProperties", "__export", "UIRoute", "__toCommonJS", "index", "array", "self", "__export", "UIViewController", "__toCommonJS", "__async", "event", "__export", "UICore", "__toCommonJS", "event", "__export", "__toCommonJS", "__export", "UIRectangle", "__toCommonJS", "__export", "UIView", "__toCommonJS", "view", "i", "event", "onTouchZoom", "__export", "UITextView", "__toCommonJS", "event", "__export", "UITextField", "__toCommonJS", "event", "__export", "UITextArea", "__toCommonJS", "__export", "__toCommonJS", "event", "__export", "UIImageView", "__toCommonJS", "event", "__export", "UIButton", "__toCommonJS", "__export", "__toCommonJS", "event", "__export", "UITableView", "__toCommonJS", "view", "event", "Worker", "__export", "__toCommonJS", "__toESM", "UIStringFilterWebWorker", "__export", "__toCommonJS", "event", "__export", "__toCommonJS", "event", "index", "self", "__export", "__toCommonJS", "event", "__export", "__toCommonJS", "event", "__export", "__toCommonJS", "Worker", "__export", "UIKeyValueStringFilter", "__toCommonJS", "__toESM", "UIKeyValueStringFilterWebWorker", "Worker", "__export", "__toCommonJS", "__toESM", "UIKeyValueStringSorterWebWorker", "__export", "UIDialogView", "__toCommonJS", "event", "__export", "__toCommonJS", "event", "__export", "UIActionIndicator", "__toCommonJS", "__toCommonJS", "__export", "UIRootViewController", "__toCommonJS", "__async", "__superGet", "__toCommonJS", "__export", "__toCommonJS", "__export", "__toCommonJS", "YES", "NO", "__export", "FIRST", "FIRST_OR_NIL", "IF", "IS", "IS_DEFINED", "IS_NOT", "IS_NOT_NIL", "IS_UNDEFINED", "MAKE_ID", "NO", "RETURNER", "UIObject", "YES", "nil", "__toCommonJS", "sourceValue", "__export", "__toCommonJS", "__export", "UIColor", "__toCommonJS", "__export", "__toCommonJS", "YES", "NO", "__async", "result", "promisedProperties", "__export", "UIRoute", "__toCommonJS", "index", "array", "self", "__export", "UIViewController", "__toCommonJS", "__async", "event", "__export", "UICore", "__toCommonJS", "event", "__export", "__toCommonJS", "__export", "UIRectangle", "__toCommonJS", "__export", "UIView", "__toCommonJS", "view", "i", "event", "onTouchZoom", "__export", "UITextView", "__toCommonJS", "event", "__export", "UITextField", "__toCommonJS", "event", "__export", "UITextArea", "__toCommonJS", "__export", "__toCommonJS", "event", "__export", "UIImageView", "__toCommonJS", "event", "__export", "UIButton", "__toCommonJS", "__export", "__toCommonJS", "event", "__export", "UITableView", "__toCommonJS", "view", "event", "UIStringFilterWebWorker_worker_exports", "Worker", "init_UIStringFilterWebWorker_worker", "__export", "__toCommonJS", "__toESM", "UIStringFilterWebWorker", "__export", "__toCommonJS", "event", "__export", "__toCommonJS", "event", "index", "self", "__export", "__toCommonJS", "event", "__export", "__toCommonJS", "event", "__export", "__toCommonJS", "UIKeyValueStringFilterWebWorker_worker_exports", "Worker", "init_UIKeyValueStringFilterWebWorker_worker", "__export", "UIKeyValueStringFilter", "__toCommonJS", "__toESM", "UIKeyValueStringFilterWebWorker", "UIKeyValueStringSorterWebWorker_worker_exports", "Worker", "init_UIKeyValueStringSorterWebWorker_worker", "__export", "__toCommonJS", "__toESM", "UIKeyValueStringSorterWebWorker", "__export", "UIDialogView", "__toCommonJS", "event", "__export", "__toCommonJS", "event", "__export", "UIActionIndicator", "__toCommonJS", "__toCommonJS", "__export", "UIRootViewController", "__toCommonJS", "__async", "__superGet", "__toCommonJS", "__export", "CBLanguageService", "__toCommonJS", "import_uicore_ts", "key", "__export", "__toCommonJS", "import_uicore_ts", "URL", "event", "event", "self", "require_cjs", "require_cjs", "PacketType", "require_socket", "self", "self", "socket", "require_cjs", "e", "t", "n", "r", "u", "a", "s", "o", "i", "f", "c", "l", "d", "h", "p", "__export", "__toCommonJS", "__toESM", "import_uicore_ts", "objectHash", "__export", "CBSocketClient", "IS_NOT_SOCKET_ERROR", "SocketClient", "__toCommonJS", "import_uicore_ts", "completion", "messageObject", "__export", "CBCore", "__toCommonJS", "import_uicore_ts", "event", "__export", "__toCommonJS", "CBAuthenticationSource", "__toCommonJS", "import_uicore_ts", "import_cbcore_ts", "import_uicore_ts", "import_uicore_ts", "import_uicore_ts", "import_cbcore_ts", "import_uicore_ts", "import_uicore_ts", "event", "import_uicore_ts", "import_uicore_ts", "import_uicore_ts", "import_cbcore_ts", "import_uicore_ts", "event", "import_cbcore_ts", "event", "import_uicore_ts", "event", "import_cbcore_ts", "import_uicore_ts", "import_cbcore_ts", "import_uicore_ts", "import_cbcore_ts", "import_uicore_ts", "event", "event", "index", "array", "event", "index", "array", "import_uicore_ts", "import_cbcore_ts", "import_cbcore_ts", "event", "import_cbcore_ts", "import_uicore_ts", "import_cbcore_ts", "import_uicore_ts", "LanguageService", "LanguageService", "event", "index", "array", "import_uicore_ts", "import_uicore_ts", "LanguageService", "event"]
}
